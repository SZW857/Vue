{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nconst chToPath = require('./ch-to-path');\nconst random = require('./random');\nconst optionMngr = require('./option-manager');\nconst opts = optionMngr.options;\nconst getLineNoise = function (width, height, options) {\n  const hasColor = options.color;\n  const noiseLines = [];\n  const min = options.inverse ? 7 : 1;\n  const max = options.inverse ? 15 : 9;\n  let i = -1;\n  while (++i < options.noise) {\n    const start = `${random.int(1, 21)} ${random.int(1, height - 1)}`;\n    const end = `${random.int(width - 21, width - 1)} ${random.int(1, height - 1)}`;\n    const mid1 = `${random.int(width / 2 - 21, width / 2 + 21)} ${random.int(1, height - 1)}`;\n    const mid2 = `${random.int(width / 2 - 21, width / 2 + 21)} ${random.int(1, height - 1)}`;\n    const color = hasColor ? random.color() : random.greyColor(min, max);\n    noiseLines.push(`<path d=\"M${start} C${mid1},${mid2},${end}\" stroke=\"${color}\" fill=\"none\"/>`);\n  }\n  return noiseLines;\n};\nconst getText = function (text, width, height, options) {\n  const len = text.length;\n  const spacing = (width - 2) / (len + 1);\n  const min = options.inverse ? 10 : 0;\n  const max = options.inverse ? 14 : 4;\n  let i = -1;\n  const out = [];\n  while (++i < len) {\n    const x = spacing * (i + 1);\n    const y = height / 2;\n    const charPath = chToPath(text[i], Object.assign({\n      x,\n      y\n    }, options));\n    const color = options.color ? random.color(options.background) : random.greyColor(min, max);\n    out.push(`<path fill=\"${color}\" d=\"${charPath}\"/>`);\n  }\n  return out;\n};\nconst createCaptcha = function (text, options) {\n  text = text || random.captchaText();\n  options = Object.assign({}, opts, options);\n  const width = options.width;\n  const height = options.height;\n  const bg = options.background;\n  if (bg) {\n    options.color = true;\n  }\n  const bgRect = bg ? `<rect width=\"100%\" height=\"100%\" fill=\"${bg}\"/>` : '';\n  const paths = [].concat(getLineNoise(width, height, options)).concat(getText(text, width, height, options)).sort(() => Math.random() - 0.5).join('');\n  const start = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\" viewBox=\"0,0,${width},${height}\">`;\n  const xml = `${start}${bgRect}${paths}</svg>`;\n  return xml;\n};\nconst create = function (options) {\n  const text = random.captchaText(options);\n  const data = createCaptcha(text, options);\n  return {\n    text,\n    data\n  };\n};\nconst createMathExpr = function (options) {\n  const expr = random.mathExpr(options.mathMin, options.mathMax, options.mathOperator);\n  const text = expr.text;\n  const data = createCaptcha(expr.equation, options);\n  return {\n    text,\n    data\n  };\n};\nmodule.exports = createCaptcha;\nmodule.exports.randomText = random.captchaText;\nmodule.exports.create = create;\nmodule.exports.createMathExpr = createMathExpr;\nmodule.exports.options = opts;\nmodule.exports.loadFont = optionMngr.loadFont;","map":{"version":3,"names":["chToPath","require","random","optionMngr","opts","options","getLineNoise","width","height","hasColor","color","noiseLines","min","inverse","max","i","noise","start","int","end","mid1","mid2","greyColor","push","getText","text","len","length","spacing","out","x","y","charPath","Object","assign","background","createCaptcha","captchaText","bg","bgRect","paths","concat","sort","Math","join","xml","create","data","createMathExpr","expr","mathExpr","mathMin","mathMax","mathOperator","equation","module","exports","randomText","loadFont"],"sources":["C:/Users/14486/Desktop/社区公益系统前端/vue_community/node_modules/_svg-captcha@1.4.0@svg-captcha/lib/index.js"],"sourcesContent":["'use strict';\r\nconst chToPath = require('./ch-to-path');\r\nconst random = require('./random');\r\nconst optionMngr = require('./option-manager');\r\n\r\nconst opts = optionMngr.options;\r\n\r\nconst getLineNoise = function (width, height, options) {\r\n\tconst hasColor = options.color;\r\n\tconst noiseLines = [];\r\n\tconst min = options.inverse ? 7 : 1;\r\n\tconst max = options.inverse ? 15 : 9;\r\n\tlet i = -1;\r\n\r\n\twhile (++i < options.noise) {\r\n\t\tconst start = `${random.int(1, 21)} ${random.int(1, height - 1)}`;\r\n\t\tconst end = `${random.int(width - 21, width - 1)} ${random.int(1, height - 1)}`;\r\n\t\tconst mid1 = `${random.int((width / 2) - 21, (width / 2) + 21)} ${random.int(1, height - 1)}`;\r\n\t\tconst mid2 = `${random.int((width / 2) - 21, (width / 2) + 21)} ${random.int(1, height - 1)}`;\r\n\t\tconst color = hasColor ? random.color() : random.greyColor(min, max);\r\n\t\tnoiseLines.push(`<path d=\"M${start} C${mid1},${mid2},${end}\" stroke=\"${color}\" fill=\"none\"/>`);\r\n\t}\r\n\r\n\treturn noiseLines;\r\n};\r\n\r\nconst getText = function (text, width, height, options) {\r\n\tconst len = text.length;\r\n\tconst spacing = (width - 2) / (len + 1);\r\n\tconst min = options.inverse ? 10 : 0;\r\n\tconst max = options.inverse ? 14 : 4;\r\n\tlet i = -1;\r\n\tconst out = [];\r\n\r\n\twhile (++i < len) {\r\n\t\tconst x = spacing * (i + 1);\r\n\t\tconst y = height / 2;\r\n\t\tconst charPath = chToPath(text[i], Object.assign({x, y}, options));\r\n\r\n\t\tconst color = options.color ?\r\n\t\t\trandom.color(options.background) : random.greyColor(min, max);\r\n\t\tout.push(`<path fill=\"${color}\" d=\"${charPath}\"/>`);\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\nconst createCaptcha = function (text, options) {\r\n\ttext = text || random.captchaText();\r\n\toptions = Object.assign({}, opts, options);\r\n\tconst width = options.width;\r\n\tconst height = options.height;\r\n\tconst bg = options.background;\r\n\tif (bg) {\r\n\t\toptions.color = true;\r\n\t}\r\n\r\n\tconst bgRect = bg ?\r\n\t\t`<rect width=\"100%\" height=\"100%\" fill=\"${bg}\"/>` : '';\r\n\tconst paths =\r\n\t\t[].concat(getLineNoise(width, height, options))\r\n\t\t\t.concat(getText(text, width, height, options))\r\n\t\t\t.sort(() => Math.random() - 0.5)\r\n\t\t\t.join('');\r\n\tconst start = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\" viewBox=\"0,0,${width},${height}\">`;\r\n\tconst xml = `${start}${bgRect}${paths}</svg>`;\r\n\r\n\treturn xml;\r\n};\r\n\r\nconst create = function (options) {\r\n\tconst text = random.captchaText(options);\r\n\tconst data = createCaptcha(text, options);\r\n\r\n\treturn {text, data};\r\n};\r\n\r\nconst createMathExpr = function (options) {\r\n\tconst expr = random.mathExpr(options.mathMin, options.mathMax, options.mathOperator);\r\n\tconst text = expr.text;\r\n\tconst data = createCaptcha(expr.equation, options);\r\n\r\n\treturn {text, data};\r\n};\r\n\r\nmodule.exports = createCaptcha;\r\nmodule.exports.randomText = random.captchaText;\r\nmodule.exports.create = create;\r\nmodule.exports.createMathExpr = createMathExpr;\r\nmodule.exports.options = opts;\r\nmodule.exports.loadFont = optionMngr.loadFont;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}