{"ast":null,"code":"// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n  const hhea = {};\n  const p = new parse.Parser(data, start);\n  hhea.version = p.parseVersion();\n  hhea.ascender = p.parseShort();\n  hhea.descender = p.parseShort();\n  hhea.lineGap = p.parseShort();\n  hhea.advanceWidthMax = p.parseUShort();\n  hhea.minLeftSideBearing = p.parseShort();\n  hhea.minRightSideBearing = p.parseShort();\n  hhea.xMaxExtent = p.parseShort();\n  hhea.caretSlopeRise = p.parseShort();\n  hhea.caretSlopeRun = p.parseShort();\n  hhea.caretOffset = p.parseShort();\n  p.relativeOffset += 8;\n  hhea.metricDataFormat = p.parseShort();\n  hhea.numberOfHMetrics = p.parseUShort();\n  return hhea;\n}\nfunction makeHheaTable(options) {\n  return new table.Table('hhea', [{\n    name: 'version',\n    type: 'FIXED',\n    value: 0x00010000\n  }, {\n    name: 'ascender',\n    type: 'FWORD',\n    value: 0\n  }, {\n    name: 'descender',\n    type: 'FWORD',\n    value: 0\n  }, {\n    name: 'lineGap',\n    type: 'FWORD',\n    value: 0\n  }, {\n    name: 'advanceWidthMax',\n    type: 'UFWORD',\n    value: 0\n  }, {\n    name: 'minLeftSideBearing',\n    type: 'FWORD',\n    value: 0\n  }, {\n    name: 'minRightSideBearing',\n    type: 'FWORD',\n    value: 0\n  }, {\n    name: 'xMaxExtent',\n    type: 'FWORD',\n    value: 0\n  }, {\n    name: 'caretSlopeRise',\n    type: 'SHORT',\n    value: 1\n  }, {\n    name: 'caretSlopeRun',\n    type: 'SHORT',\n    value: 0\n  }, {\n    name: 'caretOffset',\n    type: 'SHORT',\n    value: 0\n  }, {\n    name: 'reserved1',\n    type: 'SHORT',\n    value: 0\n  }, {\n    name: 'reserved2',\n    type: 'SHORT',\n    value: 0\n  }, {\n    name: 'reserved3',\n    type: 'SHORT',\n    value: 0\n  }, {\n    name: 'reserved4',\n    type: 'SHORT',\n    value: 0\n  }, {\n    name: 'metricDataFormat',\n    type: 'SHORT',\n    value: 0\n  }, {\n    name: 'numberOfHMetrics',\n    type: 'USHORT',\n    value: 0\n  }], options);\n}\nexport default {\n  parse: parseHheaTable,\n  make: makeHheaTable\n};","map":{"version":3,"names":["parse","table","parseHheaTable","data","start","hhea","p","Parser","version","parseVersion","ascender","parseShort","descender","lineGap","advanceWidthMax","parseUShort","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","relativeOffset","metricDataFormat","numberOfHMetrics","makeHheaTable","options","Table","name","type","value","make"],"sources":["C:/Users/14486/Desktop/社区公益系统前端/vue_community/node_modules/_opentype.js@0.7.3@opentype.js/src/tables/hhea.js"],"sourcesContent":["// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    const hhea = {};\n    const p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexport default { parse: parseHheaTable, make: makeHheaTable };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}