{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar lodashUnified = require('lodash-unified');\nrequire('../../../directives/index.js');\nrequire('../../../hooks/index.js');\nvar index$4 = require('../../scrollbar/index.js');\nvar helper = require('./store/helper.js');\nvar tableLayout = require('./table-layout.js');\nvar index$1 = require('./table-header/index.js');\nvar index$2 = require('./table-body/index.js');\nvar index$3 = require('./table-footer/index.js');\nvar utilsHelper = require('./table/utils-helper.js');\nvar styleHelper = require('./table/style-helper.js');\nvar defaults = require('./table/defaults.js');\nvar tokens = require('./tokens.js');\nvar hHelper = require('./h-helper.js');\nvar useScrollbar = require('./composables/use-scrollbar.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../directives/mousewheel/index.js');\nvar index$5 = require('../../../hooks/use-locale/index.js');\nvar index$6 = require('../../../hooks/use-namespace/index.js');\nlet tableIdSeed = 1;\nconst _sfc_main = vue.defineComponent({\n  name: \"ElTable\",\n  directives: {\n    Mousewheel: index[\"default\"]\n  },\n  components: {\n    TableHeader: index$1[\"default\"],\n    TableBody: index$2[\"default\"],\n    TableFooter: index$3[\"default\"],\n    ElScrollbar: index$4.ElScrollbar,\n    hColgroup: hHelper.hColgroup\n  },\n  props: defaults[\"default\"],\n  emits: [\"select\", \"select-all\", \"selection-change\", \"cell-mouse-enter\", \"cell-mouse-leave\", \"cell-contextmenu\", \"cell-click\", \"cell-dblclick\", \"row-click\", \"row-contextmenu\", \"row-dblclick\", \"header-click\", \"header-contextmenu\", \"sort-change\", \"filter-change\", \"current-change\", \"header-dragend\", \"expand-change\"],\n  setup(props) {\n    const {\n      t\n    } = index$5.useLocale();\n    const ns = index$6.useNamespace(\"table\");\n    const table = vue.getCurrentInstance();\n    vue.provide(tokens.TABLE_INJECTION_KEY, table);\n    const store = helper.createStore(table, props);\n    table.store = store;\n    const layout = new tableLayout[\"default\"]({\n      store: table.store,\n      table,\n      fit: props.fit,\n      showHeader: props.showHeader\n    });\n    table.layout = layout;\n    const isEmpty = vue.computed(() => (store.states.data.value || []).length === 0);\n    const {\n      setCurrentRow,\n      getSelectionRows,\n      toggleRowSelection,\n      clearSelection,\n      clearFilter,\n      toggleAllSelection,\n      toggleRowExpansion,\n      clearSort,\n      sort\n    } = utilsHelper[\"default\"](store);\n    const {\n      isHidden,\n      renderExpanded,\n      setDragVisible,\n      isGroup,\n      handleMouseLeave,\n      handleHeaderFooterMousewheel,\n      tableSize,\n      emptyBlockStyle,\n      handleFixedMousewheel,\n      resizeProxyVisible,\n      bodyWidth,\n      resizeState,\n      doLayout,\n      tableBodyStyles,\n      tableLayout: tableLayout$1,\n      scrollbarViewStyle,\n      tableInnerStyle,\n      scrollbarStyle\n    } = styleHelper[\"default\"](props, layout, store, table);\n    const {\n      scrollBarRef,\n      scrollTo,\n      setScrollLeft,\n      setScrollTop\n    } = useScrollbar.useScrollbar();\n    const debouncedUpdateLayout = lodashUnified.debounce(doLayout, 50);\n    const tableId = `${ns.namespace.value}-table_${tableIdSeed++}`;\n    table.tableId = tableId;\n    table.state = {\n      isGroup,\n      resizeState,\n      doLayout,\n      debouncedUpdateLayout\n    };\n    const computedSumText = vue.computed(() => props.sumText || t(\"el.table.sumText\"));\n    const computedEmptyText = vue.computed(() => {\n      return props.emptyText || t(\"el.table.emptyText\");\n    });\n    return {\n      ns,\n      layout,\n      store,\n      handleHeaderFooterMousewheel,\n      handleMouseLeave,\n      tableId,\n      tableSize,\n      isHidden,\n      isEmpty,\n      renderExpanded,\n      resizeProxyVisible,\n      resizeState,\n      isGroup,\n      bodyWidth,\n      tableBodyStyles,\n      emptyBlockStyle,\n      debouncedUpdateLayout,\n      handleFixedMousewheel,\n      setCurrentRow,\n      getSelectionRows,\n      toggleRowSelection,\n      clearSelection,\n      clearFilter,\n      toggleAllSelection,\n      toggleRowExpansion,\n      clearSort,\n      doLayout,\n      sort,\n      t,\n      setDragVisible,\n      context: table,\n      computedSumText,\n      computedEmptyText,\n      tableLayout: tableLayout$1,\n      scrollbarViewStyle,\n      tableInnerStyle,\n      scrollbarStyle,\n      scrollBarRef,\n      scrollTo,\n      setScrollLeft,\n      setScrollTop\n    };\n  }\n});\nconst _hoisted_1 = [\"data-prefix\"];\nconst _hoisted_2 = {\n  ref: \"hiddenColumns\",\n  class: \"hidden-columns\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_hColgroup = vue.resolveComponent(\"hColgroup\");\n  const _component_table_header = vue.resolveComponent(\"table-header\");\n  const _component_table_body = vue.resolveComponent(\"table-body\");\n  const _component_el_scrollbar = vue.resolveComponent(\"el-scrollbar\");\n  const _component_table_footer = vue.resolveComponent(\"table-footer\");\n  const _directive_mousewheel = vue.resolveDirective(\"mousewheel\");\n  return vue.openBlock(), vue.createElementBlock(\"div\", {\n    ref: \"tableWrapper\",\n    class: vue.normalizeClass([{\n      [_ctx.ns.m(\"fit\")]: _ctx.fit,\n      [_ctx.ns.m(\"striped\")]: _ctx.stripe,\n      [_ctx.ns.m(\"border\")]: _ctx.border || _ctx.isGroup,\n      [_ctx.ns.m(\"hidden\")]: _ctx.isHidden,\n      [_ctx.ns.m(\"group\")]: _ctx.isGroup,\n      [_ctx.ns.m(\"fluid-height\")]: _ctx.maxHeight,\n      [_ctx.ns.m(\"scrollable-x\")]: _ctx.layout.scrollX.value,\n      [_ctx.ns.m(\"scrollable-y\")]: _ctx.layout.scrollY.value,\n      [_ctx.ns.m(\"enable-row-hover\")]: !_ctx.store.states.isComplex.value,\n      [_ctx.ns.m(\"enable-row-transition\")]: (_ctx.store.states.data.value || []).length !== 0 && (_ctx.store.states.data.value || []).length < 100,\n      \"has-footer\": _ctx.showSummary\n    }, _ctx.ns.m(_ctx.tableSize), _ctx.className, _ctx.ns.b(), _ctx.ns.m(`layout-${_ctx.tableLayout}`)]),\n    style: vue.normalizeStyle(_ctx.style),\n    \"data-prefix\": _ctx.ns.namespace.value,\n    onMouseleave: _cache[0] || (_cache[0] = $event => _ctx.handleMouseLeave())\n  }, [vue.createElementVNode(\"div\", {\n    class: vue.normalizeClass(_ctx.ns.e(\"inner-wrapper\")),\n    style: vue.normalizeStyle(_ctx.tableInnerStyle)\n  }, [vue.createElementVNode(\"div\", _hoisted_2, [vue.renderSlot(_ctx.$slots, \"default\")], 512), _ctx.showHeader && _ctx.tableLayout === \"fixed\" ? vue.withDirectives((vue.openBlock(), vue.createElementBlock(\"div\", {\n    key: 0,\n    ref: \"headerWrapper\",\n    class: vue.normalizeClass(_ctx.ns.e(\"header-wrapper\"))\n  }, [vue.createElementVNode(\"table\", {\n    ref: \"tableHeader\",\n    class: vue.normalizeClass(_ctx.ns.e(\"header\")),\n    style: vue.normalizeStyle(_ctx.tableBodyStyles),\n    border: \"0\",\n    cellpadding: \"0\",\n    cellspacing: \"0\"\n  }, [vue.createVNode(_component_hColgroup, {\n    columns: _ctx.store.states.columns.value,\n    \"table-layout\": _ctx.tableLayout\n  }, null, 8, [\"columns\", \"table-layout\"]), vue.createVNode(_component_table_header, {\n    ref: \"tableHeaderRef\",\n    border: _ctx.border,\n    \"default-sort\": _ctx.defaultSort,\n    store: _ctx.store,\n    onSetDragVisible: _ctx.setDragVisible\n  }, null, 8, [\"border\", \"default-sort\", \"store\", \"onSetDragVisible\"])], 6)], 2)), [[_directive_mousewheel, _ctx.handleHeaderFooterMousewheel]]) : vue.createCommentVNode(\"v-if\", true), vue.createElementVNode(\"div\", {\n    ref: \"bodyWrapper\",\n    class: vue.normalizeClass(_ctx.ns.e(\"body-wrapper\"))\n  }, [vue.createVNode(_component_el_scrollbar, {\n    ref: \"scrollBarRef\",\n    \"view-style\": _ctx.scrollbarViewStyle,\n    \"wrap-style\": _ctx.scrollbarStyle,\n    always: _ctx.scrollbarAlwaysOn\n  }, {\n    default: vue.withCtx(() => [vue.createElementVNode(\"table\", {\n      ref: \"tableBody\",\n      class: vue.normalizeClass(_ctx.ns.e(\"body\")),\n      cellspacing: \"0\",\n      cellpadding: \"0\",\n      border: \"0\",\n      style: vue.normalizeStyle({\n        width: _ctx.bodyWidth,\n        tableLayout: _ctx.tableLayout\n      })\n    }, [vue.createVNode(_component_hColgroup, {\n      columns: _ctx.store.states.columns.value,\n      \"table-layout\": _ctx.tableLayout\n    }, null, 8, [\"columns\", \"table-layout\"]), _ctx.showHeader && _ctx.tableLayout === \"auto\" ? (vue.openBlock(), vue.createBlock(_component_table_header, {\n      key: 0,\n      ref: \"tableHeaderRef\",\n      border: _ctx.border,\n      \"default-sort\": _ctx.defaultSort,\n      store: _ctx.store,\n      onSetDragVisible: _ctx.setDragVisible\n    }, null, 8, [\"border\", \"default-sort\", \"store\", \"onSetDragVisible\"])) : vue.createCommentVNode(\"v-if\", true), vue.createVNode(_component_table_body, {\n      context: _ctx.context,\n      highlight: _ctx.highlightCurrentRow,\n      \"row-class-name\": _ctx.rowClassName,\n      \"tooltip-effect\": _ctx.tooltipEffect,\n      \"row-style\": _ctx.rowStyle,\n      store: _ctx.store,\n      stripe: _ctx.stripe\n    }, null, 8, [\"context\", \"highlight\", \"row-class-name\", \"tooltip-effect\", \"row-style\", \"store\", \"stripe\"])], 6), _ctx.isEmpty ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n      key: 0,\n      ref: \"emptyBlock\",\n      style: vue.normalizeStyle(_ctx.emptyBlockStyle),\n      class: vue.normalizeClass(_ctx.ns.e(\"empty-block\"))\n    }, [vue.createElementVNode(\"span\", {\n      class: vue.normalizeClass(_ctx.ns.e(\"empty-text\"))\n    }, [vue.renderSlot(_ctx.$slots, \"empty\", {}, () => [vue.createTextVNode(vue.toDisplayString(_ctx.computedEmptyText), 1)])], 2)], 6)) : vue.createCommentVNode(\"v-if\", true), _ctx.$slots.append ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n      key: 1,\n      ref: \"appendWrapper\",\n      class: vue.normalizeClass(_ctx.ns.e(\"append-wrapper\"))\n    }, [vue.renderSlot(_ctx.$slots, \"append\")], 2)) : vue.createCommentVNode(\"v-if\", true)]),\n    _: 3\n  }, 8, [\"view-style\", \"wrap-style\", \"always\"])], 2), _ctx.showSummary ? vue.withDirectives((vue.openBlock(), vue.createElementBlock(\"div\", {\n    key: 1,\n    ref: \"footerWrapper\",\n    class: vue.normalizeClass(_ctx.ns.e(\"footer-wrapper\"))\n  }, [vue.createVNode(_component_table_footer, {\n    border: _ctx.border,\n    \"default-sort\": _ctx.defaultSort,\n    store: _ctx.store,\n    style: vue.normalizeStyle(_ctx.tableBodyStyles),\n    \"sum-text\": _ctx.computedSumText,\n    \"summary-method\": _ctx.summaryMethod\n  }, null, 8, [\"border\", \"default-sort\", \"store\", \"style\", \"sum-text\", \"summary-method\"])], 2)), [[vue.vShow, !_ctx.isEmpty], [_directive_mousewheel, _ctx.handleHeaderFooterMousewheel]]) : vue.createCommentVNode(\"v-if\", true), _ctx.border || _ctx.isGroup ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n    key: 2,\n    class: vue.normalizeClass(_ctx.ns.e(\"border-left-patch\"))\n  }, null, 2)) : vue.createCommentVNode(\"v-if\", true)], 6), vue.withDirectives(vue.createElementVNode(\"div\", {\n    ref: \"resizeProxy\",\n    class: vue.normalizeClass(_ctx.ns.e(\"column-resize-proxy\"))\n  }, null, 2), [[vue.vShow, _ctx.resizeProxyVisible]])], 46, _hoisted_1);\n}\nvar Table = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/table/src/table.vue\"]]);\nexports[\"default\"] = Table;","map":{"version":3,"mappings":"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","names":["tableIdSeed","_sfc_main","defineComponent","name","directives","Mousewheel","components","TableHeader","TableBody","TableFooter","ElScrollbar","hColgroup","props","emits","setup","t","useLocale","useNamespace","table","getCurrentInstance","provide","TABLE_INJECTION_KEY","createStore","store","TableLayout","fit","showHeader","layout","computed","data","value","setCurrentRow","getSelectionRows","toggleRowSelection","clearSelection","clearFilter","toggleAllSelection","toggleRowExpansion","clearSort","sort","useUtils","isHidden","renderExpanded","setDragVisible","isGroup","handleMouseLeave","handleHeaderFooterMousewheel","tableSize","emptyBlockStyle","handleFixedMousewheel","resizeProxyVisible","bodyWidth","resizeState","doLayout","tableBodyStyles","tableLayout","scrollbarViewStyle","tableInnerStyle","scrollbarStyle","useStyle","scrollBarRef","scrollTo","setScrollLeft","setScrollTop","useScrollbar","debounce","tableId","ns","state","debouncedUpdateLayout","computedSumText","sumText","emptyText","isEmpty","context","computedEmptyText","ref","class","_createElementBlock","m","_ctx","scrollX","scrollY","states","isComplex","length","b","style","_normalizeStyle","namespace","onMouseleave","_cache","_createElementVNode","_normalizeClass","e","_hoisted_2","_renderSlot","key","border","cellpadding","cellspacing","_createVNode","columns","onSetDragVisible","always","width","_createBlock","highlight","stripe","append"],"sources":["../../../../../../packages/components/table/src/table.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"tableWrapper\"\n    :class=\"[\n      {\n        [ns.m('fit')]: fit,\n        [ns.m('striped')]: stripe,\n        [ns.m('border')]: border || isGroup,\n        [ns.m('hidden')]: isHidden,\n        [ns.m('group')]: isGroup,\n        [ns.m('fluid-height')]: maxHeight,\n        [ns.m('scrollable-x')]: layout.scrollX.value,\n        [ns.m('scrollable-y')]: layout.scrollY.value,\n        [ns.m('enable-row-hover')]: !store.states.isComplex.value,\n        [ns.m('enable-row-transition')]:\n          (store.states.data.value || []).length !== 0 &&\n          (store.states.data.value || []).length < 100,\n        'has-footer': showSummary,\n      },\n      ns.m(tableSize),\n      className,\n      ns.b(),\n      ns.m(`layout-${tableLayout}`),\n    ]\"\n    :style=\"style\"\n    :data-prefix=\"ns.namespace.value\"\n    @mouseleave=\"handleMouseLeave()\"\n  >\n    <div :class=\"ns.e('inner-wrapper')\" :style=\"tableInnerStyle\">\n      <div ref=\"hiddenColumns\" class=\"hidden-columns\">\n        <slot />\n      </div>\n      <div\n        v-if=\"showHeader && tableLayout === 'fixed'\"\n        ref=\"headerWrapper\"\n        v-mousewheel=\"handleHeaderFooterMousewheel\"\n        :class=\"ns.e('header-wrapper')\"\n      >\n        <table\n          ref=\"tableHeader\"\n          :class=\"ns.e('header')\"\n          :style=\"tableBodyStyles\"\n          border=\"0\"\n          cellpadding=\"0\"\n          cellspacing=\"0\"\n        >\n          <hColgroup\n            :columns=\"store.states.columns.value\"\n            :table-layout=\"tableLayout\"\n          />\n          <table-header\n            ref=\"tableHeaderRef\"\n            :border=\"border\"\n            :default-sort=\"defaultSort\"\n            :store=\"store\"\n            @set-drag-visible=\"setDragVisible\"\n          />\n        </table>\n      </div>\n      <div ref=\"bodyWrapper\" :class=\"ns.e('body-wrapper')\">\n        <el-scrollbar\n          ref=\"scrollBarRef\"\n          :view-style=\"scrollbarViewStyle\"\n          :wrap-style=\"scrollbarStyle\"\n          :always=\"scrollbarAlwaysOn\"\n        >\n          <table\n            ref=\"tableBody\"\n            :class=\"ns.e('body')\"\n            cellspacing=\"0\"\n            cellpadding=\"0\"\n            border=\"0\"\n            :style=\"{\n              width: bodyWidth,\n              tableLayout,\n            }\"\n          >\n            <hColgroup\n              :columns=\"store.states.columns.value\"\n              :table-layout=\"tableLayout\"\n            />\n            <table-header\n              v-if=\"showHeader && tableLayout === 'auto'\"\n              ref=\"tableHeaderRef\"\n              :border=\"border\"\n              :default-sort=\"defaultSort\"\n              :store=\"store\"\n              @set-drag-visible=\"setDragVisible\"\n            />\n            <table-body\n              :context=\"context\"\n              :highlight=\"highlightCurrentRow\"\n              :row-class-name=\"rowClassName\"\n              :tooltip-effect=\"tooltipEffect\"\n              :row-style=\"rowStyle\"\n              :store=\"store\"\n              :stripe=\"stripe\"\n            />\n          </table>\n          <div\n            v-if=\"isEmpty\"\n            ref=\"emptyBlock\"\n            :style=\"emptyBlockStyle\"\n            :class=\"ns.e('empty-block')\"\n          >\n            <span :class=\"ns.e('empty-text')\">\n              <slot name=\"empty\">{{ computedEmptyText }}</slot>\n            </span>\n          </div>\n          <div\n            v-if=\"$slots.append\"\n            ref=\"appendWrapper\"\n            :class=\"ns.e('append-wrapper')\"\n          >\n            <slot name=\"append\" />\n          </div>\n        </el-scrollbar>\n      </div>\n      <div\n        v-if=\"showSummary\"\n        v-show=\"!isEmpty\"\n        ref=\"footerWrapper\"\n        v-mousewheel=\"handleHeaderFooterMousewheel\"\n        :class=\"ns.e('footer-wrapper')\"\n      >\n        <table-footer\n          :border=\"border\"\n          :default-sort=\"defaultSort\"\n          :store=\"store\"\n          :style=\"tableBodyStyles\"\n          :sum-text=\"computedSumText\"\n          :summary-method=\"summaryMethod\"\n        />\n      </div>\n      <div v-if=\"border || isGroup\" :class=\"ns.e('border-left-patch')\" />\n    </div>\n    <div\n      v-show=\"resizeProxyVisible\"\n      ref=\"resizeProxy\"\n      :class=\"ns.e('column-resize-proxy')\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\n// @ts-nocheck\nimport { computed, defineComponent, getCurrentInstance, provide } from 'vue'\nimport { debounce } from 'lodash-unified'\nimport { Mousewheel } from '@element-plus/directives'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport { createStore } from './store/helper'\nimport TableLayout from './table-layout'\nimport TableHeader from './table-header'\nimport TableBody from './table-body'\nimport TableFooter from './table-footer'\nimport useUtils from './table/utils-helper'\nimport useStyle from './table/style-helper'\nimport defaultProps from './table/defaults'\nimport { TABLE_INJECTION_KEY } from './tokens'\nimport { hColgroup } from './h-helper'\nimport { useScrollbar } from './composables/use-scrollbar'\n\nimport type { Table } from './table/defaults'\n\nlet tableIdSeed = 1\nexport default defineComponent({\n  name: 'ElTable',\n  directives: {\n    Mousewheel,\n  },\n  components: {\n    TableHeader,\n    TableBody,\n    TableFooter,\n    ElScrollbar,\n    hColgroup,\n  },\n  props: defaultProps,\n  emits: [\n    'select',\n    'select-all',\n    'selection-change',\n    'cell-mouse-enter',\n    'cell-mouse-leave',\n    'cell-contextmenu',\n    'cell-click',\n    'cell-dblclick',\n    'row-click',\n    'row-contextmenu',\n    'row-dblclick',\n    'header-click',\n    'header-contextmenu',\n    'sort-change',\n    'filter-change',\n    'current-change',\n    'header-dragend',\n    'expand-change',\n  ],\n  setup(props) {\n    type Row = typeof props.data[number]\n    const { t } = useLocale()\n    const ns = useNamespace('table')\n    const table = getCurrentInstance() as Table<Row>\n    provide(TABLE_INJECTION_KEY, table)\n    const store = createStore<Row>(table, props)\n    table.store = store\n    const layout = new TableLayout<Row>({\n      store: table.store,\n      table,\n      fit: props.fit,\n      showHeader: props.showHeader,\n    })\n    table.layout = layout\n\n    const isEmpty = computed(() => (store.states.data.value || []).length === 0)\n\n    /**\n     * open functions\n     */\n    const {\n      setCurrentRow,\n      getSelectionRows,\n      toggleRowSelection,\n      clearSelection,\n      clearFilter,\n      toggleAllSelection,\n      toggleRowExpansion,\n      clearSort,\n      sort,\n    } = useUtils<Row>(store)\n    const {\n      isHidden,\n      renderExpanded,\n      setDragVisible,\n      isGroup,\n      handleMouseLeave,\n      handleHeaderFooterMousewheel,\n      tableSize,\n      emptyBlockStyle,\n      handleFixedMousewheel,\n      resizeProxyVisible,\n      bodyWidth,\n      resizeState,\n      doLayout,\n      tableBodyStyles,\n      tableLayout,\n      scrollbarViewStyle,\n      tableInnerStyle,\n      scrollbarStyle,\n    } = useStyle<Row>(props, layout, store, table)\n\n    const { scrollBarRef, scrollTo, setScrollLeft, setScrollTop } =\n      useScrollbar()\n\n    const debouncedUpdateLayout = debounce(doLayout, 50)\n\n    const tableId = `${ns.namespace.value}-table_${tableIdSeed++}`\n    table.tableId = tableId\n    table.state = {\n      isGroup,\n      resizeState,\n      doLayout,\n      debouncedUpdateLayout,\n    }\n    const computedSumText = computed(\n      () => props.sumText || t('el.table.sumText')\n    )\n\n    const computedEmptyText = computed(() => {\n      return props.emptyText || t('el.table.emptyText')\n    })\n\n    return {\n      ns,\n      layout,\n      store,\n      handleHeaderFooterMousewheel,\n      handleMouseLeave,\n      tableId,\n      tableSize,\n      isHidden,\n      isEmpty,\n      renderExpanded,\n      resizeProxyVisible,\n      resizeState,\n      isGroup,\n      bodyWidth,\n      tableBodyStyles,\n      emptyBlockStyle,\n      debouncedUpdateLayout,\n      handleFixedMousewheel,\n      setCurrentRow,\n      getSelectionRows,\n      toggleRowSelection,\n      clearSelection,\n      clearFilter,\n      toggleAllSelection,\n      toggleRowExpansion,\n      clearSort,\n      doLayout,\n      sort,\n      t,\n      setDragVisible,\n      context: table,\n      computedSumText,\n      computedEmptyText,\n      tableLayout,\n      scrollbarViewStyle,\n      tableInnerStyle,\n      scrollbarStyle,\n      scrollBarRef,\n      scrollTo,\n      setScrollLeft,\n      setScrollTop,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}