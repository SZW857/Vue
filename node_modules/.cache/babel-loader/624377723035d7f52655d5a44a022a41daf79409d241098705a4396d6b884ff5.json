{"ast":null,"code":"//验证码加密算法\nexport const CaptchaEncryption = num => {\n  /**\r\n   *      先得到每位数，然后每位数都加上5，再对10求余，最后将所有数字反转，得到一串新数。\r\n   * */\n  // 1、把整数里面的每一位放到数组里\n  var str = num.toString(); // 转化为字符串\n  var intArray = new Array(str.length); // 新建一个数组用来保存num每一位的数字\n  for (var i = 0; i < str.length; i++) {\n    // 遍历str将每一位数字添加如intArray\n    var ch = str.charAt(i);\n    intArray[i] = parseInt(ch.toString());\n  }\n  // 2、加密\n  // 每位数都加上5\n  for (var i = 0; i < intArray.length; i++) {\n    intArray[i] = intArray[i] + 5;\n  }\n  // 再对10求余\n  for (var i = 0; i < intArray.length; i++) {\n    intArray[i] = intArray[i] % 10;\n  }\n  // 将所有数字反转\n  for (var i = 0, j = intArray.length - 1; i < j; i++, j--) {\n    var temp = intArray[i];\n    intArray[i] = intArray[j];\n    intArray[j] = temp;\n  }\n  // 3.把数组里面的每个数字进行拼接，变成加密之后的结果\n  var number = 0;\n  for (var i = 0; i < intArray.length; i++) {\n    number = number * 10 + intArray[i];\n  }\n  return number;\n};","map":{"version":3,"names":["CaptchaEncryption","num","str","toString","intArray","Array","length","i","ch","charAt","parseInt","j","temp","number"],"sources":["C:/Users/14486/Desktop/社区公益系统前端/vue_community/src/static/js/DES.js"],"sourcesContent":["//验证码加密算法\r\nexport const CaptchaEncryption=(num)=>{\r\n        /**\r\n         *      先得到每位数，然后每位数都加上5，再对10求余，最后将所有数字反转，得到一串新数。\r\n         * */\r\n        // 1、把整数里面的每一位放到数组里\r\n        var str = num.toString();// 转化为字符串\r\n        var intArray = new Array(str.length);// 新建一个数组用来保存num每一位的数字\r\n        for (var i = 0; i < str.length; i++) {\r\n            // 遍历str将每一位数字添加如intArray\r\n            var ch = str.charAt(i);\r\n            intArray[i] = parseInt(ch.toString());\r\n        }\r\n        // 2、加密\r\n        // 每位数都加上5\r\n        for (var i = 0; i < intArray.length; i++) {\r\n            intArray[i] = intArray[i] + 5;\r\n        }\r\n        // 再对10求余\r\n        for (var i = 0; i < intArray.length; i++) {\r\n            intArray[i] = intArray[i] % 10;\r\n        }\r\n        // 将所有数字反转\r\n        for (var i = 0, j = intArray.length - 1; i < j; i++, j--) {\r\n            var temp = intArray[i];\r\n            intArray[i] = intArray[j];\r\n            intArray[j] = temp;\r\n        }\r\n        // 3.把数组里面的每个数字进行拼接，变成加密之后的结果\r\n        var number = 0;\r\n        for (var i = 0; i < intArray.length; i++) {\r\n            number = number * 10 + intArray[i];\r\n        }\r\n        return number;\r\n    }\r\n\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,iBAAiB,GAAEC,GAAG,IAAG;EAC9B;AACR;AACA;EACQ;EACA,IAAIC,GAAG,GAAGD,GAAG,CAACE,QAAQ,EAAE,CAAC;EACzB,IAAIC,QAAQ,GAAG,IAAIC,KAAK,CAACH,GAAG,CAACI,MAAM,CAAC,CAAC;EACrC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,GAAG,CAACI,MAAM,EAAEC,CAAC,EAAE,EAAE;IACjC;IACA,IAAIC,EAAE,GAAGN,GAAG,CAACO,MAAM,CAACF,CAAC,CAAC;IACtBH,QAAQ,CAACG,CAAC,CAAC,GAAGG,QAAQ,CAACF,EAAE,CAACL,QAAQ,EAAE,CAAC;EACzC;EACA;EACA;EACA,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,CAACE,MAAM,EAAEC,CAAC,EAAE,EAAE;IACtCH,QAAQ,CAACG,CAAC,CAAC,GAAGH,QAAQ,CAACG,CAAC,CAAC,GAAG,CAAC;EACjC;EACA;EACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,CAACE,MAAM,EAAEC,CAAC,EAAE,EAAE;IACtCH,QAAQ,CAACG,CAAC,CAAC,GAAGH,QAAQ,CAACG,CAAC,CAAC,GAAG,EAAE;EAClC;EACA;EACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEI,CAAC,GAAGP,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAEC,CAAC,GAAGI,CAAC,EAAEJ,CAAC,EAAE,EAAEI,CAAC,EAAE,EAAE;IACtD,IAAIC,IAAI,GAAGR,QAAQ,CAACG,CAAC,CAAC;IACtBH,QAAQ,CAACG,CAAC,CAAC,GAAGH,QAAQ,CAACO,CAAC,CAAC;IACzBP,QAAQ,CAACO,CAAC,CAAC,GAAGC,IAAI;EACtB;EACA;EACA,IAAIC,MAAM,GAAG,CAAC;EACd,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,CAACE,MAAM,EAAEC,CAAC,EAAE,EAAE;IACtCM,MAAM,GAAGA,MAAM,GAAG,EAAE,GAAGT,QAAQ,CAACG,CAAC,CAAC;EACtC;EACA,OAAOM,MAAM;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}