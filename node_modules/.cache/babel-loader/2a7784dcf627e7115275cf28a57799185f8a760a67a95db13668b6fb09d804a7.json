{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nrequire('../../../constants/index.js');\nrequire('../../../hooks/index.js');\nrequire('../../../utils/index.js');\nvar index = require('../../../hooks/use-common-props/index.js');\nvar event = require('../../../constants/event.js');\nvar shared = require('@vue/shared');\nvar core = require('@vueuse/core');\nconst checkboxProps = {\n  modelValue: {\n    type: [Number, String, Boolean],\n    default: void 0\n  },\n  label: {\n    type: [String, Boolean, Number, Object]\n  },\n  indeterminate: Boolean,\n  disabled: Boolean,\n  checked: Boolean,\n  name: {\n    type: String,\n    default: void 0\n  },\n  trueLabel: {\n    type: [String, Number],\n    default: void 0\n  },\n  falseLabel: {\n    type: [String, Number],\n    default: void 0\n  },\n  id: {\n    type: String,\n    default: void 0\n  },\n  controls: {\n    type: String,\n    default: void 0\n  },\n  border: Boolean,\n  size: index.useSizeProp,\n  tabindex: [String, Number],\n  validateEvent: {\n    type: Boolean,\n    default: true\n  }\n};\nconst checkboxEmits = {\n  [event.UPDATE_MODEL_EVENT]: val => shared.isString(val) || core.isNumber(val) || core.isBoolean(val),\n  change: val => shared.isString(val) || core.isNumber(val) || core.isBoolean(val)\n};\nexports.checkboxEmits = checkboxEmits;\nexports.checkboxProps = checkboxProps;","map":{"version":3,"mappings":";;;;;;;;;;;;AAGY,MAACA,aAAa,GAAG;EAC3BC,UAAU,EAAE;IACVC,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM,EAAEC,OAAO,CAAC;IAC/BC,OAAO,EAAE,KAAK;EAClB,CAAG;EACDC,KAAK,EAAE;IACLL,IAAI,EAAE,CAACE,MAAM,EAAEC,OAAO,EAAEF,MAAM,EAAEK,MAAM;EAC1C,CAAG;EACDC,aAAa,EAAEJ,OAAO;EACtBK,QAAQ,EAAEL,OAAO;EACjBM,OAAO,EAAEN,OAAO;EAChBO,IAAI,EAAE;IACJV,IAAI,EAAEE,MAAM;IACZE,OAAO,EAAE,KAAK;EAClB,CAAG;EACDO,SAAS,EAAE;IACTX,IAAI,EAAE,CAACE,MAAM,EAAED,MAAM,CAAC;IACtBG,OAAO,EAAE,KAAK;EAClB,CAAG;EACDQ,UAAU,EAAE;IACVZ,IAAI,EAAE,CAACE,MAAM,EAAED,MAAM,CAAC;IACtBG,OAAO,EAAE,KAAK;EAClB,CAAG;EACDS,EAAE,EAAE;IACFb,IAAI,EAAEE,MAAM;IACZE,OAAO,EAAE,KAAK;EAClB,CAAG;EACDU,QAAQ,EAAE;IACRd,IAAI,EAAEE,MAAM;IACZE,OAAO,EAAE,KAAK;EAClB,CAAG;EACDW,MAAM,EAAEZ,OAAO;EACfa,IAAI,EAAEC,iBAAW;EACjBC,QAAQ,EAAE,CAAChB,MAAM,EAAED,MAAM,CAAC;EAC1BkB,aAAa,EAAE;IACbnB,IAAI,EAAEG,OAAO;IACbC,OAAO,EAAE;EACb;AACA;AACY,MAACgB,aAAa,GAAG;EAC3B,CAACC,wBAAkB,GAAIC,GAAG,IAAKC,eAAQ,CAACD,GAAG,CAAC,IAAIE,aAAQ,CAACF,GAAG,CAAC,IAAIG,cAAS,CAACH,GAAG,CAAC;EAC/EI,MAAM,EAAGJ,GAAG,IAAKC,eAAQ,CAACD,GAAG,CAAC,IAAIE,aAAQ,CAACF,GAAG,CAAC,IAAIG,cAAS,CAACH,GAAG;AAClE","names":["checkboxProps","modelValue","type","Number","String","Boolean","default","label","Object","indeterminate","disabled","checked","name","trueLabel","falseLabel","id","controls","border","size","useSizeProp","tabindex","validateEvent","checkboxEmits","UPDATE_MODEL_EVENT","val","isString","isNumber","isBoolean","change"],"sources":["../../../../../../packages/components/checkbox/src/checkbox.ts"],"sourcesContent":["import { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { useSizeProp } from '@element-plus/hooks'\nimport { isBoolean, isNumber, isString } from '@element-plus/utils'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type Checkbox from './checkbox.vue'\n\nexport type CheckboxValueType = string | number | boolean\n\nexport const checkboxProps = {\n  modelValue: {\n    type: [Number, String, Boolean],\n    default: undefined,\n  },\n  label: {\n    type: [String, Boolean, Number, Object],\n  },\n  indeterminate: Boolean,\n  disabled: Boolean,\n  checked: Boolean,\n  name: {\n    type: String,\n    default: undefined,\n  },\n  trueLabel: {\n    type: [String, Number],\n    default: undefined,\n  },\n  falseLabel: {\n    type: [String, Number],\n    default: undefined,\n  },\n  id: {\n    type: String,\n    default: undefined,\n  },\n  controls: {\n    type: String,\n    default: undefined,\n  },\n  border: Boolean,\n  size: useSizeProp,\n  tabindex: [String, Number],\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n}\n\nexport const checkboxEmits = {\n  [UPDATE_MODEL_EVENT]: (val: CheckboxValueType) =>\n    isString(val) || isNumber(val) || isBoolean(val),\n  change: (val: CheckboxValueType) =>\n    isString(val) || isNumber(val) || isBoolean(val),\n}\n\nexport type CheckboxProps = ExtractPropTypes<typeof checkboxProps>\nexport type CheckboxEmits = typeof checkboxEmits\nexport type CheckboxInstance = InstanceType<typeof Checkbox>\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}