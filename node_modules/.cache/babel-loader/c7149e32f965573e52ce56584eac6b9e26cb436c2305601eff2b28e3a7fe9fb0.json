{"ast":null,"code":"export default {\n  data() {\n    var checkAge = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('年龄不能为空'));\n      }\n      setTimeout(() => {\n        if (!Number.isInteger(value)) {\n          callback(new Error('请输入数字值'));\n        } else {\n          if (value < 18) {\n            callback(new Error('必须年满18岁'));\n          } else {\n            callback();\n          }\n        }\n      }, 1000);\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        pass: '',\n        checkPass: '',\n        age: ''\n      },\n      rules: {\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        age: [{\n          validator: checkAge,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert('submit!');\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"mappings":"AA4CA,eAAe;EACbA,IAAI,GAAG;IACL,IAAIC,QAAO,GAAI,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MACxC,IAAI,CAACD,KAAK,EAAE;QACV,OAAOC,QAAQ,CAAC,IAAIC,KAAK,CAAC,QAAQ,CAAC;MACrC;MACAC,UAAU,CAAC,MAAM;QACf,IAAI,CAACC,MAAM,CAACC,SAAS,CAACL,KAAK,CAAC,EAAE;UAC5BC,QAAQ,CAAC,IAAIC,KAAK,CAAC,QAAQ,CAAC;QAC9B,OAAO;UACL,IAAIF,KAAI,GAAI,EAAE,EAAE;YACdC,QAAQ,CAAC,IAAIC,KAAK,CAAC,SAAS,CAAC;UAC/B,OAAO;YACLD,QAAQ,EAAC;UACX;QACF;MACF,CAAC,EAAE,IAAI;IACT;IACA,IAAIK,YAAW,GAAI,CAACP,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC5C,IAAID,KAAI,KAAM,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC;MAC7B,OAAO;QACL,IAAI,IAAI,CAACK,QAAQ,CAACC,SAAQ,KAAM,EAAE,EAAE;UAClC,IAAI,CAACC,KAAK,CAACF,QAAQ,CAACG,aAAa,CAAC,WAAW;QAC/C;QACAT,QAAQ,EAAC;MACX;IACF;IACA,IAAIU,aAAY,GAAI,CAACZ,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC7C,IAAID,KAAI,KAAM,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,SAAS,CAAC;MAC/B,OAAO,IAAIF,KAAI,KAAM,IAAI,CAACO,QAAQ,CAACK,IAAI,EAAE;QACvCX,QAAQ,CAAC,IAAIC,KAAK,CAAC,YAAY,CAAC;MAClC,OAAO;QACLD,QAAQ,EAAC;MACX;IACF;IACA,OAAO;MACLM,QAAQ,EAAE;QACRK,IAAI,EAAE,EAAE;QACRJ,SAAS,EAAE,EAAE;QACbK,GAAG,EAAE;MACP,CAAC;MACDC,KAAK,EAAE;QACLF,IAAI,EAAE,CAAC;UAAEG,SAAS,EAAET,YAAY;UAAEU,OAAO,EAAE;QAAO,CAAC,CAAC;QACpDR,SAAS,EAAE,CAAC;UAAEO,SAAS,EAAEJ,aAAa;UAAEK,OAAO,EAAE;QAAO,CAAC,CAAC;QAC1DH,GAAG,EAAE,CAAC;UAAEE,SAAS,EAAEjB,QAAQ;UAAEkB,OAAO,EAAE;QAAO,CAAC;MAChD;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAU,CAACC,QAAQ,EAAE;MACnB,IAAI,CAACV,KAAK,CAACU,QAAQ,CAAC,CAACC,QAAQ,CAAEC,KAAK,IAAK;QACvC,IAAIA,KAAK,EAAE;UACTC,KAAK,CAAC,SAAS;QACjB,OAAO;UACLC,OAAO,CAACC,GAAG,CAAC,gBAAgB;UAC5B,OAAO,KAAI;QACb;MACF,CAAC;IACH,CAAC;IACDC,SAAS,CAACN,QAAQ,EAAE;MAClB,IAAI,CAACV,KAAK,CAACU,QAAQ,CAAC,CAACO,WAAW,EAAC;IACnC;EACF;AACF","names":["data","checkAge","rule","value","callback","Error","setTimeout","Number","isInteger","validatePass","ruleForm","checkPass","$refs","validateField","validatePass2","pass","age","rules","validator","trigger","methods","submitForm","formName","validate","valid","alert","console","log","resetForm","resetFields"],"sourceRoot":"","sources":["C:\\Users\\14486\\Desktop\\新建文件夹\\vue_community\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n  <div id=\"login\">\n    <nav>\n      <router-link to=\"/about\">About</router-link>|\n      <router-link to=\"/deng\">denglu</router-link>\n    </nav>\n    <div class=\"block\">\n      <span class=\"demonstration\">Click 指示器触发</span>\n      <el-carousel trigger=\"click\" height=\"150px\">\n        <el-carousel-item v-for=\"item in 4\" :key=\"item\">\n          <h3 class=\"large\">{{ item }}</h3>\n        </el-carousel-item>\n      </el-carousel>\n    </div>\n  </div>\n  <router-view/>\n</template>\n\n\n<style>\n#login{\n  background-color: aquamarine;\n}\n\n .el-carousel__item h3 {\n   color: #475669;\n   font-size: 14px;\n   opacity: 0.75;\n   line-height: 150px;\n   margin: 0;\n }\n\n.el-carousel__item:nth-child(2n) {\n  background-color: #99a9bf;\n}\n\n.el-carousel__item:nth-child(2n + 1) {\n  background-color: #d3dce6;\n}\n</style>\n\n\n\n<script  scoped>\nexport default {\n  data() {\n    var checkAge = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('年龄不能为空'))\n      }\n      setTimeout(() => {\n        if (!Number.isInteger(value)) {\n          callback(new Error('请输入数字值'))\n        } else {\n          if (value < 18) {\n            callback(new Error('必须年满18岁'))\n          } else {\n            callback()\n          }\n        }\n      }, 1000)\n    }\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'))\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass')\n        }\n        callback()\n      }\n    }\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'))\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      ruleForm: {\n        pass: '',\n        checkPass: '',\n        age: '',\n      },\n      rules: {\n        pass: [{ validator: validatePass, trigger: 'blur' }],\n        checkPass: [{ validator: validatePass2, trigger: 'blur' }],\n        age: [{ validator: checkAge, trigger: 'blur' }],\n      },\n    }\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          alert('submit!')\n        } else {\n          console.log('error submit!!')\n          return false\n        }\n      })\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n  },\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}