{"ast":null,"code":"import { ElMessage } from 'element-plus';\nimport SIdentify from '@/components/identify';\nexport default {\n  components: {\n    SIdentify\n  },\n  data() {\n    var validateVerifycode = (rule, value, callback) => {\n      const newVal = value.toLowerCase();\n      const identifyStr = this.identifyCode.toLowerCase();\n      if (newVal === '') {\n        return callback(new Error('验证码不能为空'));\n      } else if (value !== identifyStr) {\n        console.log('validateVerifycode:', value);\n        callback(new Error('验证码不正确!'));\n      } else {\n        callback();\n      }\n      // setTimeout(() => {\n      //   if (!Number.isInteger(value)) {\n      //     callback(new Error('请输入数字值'))\n      //   } else {\n      //     if (value < 18) {\n      //       callback(new Error('必须年满18岁'))\n      //     } else {\n      //       callback()\n      //     }\n      //   }\n      // }, 1000)\n    };\n    // var telephoneNumber = (rule, value, callback) => {\n    //   if (value === '') {\n    //     callback(new Error('请输入手机号'))\n    //   }else if (this.teleRuleCheck(value)){\n    //     callback()\n    //   } else {\n    //     callback();\n    //   }\n    // }\n    var idCard = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入身份证号码'));\n      } else if (this.idCardRuleCheck(value)) {\n        callback();\n      } else {\n        callback(new Error('身份证格式不对'));\n      }\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n        console.log(value);\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          console.log(value);\n          // this.$refs.ruleForm.validateField('checkPass')\n        }\n\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      active: 1,\n      identifyCodes: '3456789ABCDEFGHGKMNPQRSTUVWXY',\n      identifyCode: '',\n      ruleForm: {\n        telephoneNumber: '',\n        idCard: '',\n        verifycode: ''\n      },\n      rules: {\n        // telephoneNumber: [{ validator: telephoneNumber, trigger: 'blur' }],\n        idCard: [{\n          required: true,\n          validator: idCard,\n          trigger: 'blur'\n        }],\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        verifycode: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateVerifycode\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          if (this.active++ > 3) this.active = 0;\n        } else {\n          ElMessage({\n            message: '完善信息方可进入下一步',\n            grouping: true,\n            type: 'error'\n          });\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    prev() {\n      --this.active;\n      if (this.active < 0) this.active = 0;\n    },\n    sub(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.active++;\n          if (this.active = 4) {\n            ElMessage({\n              message: '恭喜你！已重获密码',\n              type: 'success'\n            });\n            this.$router.replace('/ForgotPwd3');\n          }\n        } else {\n          alert('请输入正确的密码');\n          console.log('error submit!!');\n        }\n      });\n    },\n    teleRuleCheck(stringber) {\n      var pattern = /^1[34578]\\d{9}$/;\n      if (pattern.test(stringber)) {\n        return true;\n      }\n      console.log('check mobile phone ' + stringber + ' failed.');\n      return false;\n    },\n    idCardRuleCheck(string) {\n      var reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\n      if (reg.test(string) === false) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    // 生成随机数\n    randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n    // 切换验证码\n    refreshCode() {\n      this.identifyCode = '';\n      this.makeCode(this.identifyCodes, 4);\n    },\n    // 生成四位随机验证码\n    makeCode(o, l) {\n      for (let i = 0; i < l; i++) {\n        this.identifyCode += this.identifyCodes[this.randomNum(0, this.identifyCodes.length)];\n      }\n    }\n  },\n  mounted() {\n    // 验证码初始化\n    this.identifyCode = '';\n    this.makeCode(this.identifyCodes, 4);\n  }\n};","map":{"version":3,"mappings":"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","names":["ElMessage","SIdentify","components","data","validateVerifycode","rule","value","callback","newVal","toLowerCase","identifyStr","identifyCode","Error","console","log","idCard","idCardRuleCheck","validatePass","ruleForm","checkPass","validatePass2","pass","active","identifyCodes","telephoneNumber","verifycode","rules","required","validator","trigger","methods","submitForm","formName","$refs","validate","valid","message","grouping","type","resetForm","resetFields","prev","sub","$router","replace","alert","teleRuleCheck","stringber","pattern","test","string","reg","randomNum","min","max","Math","floor","random","refreshCode","makeCode","o","l","i","length","mounted"],"sourceRoot":"","sources":["C:\\Users\\14486\\Desktop\\社区公益系统前端\\vue_community\\src\\components\\ForgetPwd\\ForgotPwdTemplate.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"StepBar\">\r\n      <el-steps :space=\"400\" :active=\"active\" finish-status=\"success\" align-center>\r\n        <el-step title=\"填写账号\" />\r\n        <el-step title=\"身份验证\" />\r\n        <el-step title=\"新密码\" />\r\n        <el-step title=\"完成\" />\r\n      </el-steps>\r\n    </div>\r\n    <div style=\"height: 500px;background-color: #ffffff;margin-top: 40px\" v-if=\"active===3\">\r\n        <h1>身份证号校验:</h1>\r\n        <div>\r\n        <el-form\r\n            :model=\"ruleForm\"\r\n            status-icon\r\n            :rules=\"rules\"\r\n            ref=\"ruleForm\"\r\n            label-width=\"100px\"\r\n            label-position=\"top\"\r\n            class=\"demo-ruleForm\"\r\n            style=\"width: 500px;margin-left: 400px\"\r\n        ><el-form-item label=\"身份证号:\" prop=\"idCard\">\r\n            <el-input\r\n                :maxlength=\"18\"\r\n                type=\"text\"\r\n                v-model=\"ruleForm.idCard\"\r\n                autocomplete=\"off\"\r\n                prefix-icon=\"Memo\"\r\n                class=\"el-input\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"验证码\" prop=\"verifycode\">\r\n            <el-input\r\n                v-model=\"ruleForm.verifycode\"\r\n                placeholder=\"请输入验证码\"\r\n                type=\"text\"\r\n                style=\"width: 250px\"\r\n            ></el-input>\r\n            <s-identify :identifyCode=\"identifyCode\" style=\"width: 120px;height: 40px;position: absolute;margin-left:250px\"/>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button style=\"margin-left: 200px;position: absolute\" @click=\"refreshCode\" link>看不清？点击刷新</el-button>\r\n            <el-button @click=\"prev\" v-if=\"active==2||active==3\">上一步</el-button>\r\n            <el-button type=\"primary\" @click=\"submitForm('ruleForm')\"  v-if=\"active==1||active==2||active==3\" >下一步</el-button>\r\n            <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n    <div style=\"height: 600px;background-color: #c5b165;margin-top: 40px\" v-if=\"active===2\">\r\n      <h1>请确认您的账号+{{身份证号}}}:</h1>\r\n      <div>\r\n        <el-form\r\n            :model=\"ruleForm\"\r\n            status-icon\r\n            :rules=\"rules\"\r\n            ref=\"ruleForm\"\r\n            label-width=\"100px\"\r\n            label-position=\"top\"\r\n            class=\"demo-ruleForm\"\r\n            style=\"width: 500px;margin-left: 300px\"\r\n        >\r\n          <el-form-item label=\"请输入绑定的邮箱:\" prop=\"telephoneNumber\">\r\n            <el-input\r\n                :maxlength=\"11\"\r\n                type=\"text\"\r\n                v-model=\"ruleForm.telephoneNumber\"\r\n                autocomplete=\"off\"\r\n                prefix-icon=\"Memo\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"反馈回来的验证码:\" prop=\"idCard\">\r\n            <el-input\r\n                :maxlength=\"18\"\r\n                type=\"text\"\r\n                v-model=\"ruleForm.idCard\"\r\n                autocomplete=\"off\"\r\n                prefix-icon=\"Memo\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button @click=\"prev\" v-if=\"active==2||active==3\">上一步</el-button>\r\n            <el-button type=\"primary\" @click=\"submitForm('ruleForm')\"  v-if=\"active==1||active==2||active==3\" >下一步</el-button>\r\n            <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n    <div style=\"height: 600px;background-color: #ffffff;margin-top: 40px\" v-if=\"active===1\">\r\n      <h1>请输入你新的密码:</h1>\r\n      <div>\r\n        <el-form\r\n           :model=\"ruleForm\"\r\n           :rules=\"rules\"\r\n           label-width=\"100px\"\r\n           ref=\"ruleForm\"\r\n            style=\"width: 500px;margin-left: 300px\"\r\n        >\r\n          <el-form-item label=\"密码\" prop=\"pass\">\r\n            <el-input\r\n                type=\"password\"\r\n                v-model=\"ruleForm.pass\"\r\n                autocomplete=\"off\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n            <el-input\r\n                type=\"password\"\r\n                v-model=\"ruleForm.checkPass\"\r\n                autocomplete=\"off\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button @click=\"prev\" v-if=\"active==2||active==3\">上一步</el-button>\r\n            <el-button type=\"primary\" @click=\"submitForm('ruleForm')\"  v-if=\"active==1||active==2\" >下一步</el-button>\r\n            <el-button @click=\"sub('ruleForm')\" v-if=\"active==3\" type=\"primary\">提交</el-button>\r\n            <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n    <router-view></router-view>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ElMessage } from 'element-plus'\r\nimport SIdentify from '@/components/identify'\r\nexport default {\r\n  components: {SIdentify},\r\n  data() {\r\n    var validateVerifycode = (rule, value, callback) => {\r\n      const newVal = value.toLowerCase()\r\n      const identifyStr = this.identifyCode.toLowerCase()\r\n      if (newVal === '')  {\r\n        return callback(new Error('验证码不能为空'))\r\n      }else if (value !== identifyStr) {\r\n        console.log('validateVerifycode:', value)\r\n        callback(new Error('验证码不正确!'))\r\n      }else {\r\n        callback()\r\n      }\r\n      // setTimeout(() => {\r\n      //   if (!Number.isInteger(value)) {\r\n      //     callback(new Error('请输入数字值'))\r\n      //   } else {\r\n      //     if (value < 18) {\r\n      //       callback(new Error('必须年满18岁'))\r\n      //     } else {\r\n      //       callback()\r\n      //     }\r\n      //   }\r\n      // }, 1000)\r\n    }\r\n    // var telephoneNumber = (rule, value, callback) => {\r\n    //   if (value === '') {\r\n    //     callback(new Error('请输入手机号'))\r\n    //   }else if (this.teleRuleCheck(value)){\r\n    //     callback()\r\n    //   } else {\r\n    //     callback();\r\n    //   }\r\n    // }\r\n    var idCard = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入身份证号码'))\r\n      } else if (this.idCardRuleCheck(value)) {\r\n        callback()\r\n      } else {\r\n        callback(new Error('身份证格式不对'))\r\n      }\r\n    }\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'))\r\n        console.log(value)\r\n      } else {\r\n        if (this.ruleForm.checkPass !== '') {\r\n          console.log(value)\r\n          // this.$refs.ruleForm.validateField('checkPass')\r\n        }\r\n        callback()\r\n      }\r\n    }\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'))\r\n      } else if (value !== this.ruleForm.pass) {\r\n        callback(new Error('两次输入密码不一致!'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      active:1,\r\n      identifyCodes: '3456789ABCDEFGHGKMNPQRSTUVWXY',\r\n      identifyCode: '',\r\n      ruleForm: {\r\n        telephoneNumber: '',\r\n        idCard: '',\r\n        verifycode: '',\r\n      },\r\n      rules: {\r\n        // telephoneNumber: [{ validator: telephoneNumber, trigger: 'blur' }],\r\n        idCard: [{ required:true,validator: idCard, trigger: 'blur' }],\r\n        pass: [{ validator: validatePass, trigger: 'blur' }],\r\n        checkPass: [{ validator: validatePass2, trigger: 'blur' }],\r\n        verifycode: [{required: true, trigger: 'blur', validator: validateVerifycode}]\r\n      },\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          if(this.active++>3) this.active=0\r\n        } else {\r\n          ElMessage({\r\n            message: '完善信息方可进入下一步',\r\n            grouping:true,\r\n            type: 'error',\r\n          })\r\n        }\r\n      })\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    },\r\n    prev(){\r\n      --this.active;\r\n      if (this.active<0) this.active=0\r\n    },\r\n    sub(formName){\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          this.active++;\r\n          if (this.active=4){\r\n            ElMessage({\r\n              message: '恭喜你！已重获密码',\r\n              type: 'success',\r\n            })\r\n            this.$router.replace('/ForgotPwd3')\r\n          }\r\n        } else {\r\n          alert('请输入正确的密码')\r\n          console.log('error submit!!')\r\n        }\r\n      })\r\n\r\n    },\r\n    teleRuleCheck(stringber) {\r\n      var pattern = /^1[34578]\\d{9}$/;\r\n      if (pattern.test(stringber)) {\r\n        return true;\r\n      }\r\n      console.log('check mobile phone ' + stringber + ' failed.');\r\n      return false;\r\n    },\r\n    idCardRuleCheck(string) {\r\n      var reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\r\n      if(reg.test(string) === false) {\r\n           return  false;\r\n        }\r\n      else{\r\n           return true;\r\n      }\r\n    },\r\n    // 生成随机数\r\n    randomNum(min, max) {\r\n      return Math.floor(Math.random() * (max - min) + min)\r\n    },\r\n    // 切换验证码\r\n    refreshCode() {\r\n      this.identifyCode = ''\r\n      this.makeCode(this.identifyCodes, 4)\r\n    },\r\n    // 生成四位随机验证码\r\n    makeCode(o, l) {\r\n      for (let i = 0; i < l; i++) {\r\n        this.identifyCode += this.identifyCodes[\r\n            this.randomNum(0, this.identifyCodes.length)\r\n            ]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // 验证码初始化\r\n    this.identifyCode = ''\r\n    this.makeCode(this.identifyCodes, 4)\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-input{\r\n  height: 43px;\r\n}\r\n.container{\r\n  width: 1200px;\r\n  margin-left: 150px;\r\n  background-color: #ffffff;\r\n}\r\n.StepBar{\r\n  background-color: #f1f1f1;\r\n  height: 60px;\r\n}\r\n.content{\r\n  height: 700px;\r\n  background-color: #1c95a9;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}