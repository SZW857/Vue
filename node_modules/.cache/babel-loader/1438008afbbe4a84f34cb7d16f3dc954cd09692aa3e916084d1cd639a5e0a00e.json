{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"prism-player\",\n  id: \"J_prismPlayer\",\n  style: {\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\"\n  }\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"播放器\"), _hoisted_1], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAEEA,oBAAkG;EAA7FC,KAAK,EAAC,cAAc;EAACC,EAAE,EAAC,eAAe;EAACC,KAA8C,EAA9C;IAAA;IAAA;EAAA;;;;6DAD7CC,0BAAU,EACVC,UAAkG","names":["_createElementVNode","class","id","style","_createCommentVNode","_hoisted_1"],"sourceRoot":"","sources":["C:\\Users\\14486\\Desktop\\社区公益系统前端\\vue_community\\src\\components\\Catoon.vue"],"sourcesContent":["<template>\r\n  <!--播放器-->\r\n  <div class=\"prism-player\" id=\"J_prismPlayer\" style=\"margin-left: auto; margin-right: auto;\"></div>\r\n</template>\r\n<script>\r\n\r\nexport default {\r\n  props:{\r\n    //组件需要的参数\r\n    video: Object\r\n  },\r\n  data() {\r\n    return {\r\n    }\r\n  },\r\n  created() {\r\n    //console.log(\"组件成功\")\r\n  },\r\n  mounted(){\r\n    this.initPlayer()\r\n  },\r\n  methods: {\r\n    initPlayer(){\r\n      //console.log(this.video)\r\n      new Aliplayer({\r\n        id: 'J_prismPlayer',\r\n        vid: this.video.vid, // 视频id\r\n        playauth: this.video.playauth, // 播放凭证\r\n        encryptType: '1', // 如果播放加密视频，则需设置encryptType=1，非加密视频无需设置此项\r\n        width: '800px',\r\n        height: '450px',\r\n        //cover: 'http://guli.shop/photo/banner/1525939573202.jpg', // 封面\r\n        qualitySort: 'asc', // 清晰度排序\r\n        mediaType: 'video', // 返回音频还是视频\r\n        autoplay: true, // 自动播放\r\n        isLive: false, // 直播\r\n        rePlay: false, // 循环播\r\n        preload: true,\r\n        controlBarVisibility: 'hover', // 控制条的显示方式：鼠标悬停\r\n        useH5Prism: true, // 播放器类型：html5\r\n      }, function(player) {\r\n        console.log('播放器创建成功')\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}