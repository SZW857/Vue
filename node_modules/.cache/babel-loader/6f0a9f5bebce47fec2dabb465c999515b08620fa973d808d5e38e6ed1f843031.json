{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nrequire('../../../utils/index.js');\nrequire('../../../hooks/index.js');\nrequire('../../popper/index.js');\nvar content = require('./content.js');\nvar trigger = require('./trigger.js');\nvar index = require('../../../hooks/use-model-toggle/index.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar popper = require('../../popper/src/popper.js');\nvar arrow = require('../../popper/src/arrow.js');\nconst {\n  useModelToggleProps: useTooltipModelToggleProps,\n  useModelToggleEmits: useTooltipModelToggleEmits,\n  useModelToggle: useTooltipModelToggle\n} = index.createModelToggleComposable(\"visible\");\nconst useTooltipProps = runtime.buildProps({\n  ...popper.popperProps,\n  ...useTooltipModelToggleProps,\n  ...content.useTooltipContentProps,\n  ...trigger.useTooltipTriggerProps,\n  ...arrow.popperArrowProps,\n  showArrow: {\n    type: Boolean,\n    default: true\n  }\n});\nconst tooltipEmits = [...useTooltipModelToggleEmits, \"before-show\", \"before-hide\", \"show\", \"hide\", \"open\", \"close\"];\nexports.tooltipEmits = tooltipEmits;\nexports.useTooltipModelToggle = useTooltipModelToggle;\nexports.useTooltipModelToggleEmits = useTooltipModelToggleEmits;\nexports.useTooltipModelToggleProps = useTooltipModelToggleProps;\nexports.useTooltipProps = useTooltipProps;","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAKY,MAAC;EACXA,mBAAmB,EAAEC,0BAA0B;EAC/CC,mBAAmB,EAAEC,0BAA0B;EAC/CC,cAAc,EAAEC;AAClB,CAAC,GAAGC,iCAA2B,CAAC,SAAS;AAC7B,MAACC,eAAe,GAAGC,kBAAU,CAAC;EACxC,GAAGC,kBAAW;EACd,GAAGR,0BAA0B;EAC7B,GAAGS,8BAAsB;EACzB,GAAGC,8BAAsB;EACzB,GAAGC,sBAAgB;EACnBC,SAAS,EAAE;IACTC,IAAI,EAAEC,OAAO;IACbC,OAAO,EAAE;EACb;AACA,CAAC;AACW,MAACC,YAAY,GAAG,CAC1B,GAAGd,0BAA0B,EAC7B,aAAa,EACb,aAAa,EACb,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,CACT","names":["useModelToggleProps","useTooltipModelToggleProps","useModelToggleEmits","useTooltipModelToggleEmits","useModelToggle","useTooltipModelToggle","createModelToggleComposable","useTooltipProps","buildProps","popperProps","useTooltipContentProps","useTooltipTriggerProps","popperArrowProps","showArrow","type","Boolean","default","tooltipEmits"],"sources":["../../../../../../packages/components/tooltip/src/tooltip.ts"],"sourcesContent":["import { buildProps } from '@element-plus/utils'\nimport { createModelToggleComposable } from '@element-plus/hooks'\nimport { popperArrowProps, popperProps } from '@element-plus/components/popper'\nimport { useTooltipContentProps } from './content'\nimport { useTooltipTriggerProps } from './trigger'\nimport type Tooltip from './tooltip.vue'\n\nimport type { ExtractPropTypes } from 'vue'\n\nexport const {\n  useModelToggleProps: useTooltipModelToggleProps,\n  useModelToggleEmits: useTooltipModelToggleEmits,\n  useModelToggle: useTooltipModelToggle,\n} = createModelToggleComposable('visible' as const)\n\nexport const useTooltipProps = buildProps({\n  ...popperProps,\n  ...useTooltipModelToggleProps,\n  ...useTooltipContentProps,\n  ...useTooltipTriggerProps,\n  ...popperArrowProps,\n  showArrow: {\n    type: Boolean,\n    default: true,\n  },\n})\n\nexport const tooltipEmits = [\n  ...useTooltipModelToggleEmits,\n  'before-show',\n  'before-hide',\n  'show',\n  'hide',\n  'open',\n  'close',\n]\n\nexport type ElTooltipProps = ExtractPropTypes<typeof useTooltipProps>\n\nexport type TooltipInstance = InstanceType<typeof Tooltip>\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}