{"ast":null,"code":"export default {\n  data() {\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n        console.log(value);\n      } else {\n        if (this.passwdCheck(value)) {\n          this.$refs.ruleForm.validateField('confirmPass');\n          callback();\n        } else if (value.length < 8 || value.length > 16) {\n          callback(new Error(\"密码长度错误,应为(8~18)位\"));\n        } else {\n          callback(new Error(\"密码格式不对(数字+密码组合)\"));\n        }\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        pass: '',\n        confirmPass: ''\n      },\n      rules: {\n        pass: [{\n          required: true,\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        confirmPass: [{\n          required: true,\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    //校验密码强度\n    passwdCheck(num) {\n      let reg = /^(?![\\d]+$)(?![a-zA-Z]+$)(?![^\\da-zA-Z]+$).{6,20}$/;\n      if (reg.test(num) === false) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert('submit!');\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"mappings":"AAsCA,eAAe;EACbA,IAAI,GAAG;IACL,IAAIC,YAAW,GAAI,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC5C,IAAID,KAAI,KAAM,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC;QAC3BC,OAAO,CAACC,GAAG,CAACJ,KAAK;MACnB,CAAC,MAAI;QACH,IAAI,IAAI,CAACK,WAAW,CAACL,KAAK,CAAC,EAAE;UAC3B,IAAI,CAACM,KAAK,CAACC,QAAQ,CAACC,aAAa,CAAC,aAAa;UAC/CP,QAAQ,EAAC;QACX,CAAC,MAAK,IAAID,KAAK,CAACS,MAAM,GAAC,CAAC,IAAET,KAAK,CAACS,MAAM,GAAC,EAAE,EAAC;UACxCR,QAAQ,CAAC,IAAIC,KAAK,CAAC,kBAAkB,CAAC;QACxC,CAAC,MAAK;UACJD,QAAQ,CAAC,IAAIC,KAAK,CAAC,iBAAiB,CAAC;QACvC;MACF;IACF;IACA,IAAIQ,aAAY,GAAI,CAACX,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC7C,IAAID,KAAI,KAAM,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,SAAS,CAAC;MAC/B,OAAO,IAAIF,KAAI,KAAM,IAAI,CAACO,QAAQ,CAACI,IAAI,EAAE;QACvCV,QAAQ,CAAC,IAAIC,KAAK,CAAC,YAAY,CAAC;MAClC,OAAO;QACLD,QAAQ,EAAC;MACX;IACF;IACA,OAAO;MACLM,QAAQ,EAAE;QACRI,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE;MACf,CAAC;MACDC,KAAK,EAAE;QACLF,IAAI,EAAE,CAAC;UAAEG,QAAQ,EAAC,IAAI;UAACC,SAAS,EAAEjB,YAAY;UAAEkB,OAAO,EAAE;QAAM,CAAC,CAAC;QACjEJ,WAAW,EAAE,CAAC;UAAEE,QAAQ,EAAC,IAAI;UAACC,SAAS,EAAEL,aAAa;UAAEM,OAAO,EAAE;QAAO,CAAC;MAC3E;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACAZ,WAAW,CAACa,GAAG,EAAC;MACd,IAAIC,GAAE,GAAI,oDAAoD;MAC9D,IAAIA,GAAG,CAACC,IAAI,CAACF,GAAG,MAAM,KAAK,EAAC;QAC1B,OAAO,KAAK;MACd,CAAC,MAAK;QACJ,OAAO,IAAI;MACb;IACF,CAAC;IACDG,UAAU,CAACC,QAAQ,EAAE;MACnB,IAAI,CAAChB,KAAK,CAACgB,QAAQ,CAAC,CAACC,QAAQ,CAAEC,KAAK,IAAK;QACvC,IAAIA,KAAK,EAAE;UACTC,KAAK,CAAC,SAAS;QACjB,OAAO;UACLtB,OAAO,CAACC,GAAG,CAAC,gBAAgB;UAC5B,OAAO,KAAI;QACb;MACF,CAAC;IACH,CAAC;IACDsB,SAAS,CAACJ,QAAQ,EAAE;MAClB,IAAI,CAAChB,KAAK,CAACgB,QAAQ,CAAC,CAACK,WAAW,EAAC;IACnC;EACF;AAEF","names":["data","validatePass","rule","value","callback","Error","console","log","passwdCheck","$refs","ruleForm","validateField","length","validatePass2","pass","confirmPass","rules","required","validator","trigger","methods","num","reg","test","submitForm","formName","validate","valid","alert","resetForm","resetFields"],"sourceRoot":"","sources":["C:\\Users\\14486\\Desktop\\社区公益系统前端\\vue_community\\src\\components\\personalPage\\changePasswd.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"body\">\r\n  <el-form\r\n      :model=\"ruleForm\"\r\n      status-icon\r\n      :rules=\"rules\"\r\n      ref=\"ruleForm\"\r\n      label-width=\"100px\"\r\n      class=\"demo-ruleForm\"\r\n      style=\"width: 500px;margin-top: 80px\"\r\n  >\r\n    <el-form-item label=\"密码\" prop=\"pass\">\r\n      <el-input\r\n          type=\"password\"\r\n          v-model=\"ruleForm.pass\"\r\n          autocomplete=\"off\"\r\n          :maxlength=\"16\"\r\n          :minlength=\"8\"\r\n      ></el-input>\r\n    </el-form-item>\r\n    <el-form-item label=\"确认密码\" prop=\"confirmPass\">\r\n      <el-input\r\n          type=\"password\"\r\n          v-model=\"ruleForm.confirmPass\"\r\n          autocomplete=\"off\"\r\n      ></el-input>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\r\n      <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'))\r\n        console.log(value)\r\n      }else{\r\n        if (this.passwdCheck(value)) {\r\n          this.$refs.ruleForm.validateField('confirmPass')\r\n          callback()\r\n        }else if (value.length<8||value.length>16){\r\n          callback(new Error(\"密码长度错误,应为(8~18)位\"))\r\n        }else {\r\n          callback(new Error(\"密码格式不对(数字+密码组合)\"))\r\n        }\r\n      }\r\n    }\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'))\r\n      } else if (value !== this.ruleForm.pass) {\r\n        callback(new Error('两次输入密码不一致!'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      ruleForm: {\r\n        pass: '',\r\n        confirmPass: '',\r\n      },\r\n      rules: {\r\n        pass: [{ required:true,validator: validatePass, trigger: 'blur'}],\r\n        confirmPass: [{ required:true,validator: validatePass2, trigger: 'blur' }],\r\n      },\r\n    }\r\n  },\r\n  methods: {\r\n    //校验密码强度\r\n    passwdCheck(num){\r\n      let reg = /^(?![\\d]+$)(?![a-zA-Z]+$)(?![^\\da-zA-Z]+$).{6,20}$/;\r\n      if (reg.test(num) === false){\r\n        return false;\r\n      }else {\r\n        return true;\r\n      }\r\n    },\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          alert('submit!')\r\n        } else {\r\n          console.log('error submit!!')\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    },\r\n  },\r\n\r\n}\r\n</script>\r\n<style>\r\n.container{\r\n  height: 700px;\r\n  background: linear-gradient(to bottom, rgb(18, 80, 61), #479cb7);\r\n}\r\n.body{\r\n  margin-left: 300px;\r\n  height: 300px;\r\n  width: 550px;\r\n  position: absolute;\r\n  margin-top:50px ;\r\n  background: linear-gradient(to bottom, rgb(171, 231, 165),lightblue);\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}