{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../../hooks/index.js');\nrequire('../../../tokens/index.js');\nvar row = require('./row.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar row$1 = require('../../../tokens/row.js');\nconst __default__ = vue.defineComponent({\n  name: \"ElRow\"\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: row.rowProps,\n  setup(__props) {\n    const props = __props;\n    const ns = index.useNamespace(\"row\");\n    const gutter = vue.computed(() => props.gutter);\n    vue.provide(row$1.rowContextKey, {\n      gutter\n    });\n    const style = vue.computed(() => {\n      const styles = {};\n      if (!props.gutter) {\n        return styles;\n      }\n      styles.marginRight = styles.marginLeft = `-${props.gutter / 2}px`;\n      return styles;\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.tag), {\n        class: vue.normalizeClass([vue.unref(ns).b(), vue.unref(ns).is(`justify-${props.justify}`, _ctx.justify !== \"start\"), vue.unref(ns).is(`align-${props.align}`, _ctx.align !== \"top\")]),\n        style: vue.normalizeStyle(vue.unref(style))\n      }, {\n        default: vue.withCtx(() => [vue.renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 8, [\"class\", \"style\"]);\n    };\n  }\n});\nvar Row = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/row/src/row.vue\"]]);\nexports[\"default\"] = Row;","map":{"version":3,"mappings":";;;;;;;;;;;;uCAqBc;EACZA,IAAM;AACR;;;;;;IAIM,WAAKC,mBAAa,KAAK;IAC7B,MAAMC,MAAS,gBAAS,MAAMC,MAAMD,MAAM;IAE1CE,YAAQC,mBAAe;MACrBH;IAAA,CACD;IAEK,cAAQI,aAAS,MAAM;MAC3B,MAAMC,SAAwB,EAAC;MAC3B,KAACJ,MAAMD,MAAQ;QACV;MAAA;MAGTK,OAAOC,WAAc,UAAOC,UAAa,OAAIN,MAAMD,MAAS;MACrD;IAAA,CACR","names":["name","useNamespace","gutter","props","provide","rowContextKey","computed","styles","marginRight","marginLeft"],"sources":["../../../../../../packages/components/row/src/row.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"tag\"\n    :class=\"[\n      ns.b(),\n      ns.is(`justify-${props.justify}`, justify !== 'start'),\n      ns.is(`align-${props.align}`, align !== 'top'),\n    ]\"\n    :style=\"style\"\n  >\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, provide } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { rowContextKey } from '@element-plus/tokens'\nimport { rowProps } from './row'\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElRow',\n})\n\nconst props = defineProps(rowProps)\n\nconst ns = useNamespace('row')\nconst gutter = computed(() => props.gutter)\n\nprovide(rowContextKey, {\n  gutter,\n})\n\nconst style = computed(() => {\n  const styles: CSSProperties = {}\n  if (!props.gutter) {\n    return styles\n  }\n\n  styles.marginRight = styles.marginLeft = `-${props.gutter / 2}px`\n  return styles\n})\n</script>\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}