{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../../hooks/index.js');\nrequire('../../../utils/index.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar style = require('../../../utils/dom/style.js');\nconst _sfc_main = vue.defineComponent({\n  name: \"ElMenuCollapseTransition\",\n  setup() {\n    const ns = index.useNamespace(\"menu\");\n    const listeners = {\n      onBeforeEnter: el => el.style.opacity = \"0.2\",\n      onEnter(el, done) {\n        style.addClass(el, `${ns.namespace.value}-opacity-transition`);\n        el.style.opacity = \"1\";\n        done();\n      },\n      onAfterEnter(el) {\n        style.removeClass(el, `${ns.namespace.value}-opacity-transition`);\n        el.style.opacity = \"\";\n      },\n      onBeforeLeave(el) {\n        if (!el.dataset) {\n          ;\n          el.dataset = {};\n        }\n        if (style.hasClass(el, ns.m(\"collapse\"))) {\n          style.removeClass(el, ns.m(\"collapse\"));\n          el.dataset.oldOverflow = el.style.overflow;\n          el.dataset.scrollWidth = el.clientWidth.toString();\n          style.addClass(el, ns.m(\"collapse\"));\n        } else {\n          style.addClass(el, ns.m(\"collapse\"));\n          el.dataset.oldOverflow = el.style.overflow;\n          el.dataset.scrollWidth = el.clientWidth.toString();\n          style.removeClass(el, ns.m(\"collapse\"));\n        }\n        el.style.width = `${el.scrollWidth}px`;\n        el.style.overflow = \"hidden\";\n      },\n      onLeave(el) {\n        style.addClass(el, \"horizontal-collapse-transition\");\n        el.style.width = `${el.dataset.scrollWidth}px`;\n      }\n    };\n    return {\n      listeners\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return vue.openBlock(), vue.createBlock(vue.Transition, vue.mergeProps({\n    mode: \"out-in\"\n  }, _ctx.listeners), {\n    default: vue.withCtx(() => [vue.renderSlot(_ctx.$slots, \"default\")]),\n    _: 3\n  }, 16);\n}\nvar ElMenuCollapseTransition = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/menu/src/menu-collapse-transition.vue\"]]);\nexports[\"default\"] = ElMenuCollapseTransition;","map":{"version":3,"mappings":";;;;;;;;;;;AAYA,MAAKA,YAAaC,mBAAa;EAC7BC,IAAM;EACNC,KAAQ;IACA,WAAKC,mBAAa,MAAM;IAC9B,MAAMC,SAAY;MAChBC,aAAe,EAACC,EAAQ,OAAGC,MAAMC,OAAU;MAC3CC,QAAQH,IAAII,IAAM;QAChBC,eAASL,EAAI,KAAGM,EAAG,WAAUC,KAA0B;QACvDP,GAAGC,MAAMC,OAAU;QACdE;MAAA,CACP;MAEAI,aAAaR,EAAI;QACfS,kBAAYT,EAAI,KAAGM,EAAG,WAAUC,KAA0B;QAC1DP,GAAGC,MAAMC,OAAU;MAAA,CACrB;MAEAQ,cAAcV,EAAI;QACZ,KAACA,GAAGW,OAAS;UACf;UAAEX,GAAWW,UAAU,EAAC;QAAA;QAG1B,IAAIC,eAASZ,EAAI,KAAGa,CAAE,WAAU,CAAC,CAAG;UAClCJ,kBAAYT,EAAI,KAAGa,CAAE,WAAU,CAAC;UAC7Bb,WAAQc,WAAc,MAAGb,KAAM;UAClCD,GAAGW,OAAQ,eAAcX,EAAG,aAAYe,QAAS;UACjDV,eAASL,EAAI,KAAGa,CAAE,WAAU,CAAC;QAAA,CACxB;UACLR,eAASL,EAAI,KAAGa,CAAE,WAAU,CAAC;UAC1Bb,WAAQc,WAAc,MAAGb,KAAM;UAClCD,GAAGW,OAAQ,eAAcX,EAAG,aAAYe,QAAS;UACjDN,kBAAYT,EAAI,KAAGa,CAAE,WAAU,CAAC;QAAA;QAG/Bb,SAAMgB,KAAQ,MAAGhB,EAAG;QACvBA,GAAGC,MAAMgB,QAAW;MAAA,CACtB;MAEAC,QAAQlB,EAAiB;QACvBK,eAASL,IAAI,gCAAgC;QAC7CA,GAAGC,KAAM,SAAW,MAAGU,OAAQ;MAAA;IACjC,CACF;IAEO;MACLb;IAAA,CACF;EAAA;AAEJ,CAAC;;EA3DC,wCAEaqB,gBAFbC,cAEa;IAFDC,IAAK;EAAA,GAAiBC,IAAS;IAAAC,qBACzC,MAAQ,CAARC,cAAQ","names":["_sfc_main","defineComponent","name","setup","useNamespace","listeners","onBeforeEnter","el","style","opacity","onEnter","done","addClass","ns","value","onAfterEnter","removeClass","onBeforeLeave","dataset","hasClass","m","oldOverflow","toString","width","overflow","onLeave","_Transition","_mergeProps","mode","_ctx","default","_renderSlot"],"sources":["../../../../../../packages/components/menu/src/menu-collapse-transition.vue"],"sourcesContent":["<template>\n  <transition mode=\"out-in\" v-bind=\"listeners\">\n    <slot />\n  </transition>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { addClass, hasClass, removeClass } from '@element-plus/utils'\n\nimport type { BaseTransitionProps, TransitionProps } from 'vue'\n\nexport default defineComponent({\n  name: 'ElMenuCollapseTransition',\n  setup() {\n    const ns = useNamespace('menu')\n    const listeners = {\n      onBeforeEnter: (el) => (el.style.opacity = '0.2'),\n      onEnter(el, done) {\n        addClass(el, `${ns.namespace.value}-opacity-transition`)\n        el.style.opacity = '1'\n        done()\n      },\n\n      onAfterEnter(el) {\n        removeClass(el, `${ns.namespace.value}-opacity-transition`)\n        el.style.opacity = ''\n      },\n\n      onBeforeLeave(el) {\n        if (!el.dataset) {\n          ;(el as any).dataset = {}\n        }\n\n        if (hasClass(el, ns.m('collapse'))) {\n          removeClass(el, ns.m('collapse'))\n          el.dataset.oldOverflow = el.style.overflow\n          el.dataset.scrollWidth = el.clientWidth.toString()\n          addClass(el, ns.m('collapse'))\n        } else {\n          addClass(el, ns.m('collapse'))\n          el.dataset.oldOverflow = el.style.overflow\n          el.dataset.scrollWidth = el.clientWidth.toString()\n          removeClass(el, ns.m('collapse'))\n        }\n\n        el.style.width = `${el.scrollWidth}px`\n        el.style.overflow = 'hidden'\n      },\n\n      onLeave(el: HTMLElement) {\n        addClass(el, 'horizontal-collapse-transition')\n        el.style.width = `${el.dataset.scrollWidth}px`\n      },\n    } as BaseTransitionProps<HTMLElement> as TransitionProps\n\n    return {\n      listeners,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}