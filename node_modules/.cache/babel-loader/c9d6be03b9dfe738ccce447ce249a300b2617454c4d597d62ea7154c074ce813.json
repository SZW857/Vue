{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"email\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", null, \" 邮箱: \", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_5 = {\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    onBlur: _cache[1] || (_cache[1] = (...args) => $options.email_blur && $options.email_blur(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.email]]), _hoisted_4, _createElementVNode(\"h4\", null, [_createElementVNode(\"span\", _hoisted_5, _toDisplayString($data.message), 1 /* TEXT */)]), _hoisted_6]);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;AAAO;gCACbC,oBAEK,YAFD,OAEJ;gCACAA,oBAAI;gCAEJA,oBAAI;;EAEMC,KAAkB,EAAlB;IAAA;EAAA;AAAkB;gCAI5BD,oBAAI;;;uBAZNE,oBAcM,OAdNC,UAcM,GAbJC,UAEK,EACLC,UAAI,kBACJL,oBAAuD;IAAhDM,IAAI,EAAC,OAAO;+DAAUC,WAAK;IAAGC,MAAI,yCAAEC,mDAAU;iEAAxBF,WAAK,KAClCG,UAAI,EACJV,oBAIK,aAHDA,oBAEI,QAFJW,UAEI,mBADJJ,aAAO,oBAGXK,UAAI","names":["id","_createElementVNode","style","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","type","$data","onBlur","$options","_hoisted_4","_hoisted_5","_hoisted_6"],"sourceRoot":"","sources":["C:\\Users\\14486\\Desktop\\社区公益系统前端\\vue_community\\src\\NavigationBar\\PointsGoods.vue"],"sourcesContent":["<template>\r\n  <div id=\"email\">\r\n    <h3>\r\n      邮箱:\r\n    </h3>\r\n    <br>\r\n    <input type=\"email\" v-model=\"email\" @blur=\"email_blur\">\r\n    <br>\r\n    <h4>\r\n        <span style=\"color: red\">\r\n    \t\t{{message}}\r\n    \t</span>\r\n    </h4>\r\n    <br>\r\n\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: '',\r\n      message: '',\r\n      dynamicValidateForm: {\r\n        domains: [\r\n          {\r\n            value: '',\r\n          },\r\n        ],\r\n        email: '',\r\n      },\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          alert('submit!')\r\n        } else {\r\n          console.log('error submit!!')\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    },\r\n    removeDomain(item) {\r\n      var index = this.dynamicValidateForm.domains.indexOf(item)\r\n      if (index !== -1) {\r\n        this.dynamicValidateForm.domains.splice(index, 1)\r\n      }\r\n    },\r\n    addDomain() {\r\n      this.dynamicValidateForm.domains.push({\r\n        value: '',\r\n        key: Date.now(),\r\n      })\r\n    },\r\n    email_blur() {\r\n      var verify = /^\\w[-\\w.+]*@([A-Za-z0-9][-A-Za-z0-9]+\\.)+[A-Za-z]{2,14}/;\r\n      if (!verify.test(this.email)) {\r\n        this.message = '邮箱格式错误, 请重新输入'\r\n      } else {\r\n        this.message = '可以请求接口了'\r\n\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}