{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"player-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_video_player = _resolveComponent(\"video-player\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_video_player, {\n    class: \"vjs-custom-skin\",\n    options: $data.playerOptions\n  }, null, 8 /* PROPS */, [\"options\"])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAkB;;;uBAA7BC,oBAEM,OAFNC,UAEM,GADJC,aAA8EC;IAAhEJ,KAAK,EAAC,iBAAiB;IAAEK,OAAO,EAAEC","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_video_player","options","$data"],"sourceRoot":"","sources":["C:\\Users\\14486\\Desktop\\社区公益系统前端\\vue_community\\src\\NavigationBar\\test.vue"],"sourcesContent":["<template>\r\n  <div class=\"player-container\">\r\n    <video-player class=\"vjs-custom-skin\" :options=\"playerOptions\"></video-player>\r\n  </div>\r\n</template>\r\n<script>\r\n//引入video样式\r\nimport 'video.js/dist/video-js.css'\r\n// import 'vue-video-player/src/custom-theme.css'\r\n// //引入hls.js\r\n// import 'videojs-contrib-hls.js/src/videojs.hlsjs'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      playerOptions: {\r\n        playbackRates: [0.7, 1.0, 1.5, 2.0], //播放速度\r\n        autoplay: false, //如果true,浏览器准备好时开始回放。\r\n        controls: true, //控制条\r\n        preload: 'auto', //视频预加载\r\n        muted: false, //默认情况下将会消除任何音频。\r\n        loop: false, //导致视频一结束就重新开始。\r\n        language: 'zh-CN',\r\n        aspectRatio: '16:9', // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\r\n        fluid: true, // 当true时，Video.js player将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\r\n        sources: [{\r\n          type: 'video/mp4',\r\n          src: '@/static/vedio/catoon.mp4'//你所放置的视频的地址，最好是放在服务器上\r\n        }],\r\n        poster: \"http://127.0.0.1:8080/static/picture/02.png\", //你的封面地址（覆盖在视频上面的图片）\r\n        width: document.documentElement.clientWidth,\r\n        notSupportedMessage: '此视频暂无法播放，请稍后再试' //允许覆盖Video.js无法播放媒体源时显示的默认信息。\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}