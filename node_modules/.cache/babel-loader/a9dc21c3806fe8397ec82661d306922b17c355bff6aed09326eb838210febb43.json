{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar dayjs = require('dayjs');\nrequire('../../../../hooks/index.js');\nrequire('../../../time-picker/index.js');\nrequire('../../../../utils/index.js');\nvar basicYearTable = require('../props/basic-year-table.js');\nvar pluginVue_exportHelper = require('../../../../_virtual/plugin-vue_export-helper.js');\nvar utils = require('../../../time-picker/src/utils.js');\nvar index = require('../../../../hooks/use-namespace/index.js');\nvar index$1 = require('../../../../hooks/use-locale/index.js');\nvar arrays = require('../../../../utils/arrays.js');\nvar style = require('../../../../utils/dom/style.js');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);\nconst _hoisted_1 = [\"aria-label\"];\nconst _hoisted_2 = [\"aria-selected\", \"tabindex\", \"onKeydown\"];\nconst _hoisted_3 = {\n  class: \"cell\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  __name: \"basic-year-table\",\n  props: basicYearTable.basicYearTableProps,\n  emits: [\"pick\"],\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const props = __props;\n    const datesInYear = (year, lang2) => {\n      const firstDay = dayjs__default[\"default\"](String(year)).locale(lang2).startOf(\"year\");\n      const lastDay = firstDay.endOf(\"year\");\n      const numOfDays = lastDay.dayOfYear();\n      return utils.rangeArr(numOfDays).map(n => firstDay.add(n, \"day\").toDate());\n    };\n    const ns = index.useNamespace(\"year-table\");\n    const {\n      t,\n      lang\n    } = index$1.useLocale();\n    const tbodyRef = vue.ref();\n    const currentCellRef = vue.ref();\n    const startYear = vue.computed(() => {\n      return Math.floor(props.date.year() / 10) * 10;\n    });\n    const focus = () => {\n      var _a;\n      (_a = currentCellRef.value) == null ? void 0 : _a.focus();\n    };\n    const getCellKls = year => {\n      const kls = {};\n      const today = dayjs__default[\"default\"]().locale(lang.value);\n      kls.disabled = props.disabledDate ? datesInYear(year, lang.value).every(props.disabledDate) : false;\n      kls.current = arrays.castArray(props.parsedValue).findIndex(d => d.year() === year) >= 0;\n      kls.today = today.year() === year;\n      return kls;\n    };\n    const isSelectedCell = year => {\n      return year === startYear.value && props.date.year() < startYear.value && props.date.year() > startYear.value + 9 || arrays.castArray(props.date).findIndex(date => date.year() === year) >= 0;\n    };\n    const handleYearTableClick = event => {\n      const clickTarget = event.target;\n      const target = clickTarget.closest(\"td\");\n      if (target && target.textContent) {\n        if (style.hasClass(target, \"disabled\")) return;\n        const year = target.textContent || target.innerText;\n        emit(\"pick\", Number(year));\n      }\n    };\n    vue.watch(() => props.date, async () => {\n      var _a, _b;\n      if ((_a = tbodyRef.value) == null ? void 0 : _a.contains(document.activeElement)) {\n        await vue.nextTick();\n        (_b = currentCellRef.value) == null ? void 0 : _b.focus();\n      }\n    });\n    expose({\n      focus\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(\"table\", {\n        role: \"grid\",\n        \"aria-label\": vue.unref(t)(\"el.datepicker.yearTablePrompt\"),\n        class: vue.normalizeClass(vue.unref(ns).b()),\n        onClick: handleYearTableClick\n      }, [vue.createElementVNode(\"tbody\", {\n        ref_key: \"tbodyRef\",\n        ref: tbodyRef\n      }, [(vue.openBlock(), vue.createElementBlock(vue.Fragment, null, vue.renderList(3, (_, i) => {\n        return vue.createElementVNode(\"tr\", {\n          key: i\n        }, [(vue.openBlock(), vue.createElementBlock(vue.Fragment, null, vue.renderList(4, (__, j) => {\n          return vue.openBlock(), vue.createElementBlock(vue.Fragment, {\n            key: i + \"_\" + j\n          }, [i * 4 + j < 10 ? (vue.openBlock(), vue.createElementBlock(\"td\", {\n            key: 0,\n            ref_for: true,\n            ref: el => isSelectedCell(vue.unref(startYear) + i * 4 + j) && (currentCellRef.value = el),\n            class: vue.normalizeClass([\"available\", getCellKls(vue.unref(startYear) + i * 4 + j)]),\n            \"aria-selected\": `${isSelectedCell(vue.unref(startYear) + i * 4 + j)}`,\n            tabindex: isSelectedCell(vue.unref(startYear) + i * 4 + j) ? 0 : -1,\n            onKeydown: [vue.withKeys(vue.withModifiers(handleYearTableClick, [\"prevent\", \"stop\"]), [\"space\"]), vue.withKeys(vue.withModifiers(handleYearTableClick, [\"prevent\", \"stop\"]), [\"enter\"])]\n          }, [vue.createElementVNode(\"span\", _hoisted_3, vue.toDisplayString(vue.unref(startYear) + i * 4 + j), 1)], 42, _hoisted_2)) : (vue.openBlock(), vue.createElementBlock(\"td\", _hoisted_4))], 64);\n        }), 64))]);\n      }), 64))], 512)], 10, _hoisted_1);\n    };\n  }\n});\nvar YearTable = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/basic-year-table.vue\"]]);\nexports[\"default\"] = YearTable;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAwCM,oBAAc,CAACA,MAAcC,KAAiB;MAC5C,iBAAWC,yBAAM,QAAOF,IAAI,CAAC,EAAEG,MAAO,MAAI,CAAE,SAAQ,MAAM;MAC1D,gBAAUC,QAAS,OAAM,MAAM;MAC/B,kBAAYC,QAAQC,SAAU;MACpC,OAAOC,cAAS,UAAS,CAAE,KAAKC,KAAMJ,QAAS,KAAII,CAAG,OAAK,CAAE,SAAQ;IAAA,CACvE;IAKM,WAAKC,mBAAa,YAAY;IAE9B;MAAEC,CAAG;MAAAC;IAAA,IAASC,iBAAU;IAC9B,MAAMC,WAAWC,OAAiB;IAClC,MAAMC,iBAAiBD,OAAiB;IAClC,kBAAYE,aAAS,MAAM;MAC/B,OAAOC,KAAKC,KAAM,OAAMC,KAAKnB,IAAK,KAAI,EAAE,CAAI;IAAA,CAC7C;IAED,MAAMoB,QAAQ,MAAM;MAClB;MACF;IAEA,CAAM;IACJ,gBAAsC;MACtC,MAAMC,GAAQ;MAEV,uCAAiB,oBACL;MAGhBA,IAAIC,QACF,qBAAgB,cAAa,OAAWX,UAAS,OAAW,MAAI,CAAKY;MAEnEF,cAAcG,gBAAK,CAAMC;MAEtBJ;MACT;IAEA,CAAM;IAED,oBAAmB;MAKxB;IAEA,CAAM;IACJ,0BAA0B;MACpB,iBAAqB;MACvB,0BAA8B;MAC5B,gCAA2B;QAAG,wCAC5B;QACD,aAAQK,MAAO,YAAK;QAC3BC;MAAA;IAGF,CACE;IAEEC,UAAI,MAASH,UAAO,EAAS;MAC3B,QAAMI,EAAS;MACf,wBAAsB,KAAM;QAC9B;QAEJ;MAEA;IAAa,CAIX;IACFC,MAAC","names":["year","lang2","dayjs","locale","firstDay","lastDay","dayOfYear","rangeArr","n","useNamespace","t","lang","useLocale","tbodyRef","ref","currentCellRef","computed","Math","floor","date","focus","kls","disabled","disabledDate","castArray","props","target","emit","watch","_b","expose"],"sources":["../../../../../../../packages/components/date-picker/src/date-picker-com/basic-year-table.vue"],"sourcesContent":["<template>\n  <table\n    role=\"grid\"\n    :aria-label=\"t('el.datepicker.yearTablePrompt')\"\n    :class=\"ns.b()\"\n    @click=\"handleYearTableClick\"\n  >\n    <tbody ref=\"tbodyRef\">\n      <tr v-for=\"(_, i) in 3\" :key=\"i\">\n        <template v-for=\"(__, j) in 4\" :key=\"i + '_' + j\">\n          <td\n            v-if=\"i * 4 + j < 10\"\n            :ref=\"\n              (el) =>\n                isSelectedCell(startYear + i * 4 + j) && (currentCellRef = el as HTMLElement)\n            \"\n            class=\"available\"\n            :class=\"getCellKls(startYear + i * 4 + j)\"\n            :aria-selected=\"`${isSelectedCell(startYear + i * 4 + j)}`\"\n            :tabindex=\"isSelectedCell(startYear + i * 4 + j) ? 0 : -1\"\n            @keydown.space.prevent.stop=\"handleYearTableClick\"\n            @keydown.enter.prevent.stop=\"handleYearTableClick\"\n          >\n            <span class=\"cell\">{{ startYear + i * 4 + j }}</span>\n          </td>\n          <td v-else />\n        </template>\n      </tr>\n    </tbody>\n  </table>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, nextTick, ref, watch } from 'vue'\nimport dayjs from 'dayjs'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { rangeArr } from '@element-plus/components/time-picker'\nimport { castArray, hasClass } from '@element-plus/utils'\nimport { basicYearTableProps } from '../props/basic-year-table'\n\nconst datesInYear = (year: number, lang: string) => {\n  const firstDay = dayjs(String(year)).locale(lang).startOf('year')\n  const lastDay = firstDay.endOf('year')\n  const numOfDays = lastDay.dayOfYear()\n  return rangeArr(numOfDays).map((n) => firstDay.add(n, 'day').toDate())\n}\n\nconst props = defineProps(basicYearTableProps)\nconst emit = defineEmits(['pick'])\n\nconst ns = useNamespace('year-table')\n\nconst { t, lang } = useLocale()\nconst tbodyRef = ref<HTMLElement>()\nconst currentCellRef = ref<HTMLElement>()\nconst startYear = computed(() => {\n  return Math.floor(props.date.year() / 10) * 10\n})\n\nconst focus = () => {\n  currentCellRef.value?.focus()\n}\n\nconst getCellKls = (year: number) => {\n  const kls: Record<string, boolean> = {}\n  const today = dayjs().locale(lang.value)\n\n  kls.disabled = props.disabledDate\n    ? datesInYear(year, lang.value).every(props.disabledDate)\n    : false\n\n  kls.current =\n    castArray(props.parsedValue).findIndex((d) => d!.year() === year) >= 0\n\n  kls.today = today.year() === year\n\n  return kls\n}\n\nconst isSelectedCell = (year: number) => {\n  return (\n    (year === startYear.value &&\n      props.date.year() < startYear.value &&\n      props.date.year() > startYear.value + 9) ||\n    castArray(props.date).findIndex((date) => date.year() === year) >= 0\n  )\n}\n\nconst handleYearTableClick = (event: MouseEvent | KeyboardEvent) => {\n  const clickTarget = event.target as HTMLDivElement\n  const target = clickTarget.closest('td')\n  if (target && target.textContent) {\n    if (hasClass(target, 'disabled')) return\n    const year = target.textContent || target.innerText\n    emit('pick', Number(year))\n  }\n}\n\nwatch(\n  () => props.date,\n  async () => {\n    if (tbodyRef.value?.contains(document.activeElement)) {\n      await nextTick()\n      currentCellRef.value?.focus()\n    }\n  }\n)\n\ndefineExpose({\n  /**\n   * @description focus on the current cell\n   */\n  focus,\n})\n</script>\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}