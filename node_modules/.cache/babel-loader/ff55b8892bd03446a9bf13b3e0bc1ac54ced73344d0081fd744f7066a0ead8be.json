{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar shared = require('@vue/shared');\nrequire('../../../utils/index.js');\nvar i18n = require('../../../utils/i18n.js');\nfunction useInput(handleInput) {\n  const isComposing = vue.ref(false);\n  const handleCompositionStart = () => {\n    isComposing.value = true;\n  };\n  const handleCompositionUpdate = event => {\n    const text = event.target.value;\n    const lastCharacter = text[text.length - 1] || \"\";\n    isComposing.value = !i18n.isKorean(lastCharacter);\n  };\n  const handleCompositionEnd = event => {\n    if (isComposing.value) {\n      isComposing.value = false;\n      if (shared.isFunction(handleInput)) {\n        handleInput(event);\n      }\n    }\n  };\n  return {\n    handleCompositionStart,\n    handleCompositionUpdate,\n    handleCompositionEnd\n  };\n}\nexports.useInput = useInput;","map":{"version":3,"mappings":";;;;;;;;;AAGO,SAASA,QAAQ,CAACC,WAAW,EAAE;EACpC,MAAMC,WAAW,GAAGC,OAAG,CAAC,KAAK,CAAC;EAC9B,MAAMC,sBAAsB,GAAG,MAAM;IACnCF,WAAW,CAACG,KAAK,GAAG,IAAI;EAC5B,CAAG;EACD,MAAMC,uBAAuB,GAAIC,KAAK,IAAK;IACzC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACJ,KAAK;IAC/B,MAAMK,aAAa,GAAGF,IAAI,CAACA,IAAI,CAACG,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE;IACjDT,WAAW,CAACG,KAAK,GAAG,CAACO,aAAQ,CAACF,aAAa,CAAC;EAChD,CAAG;EACD,MAAMG,oBAAoB,GAAIN,KAAK,IAAK;IACtC,IAAIL,WAAW,CAACG,KAAK,EAAE;MACrBH,WAAW,CAACG,KAAK,GAAG,KAAK;MACzB,IAAIS,iBAAU,CAACb,WAAW,CAAC,EAAE;QAC3BA,WAAW,CAACM,KAAK,CAAC;MAC1B;IACA;EACA,CAAG;EACD,OAAO;IACLH,sBAAsB;IACtBE,uBAAuB;IACvBO;EACJ,CAAG;AACH","names":["useInput","handleInput","isComposing","ref","handleCompositionStart","value","handleCompositionUpdate","event","text","target","lastCharacter","length","isKorean","handleCompositionEnd","isFunction"],"sources":["../../../../../../packages/components/select-v2/src/useInput.ts"],"sourcesContent":["// @ts-nocheck\nimport { ref } from 'vue'\nimport { isFunction } from '@vue/shared'\nimport { isKorean } from '@element-plus/utils'\n\nexport function useInput(handleInput: (event: InputEvent) => void) {\n  const isComposing = ref(false)\n\n  const handleCompositionStart = () => {\n    isComposing.value = true\n  }\n\n  const handleCompositionUpdate = (event) => {\n    const text = event.target.value\n    const lastCharacter = text[text.length - 1] || ''\n    isComposing.value = !isKorean(lastCharacter)\n  }\n\n  const handleCompositionEnd = (event) => {\n    if (isComposing.value) {\n      isComposing.value = false\n      if (isFunction(handleInput)) {\n        handleInput(event)\n      }\n    }\n  }\n\n  return {\n    handleCompositionStart,\n    handleCompositionUpdate,\n    handleCompositionEnd,\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}