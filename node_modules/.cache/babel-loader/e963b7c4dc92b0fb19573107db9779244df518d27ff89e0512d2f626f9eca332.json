{"ast":null,"code":"import { defineComponent, ref, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { com_list, com_cam_list, com_cam_list_url, comcity_cam } from \"@/api/index\";\nexport default {\n  name: \"vidoList\",\n  setup() {\n    let $route = useRouter();\n    let eqery = {\n      guid: $route.currentRoute.value.params.id\n    };\n    let video_s = ref();\n    //播放器渲染对象\n    let playerOptions = ref({\n      playbackRates: [0.5, 1.0, 1.5, 2.0],\n      // 可选的播放速度\n      autoplay: false,\n      // 如果为true,浏览器准备好时开始回放。\n      muted: false,\n      // 默认情况下将会消除任何音频。\n      loop: false,\n      // 是否视频一结束就重新开始。\n      preload: \"auto\",\n      // 建议浏览器在<video>加载元素后是否应该开始下载视频数据。auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\n      language: \"zh-CN\",\n      aspectRatio: \"16:9\",\n      // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\n      fluid: true,\n      // 当true时，Video.js player将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\n      html5: {\n        hls: {\n          withCredentials: false\n        }\n      },\n      flash: {\n        hls: {\n          withCredentials: false\n        }\n      },\n      sources: [{\n        type: \"application/x-mpegURL\",\n        // 类型\n        src: '' // url地址\n      }],\n\n      poster: \"\",\n      // 封面地址\n      notSupportedMessage: \"此视频暂无法播放，请稍后再试\",\n      // 允许覆盖Video.js无法播放媒体源时显示的默认信息。\n      controlBar: {\n        timeDivider: true,\n        // 当前时间和持续时间的分隔符\n        durationDisplay: true,\n        // 显示持续时间\n        remainingTimeDisplay: false,\n        // 是否显示剩余时间功能\n        fullscreenToggle: true // 是否显示全屏按钮\n      }\n    });\n    //这里执行相对应的接口方法获取你的url地址，为播放器对象进行赋值\n    const Video_u = () => {\n      com_cam_list_url(eqery).then(res => {\n        video_s.value = res.data.mydata;\n        playerOptions.value.sources[0].src = res.data.mydata.recurl; //这里对url赋值\n        console.log(\"video\", playerOptions);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n    onMounted(() => {\n      Video_u();\n    });\n    return {\n      video_s,\n      Video_u,\n      playerOptions\n    };\n  }\n};","map":{"version":3,"mappings":"AAqBA,SAASA,eAAe,EAAEC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACrD,SAASC,SAAQ,QAAS,YAAY;AACtC,SACEC,QAAQ,EACRC,YAAY,EACZC,gBAAgB,EAChBC,WAAW,QACN,aAAa;AACpB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAK,GAAG;IACN,IAAIC,MAAK,GAAIP,SAAS,EAAE;IACxB,IAAIQ,KAAI,GAAI;MACVC,IAAI,EAAEF,MAAM,CAACG,YAAY,CAACC,KAAK,CAACC,MAAM,CAACC;IACzC,CAAC;IACD,IAAIC,OAAM,GAAIhB,GAAG,EAAE;IACnB;IACA,IAAIiB,aAAY,GAAIjB,GAAG,CAAC;MACtBkB,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAAE;MACrCC,QAAQ,EAAE,KAAK;MAAE;MACjBC,KAAK,EAAE,KAAK;MAAE;MACdC,IAAI,EAAE,KAAK;MAAE;MACbC,OAAO,EAAE,MAAM;MAAE;MACjBC,QAAQ,EAAE,OAAO;MACjBC,WAAW,EAAE,MAAM;MAAE;MACrBC,KAAK,EAAE,IAAI;MAAE;MACbC,KAAK,EAAE;QAAEC,GAAG,EAAE;UAAEC,eAAe,EAAE;QAAM;MAAE,CAAC;MAC1CC,KAAK,EAAE;QAAEF,GAAG,EAAE;UAAEC,eAAe,EAAE;QAAM;MAAE,CAAC;MAC1CE,OAAO,EAAE,CACP;QACEC,IAAI,EAAE,uBAAuB;QAAE;QAC/BC,GAAG,EAAE,EAAE,CAAE;MACX,CAAC,CACF;;MACDC,MAAM,EAAE,EAAE;MAAE;MACZC,mBAAmB,EAAE,gBAAgB;MAAE;MACvCC,UAAU,EAAE;QACVC,WAAW,EAAE,IAAI;QAAE;QACnBC,eAAe,EAAE,IAAI;QAAE;QACvBC,oBAAoB,EAAE,KAAK;QAAE;QAC7BC,gBAAgB,EAAE,IAAI,CAAE;MAC1B;IACF,CAAC,CAAC;IACF;IACA,MAAMC,OAAM,GAAI,MAAM;MACpBnC,gBAAgB,CAACK,KAAK,EACjB+B,IAAI,CAAEC,GAAG,IAAK;QACb1B,OAAO,CAACH,KAAI,GAAI6B,GAAG,CAACC,IAAI,CAACC,MAAM;QAC/B3B,aAAa,CAACJ,KAAK,CAACiB,OAAO,CAAC,CAAC,CAAC,CAACE,GAAG,GAACU,GAAG,CAACC,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC;QAC1DC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE9B,aAAa,CAAC;MACrC,CAAC,EACA+B,KAAK,CAAEC,GAAG,IAAK;QACdH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MAClB,CAAC,CAAC;IACR,CAAC;IACDhD,SAAS,CAAC,MAAM;MACduC,OAAO,EAAE;IACX,CAAC,CAAC;IACF,OAAO;MACLxB,OAAO;MACPwB,OAAO;MACPvB;IACF,CAAC;EACH;AACF,CAAC","names":["defineComponent","ref","onMounted","useRouter","com_list","com_cam_list","com_cam_list_url","comcity_cam","name","setup","$route","eqery","guid","currentRoute","value","params","id","video_s","playerOptions","playbackRates","autoplay","muted","loop","preload","language","aspectRatio","fluid","html5","hls","withCredentials","flash","sources","type","src","poster","notSupportedMessage","controlBar","timeDivider","durationDisplay","remainingTimeDisplay","fullscreenToggle","Video_u","then","res","data","mydata","recurl","console","log","catch","err"],"sourceRoot":"","sources":["C:\\Users\\14486\\Desktop\\社区公益系统前端\\vue_community\\src\\NavigationBar\\test.vue"],"sourcesContent":["<template>\r\n  <div class=\"box-viods\">\r\n    <van-nav-bar\r\n        title=\"监控播放\"\r\n        left-text=\"\" left-arrow @click-left=\"$router.go(-1)\" fixed\r\n    />\r\n\r\n  </div>\r\n  <div class=\"tzc_demo\">\r\n    <video-player\r\n        class=\"video-player vjs-custom-skin\"\r\n        ref=\"videoPlayer\"\r\n        :playsinline=\"true\"\r\n        :options=\"playerOptions\"\r\n    >\r\n    </video-player>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent, ref, onMounted } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport {\r\n  com_list,\r\n  com_cam_list,\r\n  com_cam_list_url,\r\n  comcity_cam,\r\n} from \"@/api/index\";\r\nexport default {\r\n  name: \"vidoList\",\r\n  setup() {\r\n    let $route = useRouter();\r\n    let eqery = {\r\n      guid: $route.currentRoute.value.params.id,\r\n    };\r\n    let video_s = ref();\r\n    //播放器渲染对象\r\n    let playerOptions = ref({\r\n      playbackRates: [0.5, 1.0, 1.5, 2.0], // 可选的播放速度\r\n      autoplay: false, // 如果为true,浏览器准备好时开始回放。\r\n      muted: false, // 默认情况下将会消除任何音频。\r\n      loop: false, // 是否视频一结束就重新开始。\r\n      preload: \"auto\", // 建议浏览器在<video>加载元素后是否应该开始下载视频数据。auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\r\n      language: \"zh-CN\",\r\n      aspectRatio: \"16:9\", // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\r\n      fluid: true, // 当true时，Video.js player将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\r\n      html5: { hls: { withCredentials: false } },\r\n      flash: { hls: { withCredentials: false } },\r\n      sources: [\r\n        {\r\n          type: \"application/x-mpegURL\", // 类型\r\n          src: '', // url地址\r\n        },\r\n      ],\r\n      poster: \"\", // 封面地址\r\n      notSupportedMessage: \"此视频暂无法播放，请稍后再试\", // 允许覆盖Video.js无法播放媒体源时显示的默认信息。\r\n      controlBar: {\r\n        timeDivider: true, // 当前时间和持续时间的分隔符\r\n        durationDisplay: true, // 显示持续时间\r\n        remainingTimeDisplay: false, // 是否显示剩余时间功能\r\n        fullscreenToggle: true, // 是否显示全屏按钮\r\n      },\r\n    });\r\n    //这里执行相对应的接口方法获取你的url地址，为播放器对象进行赋值\r\n    const Video_u = () => {\r\n      com_cam_list_url(eqery)\r\n          .then((res) => {\r\n            video_s.value = res.data.mydata;\r\n            playerOptions.value.sources[0].src=res.data.mydata.recurl;//这里对url赋值\r\n            console.log(\"video\", playerOptions);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n    };\r\n    onMounted(() => {\r\n      Video_u();\r\n    });\r\n    return {\r\n      video_s,\r\n      Video_u,\r\n      playerOptions,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.box-viods {\r\n  margin-bottom: 3.4rem;\r\n  //   .tzc_demo_bt{\r\n  //       width: 100%;\r\n  //       height: 2rem;\r\n  //       text-align: center;\r\n  //       line-height: 2rem;\r\n  //   }\r\n}\r\n.tzc_box_vlist {\r\n  margin-top: 3rem;\r\n  margin-bottom: 4rem;\r\n}\r\n.viods-list {\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  padding: 0 0.5rem;\r\n  padding-top: 0.5rem;\r\n}\r\n.list-title {\r\n  width: 100%;\r\n  height: 2.3rem;\r\n  background: #007acc;\r\n  color: white;\r\n  line-height: 2.4rem;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  box-sizing: border-box;\r\n  padding: 0 0.8rem;\r\n  border-radius: 6px;\r\n}\r\n.list-video {\r\n  width: 100%;\r\n  height: 10rem;\r\n  overflow: hidden;\r\n  background: rgb(233, 246, 255);\r\n  position: relative;\r\n  .tzc_icon_video {\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    font-size: 4rem;\r\n    color: #007acc;\r\n  }\r\n  // img {\r\n  //   width: 100%;\r\n  //   height: auto;\r\n  // }\r\n}\r\n/deep/ .van-nav-bar .van-icon {\r\n  color: #333333;\r\n}\r\n/deep/ .van-nav-bar__title {\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}