{"ast":null,"code":"function GVerify(options) {\n  // 创建一个图形验证码对象，接收options对象为参数\n\n  this.options = {\n    // 默认options参数值\n\n    id: '',\n    // 容器Id\n\n    canvasId: 'verifyCanvas',\n    // canvas的ID\n\n    width: '80',\n    // 默认canvas宽度\n\n    height: '30',\n    // 默认canvas高度\n\n    type: 'number',\n    // 图形验证码默认类型blend:数字字母混合类型、number:纯数字、letter:纯字母\n\n    code: ''\n  };\n  if (Object.prototype.toString.call(options) === '[object Object]') {\n    // 判断传入参数类型\n\n    for (var i in options) {\n      // 根据传入的参数，修改默认参数值\n\n      this.options[i] = options[i];\n    }\n  } else {\n    this.options.id = options;\n  }\n  this.options.numArr = '0,1,2,3,4,5,6,7,8,9'.split(',');\n  this.options.letterArr = getAllLetter();\n  this._init();\n  this.refresh();\n}\nGVerify.prototype = {\n  /** 版本号**/\n\n  version: '1.0.0',\n  /** 初始化方法**/\n\n  _init: function () {\n    var con = document.getElementById(this.options.id);\n    var canvas = document.createElement('canvas');\n\n    // this.options.width = con.offsetWidth > 0 ? con.offsetWidth : '30'\n\n    // this.options.height = con.offsetHeight > 0 ? con.offsetHeight : '30'\n\n    this.options.width = '160';\n    this.options.height = '50';\n    canvas.id = this.options.canvasId;\n    canvas.width = this.options.width;\n    canvas.height = this.options.height;\n    canvas.style.cursor = 'pointer';\n    canvas.innerHTML = '您的浏览器版本不支持canvas';\n    con.appendChild(canvas);\n    var parent = this;\n    canvas.onclick = function () {\n      parent.refresh();\n    };\n  },\n  /** 生成验证码**/\n\n  refresh: function () {\n    var canvas = document.getElementById(this.options.canvasId);\n    if (canvas.getContext) {\n      var ctx = canvas.getContext('2d');\n    }\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = randomColor(180, 240);\n    ctx.fillRect(0, 0, this.options.width, this.options.height);\n    if (this.options.type === 'blend') {\n      // 判断验证码类型\n\n      var txtArr = this.options.numArr.concat(this.options.letterArr);\n    } else if (this.options.type === 'number') {\n      var txtArr = this.options.numArr;\n    } else {\n      var txtArr = this.options.letterArr;\n    }\n    for (var i = 1; i <= 4; i++) {\n      var txt = txtArr[randomNum(0, txtArr.length)];\n      this.options.code += txt;\n      ctx.font = randomNum(this.options.height / 2, this.options.height) + 'px SimHei'; // 随机生成字体大小\n\n      ctx.fillStyle = randomColor(50, 160); // 随机生成字体颜色\n\n      ctx.shadowOffsetX = randomNum(-3, 3);\n      ctx.shadowOffsetY = randomNum(-3, 3);\n      ctx.shadowBlur = randomNum(-3, 3);\n      ctx.shadowColor = 'rgba(0, 0, 0, 0.3)';\n      var x = this.options.width / 5 * i;\n      var y = this.options.height / 2;\n      var deg = randomNum(-30, 30);\n\n      /** 设置旋转角度和坐标原点**/\n\n      ctx.translate(x, y);\n      ctx.rotate(deg * Math.PI / 180);\n      ctx.fillText(txt, 0, 0);\n\n      /** 恢复旋转角度和坐标原点**/\n\n      ctx.rotate(-deg * Math.PI / 180);\n      ctx.translate(-x, -y);\n    }\n\n    /** 绘制干扰线**/\n\n    for (var i = 0; i < 4; i++) {\n      ctx.strokeStyle = randomColor(40, 180);\n      ctx.beginPath();\n      ctx.moveTo(randomNum(0, this.options.width), randomNum(0, this.options.height));\n      ctx.lineTo(randomNum(0, this.options.width), randomNum(0, this.options.height));\n      ctx.stroke();\n    }\n\n    /** 绘制干扰点**/\n\n    for (var i = 0; i < this.options.width / 4; i++) {\n      ctx.fillStyle = randomColor(0, 255);\n      ctx.beginPath();\n      ctx.arc(randomNum(0, this.options.width), randomNum(0, this.options.height), 1, 0, 2 * Math.PI);\n      ctx.fill();\n    }\n  },\n  /** 验证验证码**/\n\n  validate: function (code) {\n    var code = code.toLowerCase();\n    var v_code = this.options.code.toLowerCase();\n    if (code == v_code) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\n\n/** 生成字母数组**/\n\nfunction getAllLetter() {\n  var letterStr = 'a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z';\n  return letterStr.split(',');\n}\n\n/** 生成一个随机数**/\n\nfunction randomNum(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\n/** 生成一个随机色**/\n\nfunction randomColor(min, max) {\n  var r = randomNum(min, max);\n  var g = randomNum(min, max);\n  var b = randomNum(min, max);\n  return 'rgb(' + r + ',' + g + ',' + b + ')';\n}\nexport { GVerify };","map":{"version":3,"names":["GVerify","options","id","canvasId","width","height","type","code","Object","prototype","toString","call","i","numArr","split","letterArr","getAllLetter","_init","refresh","version","con","document","getElementById","canvas","createElement","style","cursor","innerHTML","appendChild","parent","onclick","getContext","ctx","textBaseline","fillStyle","randomColor","fillRect","txtArr","concat","txt","randomNum","length","font","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","x","y","deg","translate","rotate","Math","PI","fillText","strokeStyle","beginPath","moveTo","lineTo","stroke","arc","fill","validate","toLowerCase","v_code","letterStr","min","max","floor","random","r","g","b"],"sources":["C:/Users/14486/Desktop/社区公益系统前端/vue_community/src/static/js/verifyCode.js"],"sourcesContent":["function GVerify (options) { // 创建一个图形验证码对象，接收options对象为参数\r\n\r\n    this.options = { // 默认options参数值\r\n\r\n        id: '', // 容器Id\r\n\r\n        canvasId: 'verifyCanvas', // canvas的ID\r\n\r\n        width: '80', // 默认canvas宽度\r\n\r\n        height: '30', // 默认canvas高度\r\n\r\n        type: 'number', // 图形验证码默认类型blend:数字字母混合类型、number:纯数字、letter:纯字母\r\n\r\n        code: ''\r\n\r\n    }\r\n\r\n\r\n\r\n    if (Object.prototype.toString.call(options) === '[object Object]') { // 判断传入参数类型\r\n\r\n        for (var i in options) { // 根据传入的参数，修改默认参数值\r\n\r\n            this.options[i] = options[i]\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        this.options.id = options\r\n\r\n    }\r\n\r\n\r\n\r\n    this.options.numArr = '0,1,2,3,4,5,6,7,8,9'.split(',')\r\n\r\n    this.options.letterArr = getAllLetter()\r\n\r\n\r\n\r\n    this._init()\r\n\r\n    this.refresh()\r\n\r\n}\r\n\r\n\r\n\r\nGVerify.prototype = {\r\n\r\n    /** 版本号**/\r\n\r\n    version: '1.0.0',\r\n\r\n\r\n\r\n    /** 初始化方法**/\r\n\r\n    _init: function () {\r\n\r\n        var con = document.getElementById(this.options.id)\r\n\r\n        var canvas = document.createElement('canvas')\r\n\r\n        // this.options.width = con.offsetWidth > 0 ? con.offsetWidth : '30'\r\n\r\n        // this.options.height = con.offsetHeight > 0 ? con.offsetHeight : '30'\r\n\r\n        this.options.width = '160'\r\n\r\n        this.options.height = '50'\r\n\r\n        canvas.id = this.options.canvasId\r\n\r\n        canvas.width = this.options.width\r\n\r\n        canvas.height = this.options.height\r\n\r\n        canvas.style.cursor = 'pointer'\r\n\r\n        canvas.innerHTML = '您的浏览器版本不支持canvas'\r\n\r\n        con.appendChild(canvas)\r\n\r\n        var parent = this\r\n\r\n        canvas.onclick = function () {\r\n\r\n            parent.refresh()\r\n\r\n        }\r\n\r\n    },\r\n\r\n\r\n\r\n    /** 生成验证码**/\r\n\r\n    refresh: function () {\r\n\r\n        var canvas = document.getElementById(this.options.canvasId)\r\n\r\n        if (canvas.getContext) {\r\n\r\n            var ctx = canvas.getContext('2d')\r\n\r\n        }\r\n\r\n        ctx.textBaseline = 'middle'\r\n\r\n\r\n\r\n        ctx.fillStyle = randomColor(180, 240)\r\n\r\n        ctx.fillRect(0, 0, this.options.width, this.options.height)\r\n\r\n\r\n\r\n        if (this.options.type === 'blend') { // 判断验证码类型\r\n\r\n            var txtArr = this.options.numArr.concat(this.options.letterArr)\r\n\r\n        } else if (this.options.type === 'number') {\r\n\r\n            var txtArr = this.options.numArr\r\n\r\n        } else {\r\n\r\n            var txtArr = this.options.letterArr\r\n\r\n        }\r\n\r\n\r\n\r\n        for (var i = 1; i <= 4; i++) {\r\n\r\n            var txt = txtArr[randomNum(0, txtArr.length)]\r\n\r\n            this.options.code += txt\r\n\r\n            ctx.font = randomNum(this.options.height / 2, this.options.height) + 'px SimHei' // 随机生成字体大小\r\n\r\n            ctx.fillStyle = randomColor(50, 160) // 随机生成字体颜色\r\n\r\n            ctx.shadowOffsetX = randomNum(-3, 3)\r\n\r\n            ctx.shadowOffsetY = randomNum(-3, 3)\r\n\r\n            ctx.shadowBlur = randomNum(-3, 3)\r\n\r\n            ctx.shadowColor = 'rgba(0, 0, 0, 0.3)'\r\n\r\n            var x = this.options.width / 5 * i\r\n\r\n            var y = this.options.height / 2\r\n\r\n            var deg = randomNum(-30, 30)\r\n\r\n            /** 设置旋转角度和坐标原点**/\r\n\r\n            ctx.translate(x, y)\r\n\r\n            ctx.rotate(deg * Math.PI / 180)\r\n\r\n            ctx.fillText(txt, 0, 0)\r\n\r\n            /** 恢复旋转角度和坐标原点**/\r\n\r\n            ctx.rotate(-deg * Math.PI / 180)\r\n\r\n            ctx.translate(-x, -y)\r\n\r\n        }\r\n\r\n        /** 绘制干扰线**/\r\n\r\n        for (var i = 0; i < 4; i++) {\r\n\r\n            ctx.strokeStyle = randomColor(40, 180)\r\n\r\n            ctx.beginPath()\r\n\r\n            ctx.moveTo(randomNum(0, this.options.width), randomNum(0, this.options.height))\r\n\r\n            ctx.lineTo(randomNum(0, this.options.width), randomNum(0, this.options.height))\r\n\r\n            ctx.stroke()\r\n\r\n        }\r\n\r\n        /** 绘制干扰点**/\r\n\r\n        for (var i = 0; i < this.options.width / 4; i++) {\r\n\r\n            ctx.fillStyle = randomColor(0, 255)\r\n\r\n            ctx.beginPath()\r\n\r\n            ctx.arc(randomNum(0, this.options.width), randomNum(0, this.options.height), 1, 0, 2 * Math.PI)\r\n\r\n            ctx.fill()\r\n\r\n        }\r\n\r\n    },\r\n\r\n\r\n\r\n    /** 验证验证码**/\r\n\r\n    validate: function (code) {\r\n\r\n        var code = code.toLowerCase()\r\n\r\n        var v_code = this.options.code.toLowerCase()\r\n\r\n        if (code == v_code) {\r\n\r\n            return true\r\n\r\n        } else {\r\n\r\n            return false\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n/** 生成字母数组**/\r\n\r\nfunction getAllLetter () {\r\n\r\n    var letterStr = 'a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z'\r\n\r\n    return letterStr.split(',')\r\n\r\n}\r\n\r\n/** 生成一个随机数**/\r\n\r\nfunction randomNum (min, max) {\r\n\r\n    return Math.floor(Math.random() * (max - min) + min)\r\n\r\n}\r\n\r\n/** 生成一个随机色**/\r\n\r\nfunction randomColor (min, max) {\r\n\r\n    var r = randomNum(min, max)\r\n\r\n    var g = randomNum(min, max)\r\n\r\n    var b = randomNum(min, max)\r\n\r\n    return 'rgb(' + r + ',' + g + ',' + b + ')'\r\n\r\n}\r\n\r\nexport {\r\n\r\n    GVerify\r\n\r\n}"],"mappings":"AAAA,SAASA,OAAO,CAAEC,OAAO,EAAE;EAAE;;EAEzB,IAAI,CAACA,OAAO,GAAG;IAAE;;IAEbC,EAAE,EAAE,EAAE;IAAE;;IAERC,QAAQ,EAAE,cAAc;IAAE;;IAE1BC,KAAK,EAAE,IAAI;IAAE;;IAEbC,MAAM,EAAE,IAAI;IAAE;;IAEdC,IAAI,EAAE,QAAQ;IAAE;;IAEhBC,IAAI,EAAE;EAEV,CAAC;EAID,IAAIC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACV,OAAO,CAAC,KAAK,iBAAiB,EAAE;IAAE;;IAEjE,KAAK,IAAIW,CAAC,IAAIX,OAAO,EAAE;MAAE;;MAErB,IAAI,CAACA,OAAO,CAACW,CAAC,CAAC,GAAGX,OAAO,CAACW,CAAC,CAAC;IAEhC;EAEJ,CAAC,MAAM;IAEH,IAAI,CAACX,OAAO,CAACC,EAAE,GAAGD,OAAO;EAE7B;EAIA,IAAI,CAACA,OAAO,CAACY,MAAM,GAAG,qBAAqB,CAACC,KAAK,CAAC,GAAG,CAAC;EAEtD,IAAI,CAACb,OAAO,CAACc,SAAS,GAAGC,YAAY,EAAE;EAIvC,IAAI,CAACC,KAAK,EAAE;EAEZ,IAAI,CAACC,OAAO,EAAE;AAElB;AAIAlB,OAAO,CAACS,SAAS,GAAG;EAEhB;;EAEAU,OAAO,EAAE,OAAO;EAIhB;;EAEAF,KAAK,EAAE,YAAY;IAEf,IAAIG,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,IAAI,CAACrB,OAAO,CAACC,EAAE,CAAC;IAElD,IAAIqB,MAAM,GAAGF,QAAQ,CAACG,aAAa,CAAC,QAAQ,CAAC;;IAE7C;;IAEA;;IAEA,IAAI,CAACvB,OAAO,CAACG,KAAK,GAAG,KAAK;IAE1B,IAAI,CAACH,OAAO,CAACI,MAAM,GAAG,IAAI;IAE1BkB,MAAM,CAACrB,EAAE,GAAG,IAAI,CAACD,OAAO,CAACE,QAAQ;IAEjCoB,MAAM,CAACnB,KAAK,GAAG,IAAI,CAACH,OAAO,CAACG,KAAK;IAEjCmB,MAAM,CAAClB,MAAM,GAAG,IAAI,CAACJ,OAAO,CAACI,MAAM;IAEnCkB,MAAM,CAACE,KAAK,CAACC,MAAM,GAAG,SAAS;IAE/BH,MAAM,CAACI,SAAS,GAAG,kBAAkB;IAErCP,GAAG,CAACQ,WAAW,CAACL,MAAM,CAAC;IAEvB,IAAIM,MAAM,GAAG,IAAI;IAEjBN,MAAM,CAACO,OAAO,GAAG,YAAY;MAEzBD,MAAM,CAACX,OAAO,EAAE;IAEpB,CAAC;EAEL,CAAC;EAID;;EAEAA,OAAO,EAAE,YAAY;IAEjB,IAAIK,MAAM,GAAGF,QAAQ,CAACC,cAAc,CAAC,IAAI,CAACrB,OAAO,CAACE,QAAQ,CAAC;IAE3D,IAAIoB,MAAM,CAACQ,UAAU,EAAE;MAEnB,IAAIC,GAAG,GAAGT,MAAM,CAACQ,UAAU,CAAC,IAAI,CAAC;IAErC;IAEAC,GAAG,CAACC,YAAY,GAAG,QAAQ;IAI3BD,GAAG,CAACE,SAAS,GAAGC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC;IAErCH,GAAG,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACnC,OAAO,CAACG,KAAK,EAAE,IAAI,CAACH,OAAO,CAACI,MAAM,CAAC;IAI3D,IAAI,IAAI,CAACJ,OAAO,CAACK,IAAI,KAAK,OAAO,EAAE;MAAE;;MAEjC,IAAI+B,MAAM,GAAG,IAAI,CAACpC,OAAO,CAACY,MAAM,CAACyB,MAAM,CAAC,IAAI,CAACrC,OAAO,CAACc,SAAS,CAAC;IAEnE,CAAC,MAAM,IAAI,IAAI,CAACd,OAAO,CAACK,IAAI,KAAK,QAAQ,EAAE;MAEvC,IAAI+B,MAAM,GAAG,IAAI,CAACpC,OAAO,CAACY,MAAM;IAEpC,CAAC,MAAM;MAEH,IAAIwB,MAAM,GAAG,IAAI,CAACpC,OAAO,CAACc,SAAS;IAEvC;IAIA,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAEzB,IAAI2B,GAAG,GAAGF,MAAM,CAACG,SAAS,CAAC,CAAC,EAAEH,MAAM,CAACI,MAAM,CAAC,CAAC;MAE7C,IAAI,CAACxC,OAAO,CAACM,IAAI,IAAIgC,GAAG;MAExBP,GAAG,CAACU,IAAI,GAAGF,SAAS,CAAC,IAAI,CAACvC,OAAO,CAACI,MAAM,GAAG,CAAC,EAAE,IAAI,CAACJ,OAAO,CAACI,MAAM,CAAC,GAAG,WAAW,EAAC;;MAEjF2B,GAAG,CAACE,SAAS,GAAGC,WAAW,CAAC,EAAE,EAAE,GAAG,CAAC,EAAC;;MAErCH,GAAG,CAACW,aAAa,GAAGH,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MAEpCR,GAAG,CAACY,aAAa,GAAGJ,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MAEpCR,GAAG,CAACa,UAAU,GAAGL,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MAEjCR,GAAG,CAACc,WAAW,GAAG,oBAAoB;MAEtC,IAAIC,CAAC,GAAG,IAAI,CAAC9C,OAAO,CAACG,KAAK,GAAG,CAAC,GAAGQ,CAAC;MAElC,IAAIoC,CAAC,GAAG,IAAI,CAAC/C,OAAO,CAACI,MAAM,GAAG,CAAC;MAE/B,IAAI4C,GAAG,GAAGT,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC;;MAE5B;;MAEAR,GAAG,CAACkB,SAAS,CAACH,CAAC,EAAEC,CAAC,CAAC;MAEnBhB,GAAG,CAACmB,MAAM,CAACF,GAAG,GAAGG,IAAI,CAACC,EAAE,GAAG,GAAG,CAAC;MAE/BrB,GAAG,CAACsB,QAAQ,CAACf,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;;MAEvB;;MAEAP,GAAG,CAACmB,MAAM,CAAC,CAACF,GAAG,GAAGG,IAAI,CAACC,EAAE,GAAG,GAAG,CAAC;MAEhCrB,GAAG,CAACkB,SAAS,CAAC,CAACH,CAAC,EAAE,CAACC,CAAC,CAAC;IAEzB;;IAEA;;IAEA,KAAK,IAAIpC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAExBoB,GAAG,CAACuB,WAAW,GAAGpB,WAAW,CAAC,EAAE,EAAE,GAAG,CAAC;MAEtCH,GAAG,CAACwB,SAAS,EAAE;MAEfxB,GAAG,CAACyB,MAAM,CAACjB,SAAS,CAAC,CAAC,EAAE,IAAI,CAACvC,OAAO,CAACG,KAAK,CAAC,EAAEoC,SAAS,CAAC,CAAC,EAAE,IAAI,CAACvC,OAAO,CAACI,MAAM,CAAC,CAAC;MAE/E2B,GAAG,CAAC0B,MAAM,CAAClB,SAAS,CAAC,CAAC,EAAE,IAAI,CAACvC,OAAO,CAACG,KAAK,CAAC,EAAEoC,SAAS,CAAC,CAAC,EAAE,IAAI,CAACvC,OAAO,CAACI,MAAM,CAAC,CAAC;MAE/E2B,GAAG,CAAC2B,MAAM,EAAE;IAEhB;;IAEA;;IAEA,KAAK,IAAI/C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACX,OAAO,CAACG,KAAK,GAAG,CAAC,EAAEQ,CAAC,EAAE,EAAE;MAE7CoB,GAAG,CAACE,SAAS,GAAGC,WAAW,CAAC,CAAC,EAAE,GAAG,CAAC;MAEnCH,GAAG,CAACwB,SAAS,EAAE;MAEfxB,GAAG,CAAC4B,GAAG,CAACpB,SAAS,CAAC,CAAC,EAAE,IAAI,CAACvC,OAAO,CAACG,KAAK,CAAC,EAAEoC,SAAS,CAAC,CAAC,EAAE,IAAI,CAACvC,OAAO,CAACI,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG+C,IAAI,CAACC,EAAE,CAAC;MAE/FrB,GAAG,CAAC6B,IAAI,EAAE;IAEd;EAEJ,CAAC;EAID;;EAEAC,QAAQ,EAAE,UAAUvD,IAAI,EAAE;IAEtB,IAAIA,IAAI,GAAGA,IAAI,CAACwD,WAAW,EAAE;IAE7B,IAAIC,MAAM,GAAG,IAAI,CAAC/D,OAAO,CAACM,IAAI,CAACwD,WAAW,EAAE;IAE5C,IAAIxD,IAAI,IAAIyD,MAAM,EAAE;MAEhB,OAAO,IAAI;IAEf,CAAC,MAAM;MAEH,OAAO,KAAK;IAEhB;EAEJ;AAEJ,CAAC;;AAED;;AAEA,SAAShD,YAAY,GAAI;EAErB,IAAIiD,SAAS,GAAG,yGAAyG;EAEzH,OAAOA,SAAS,CAACnD,KAAK,CAAC,GAAG,CAAC;AAE/B;;AAEA;;AAEA,SAAS0B,SAAS,CAAE0B,GAAG,EAAEC,GAAG,EAAE;EAE1B,OAAOf,IAAI,CAACgB,KAAK,CAAChB,IAAI,CAACiB,MAAM,EAAE,IAAIF,GAAG,GAAGD,GAAG,CAAC,GAAGA,GAAG,CAAC;AAExD;;AAEA;;AAEA,SAAS/B,WAAW,CAAE+B,GAAG,EAAEC,GAAG,EAAE;EAE5B,IAAIG,CAAC,GAAG9B,SAAS,CAAC0B,GAAG,EAAEC,GAAG,CAAC;EAE3B,IAAII,CAAC,GAAG/B,SAAS,CAAC0B,GAAG,EAAEC,GAAG,CAAC;EAE3B,IAAIK,CAAC,GAAGhC,SAAS,CAAC0B,GAAG,EAAEC,GAAG,CAAC;EAE3B,OAAO,MAAM,GAAGG,CAAC,GAAG,GAAG,GAAGC,CAAC,GAAG,GAAG,GAAGC,CAAC,GAAG,GAAG;AAE/C;AAEA,SAEIxE,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}