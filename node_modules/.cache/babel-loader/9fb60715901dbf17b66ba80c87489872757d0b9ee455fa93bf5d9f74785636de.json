{"ast":null,"code":"import SIdentify from '../../components/identify';\nexport default {\n  components: {\n    SIdentify\n  },\n  data() {\n    // 验证码自定义验证规则\n    const validateVerifycode = (rule, value, callback) => {\n      const newVal = value.toLowerCase();\n      const identifyStr = this.identifyCode.toLowerCase();\n      if (newVal === '') {\n        callback(new Error('请输入验证码'));\n      } else if (newVal !== identifyStr) {\n        console.log('validateVerifycode:', value);\n        callback(new Error('验证码不正确!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      identifyCodes: '3456789ABCDEFGHGKMNPQRSTUVWXY',\n      identifyCode: '',\n      ruleForm: {\n        userName: '',\n        password: '',\n        verifycode: ''\n      },\n      rules: {\n        verifycode: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateVerifycode\n        }]\n      }\n    };\n  }\n};","map":{"version":3,"mappings":"AAiBA,OAAOA,SAAQ,MAAO,2BAA0B;AAChD,eAAe;EACbC,UAAU,EAAE;IAACD;EAAS,CAAC;EACvBE,IAAI,GAAG;IACL;IACA,MAAMC,kBAAiB,GAAI,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MACpD,MAAMC,MAAK,GAAIF,KAAK,CAACG,WAAW,EAAC;MACjC,MAAMC,WAAU,GAAI,IAAI,CAACC,YAAY,CAACF,WAAW,EAAC;MAClD,IAAID,MAAK,KAAM,EAAE,EAAE;QACjBD,QAAQ,CAAC,IAAIK,KAAK,CAAC,QAAQ,CAAC;MAC9B,OAAO,IAAIJ,MAAK,KAAME,WAAW,EAAE;QACjCG,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAER,KAAK;QACxCC,QAAQ,CAAC,IAAIK,KAAK,CAAC,SAAS,CAAC;MAC/B,OAAO;QACLL,QAAQ,EAAC;MACX;IACF;IACA,OAAO;MACLQ,aAAa,EAAE,+BAA+B;MAC9CJ,YAAY,EAAE,EAAE;MAChBK,QAAQ,EAAE;QACRC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,UAAU,EAAE;MACd,CAAC;MACDC,KAAK,EAAE;QACLD,UAAU,EAAE,CACV;UAACE,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,MAAM;UAAEC,SAAS,EAAEnB;QAAkB;MAEnE;IACF;EACF;AACF","names":["SIdentify","components","data","validateVerifycode","rule","value","callback","newVal","toLowerCase","identifyStr","identifyCode","Error","console","log","identifyCodes","ruleForm","userName","password","verifycode","rules","required","trigger","validator"],"sourceRoot":"","sources":["C:\\Users\\14486\\Desktop\\社区公益系统前端\\vue_community\\src\\NavigationBar\\PointsGoods.vue"],"sourcesContent":["<template>\r\n  <el-form-item prop=\"verifycode\">\r\n    <div style=\"display:flex\">\r\n      <el-input\r\n          v-model=\"ruleForm.verifycode\"\r\n          placeholder=\"请输入验证码\"\r\n          @keyup.enter.native=\"login('ruleForm')\"\r\n      ></el-input>\r\n      <span @click=\"refreshCode\"\r\n      ><s-identify :identifyCode=\"identifyCode\"></s-identify\r\n      ></span>\r\n    </div>\r\n  </el-form-item>\r\n</template>\r\n\r\n\r\n<script>\r\nimport SIdentify from '../../components/identify'\r\nexport default {\r\n  components: {SIdentify},\r\n  data() {\r\n    // 验证码自定义验证规则\r\n    const validateVerifycode = (rule, value, callback) => {\r\n      const newVal = value.toLowerCase()\r\n      const identifyStr = this.identifyCode.toLowerCase()\r\n      if (newVal === '') {\r\n        callback(new Error('请输入验证码'))\r\n      } else if (newVal !== identifyStr) {\r\n        console.log('validateVerifycode:', value)\r\n        callback(new Error('验证码不正确!'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      identifyCodes: '3456789ABCDEFGHGKMNPQRSTUVWXY',\r\n      identifyCode: '',\r\n      ruleForm: {\r\n        userName: '',\r\n        password: '',\r\n        verifycode: ''\r\n      },\r\n      rules: {\r\n        verifycode: [\r\n          {required: true, trigger: 'blur', validator: validateVerifycode}\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}