{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar index$1 = require('../../icon/index.js');\nrequire('../../../tokens/index.js');\nrequire('../../../hooks/index.js');\nvar breadcrumbItem = require('./breadcrumb-item.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar breadcrumb = require('../../../tokens/breadcrumb.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nconst __default__ = vue.defineComponent({\n  name: \"ElBreadcrumbItem\"\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: breadcrumbItem.breadcrumbItemProps,\n  setup(__props) {\n    const props = __props;\n    const instance = vue.getCurrentInstance();\n    const breadcrumbContext = vue.inject(breadcrumb.breadcrumbKey, void 0);\n    const ns = index.useNamespace(\"breadcrumb\");\n    const {\n      separator,\n      separatorIcon\n    } = vue.toRefs(breadcrumbContext);\n    const router = instance.appContext.config.globalProperties.$router;\n    const link = vue.ref();\n    const onClick = () => {\n      if (!props.to || !router) return;\n      props.replace ? router.replace(props.to) : router.push(props.to);\n    };\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(\"span\", {\n        class: vue.normalizeClass(vue.unref(ns).e(\"item\"))\n      }, [vue.createElementVNode(\"span\", {\n        ref_key: \"link\",\n        ref: link,\n        class: vue.normalizeClass([vue.unref(ns).e(\"inner\"), vue.unref(ns).is(\"link\", !!_ctx.to)]),\n        role: \"link\",\n        onClick\n      }, [vue.renderSlot(_ctx.$slots, \"default\")], 2), vue.unref(separatorIcon) ? (vue.openBlock(), vue.createBlock(vue.unref(index$1.ElIcon), {\n        key: 0,\n        class: vue.normalizeClass(vue.unref(ns).e(\"separator\"))\n      }, {\n        default: vue.withCtx(() => [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(vue.unref(separatorIcon))))]),\n        _: 1\n      }, 8, [\"class\"])) : (vue.openBlock(), vue.createElementBlock(\"span\", {\n        key: 1,\n        class: vue.normalizeClass(vue.unref(ns).e(\"separator\")),\n        role: \"presentation\"\n      }, vue.toDisplayString(vue.unref(separator)), 3))], 2);\n    };\n  }\n});\nvar BreadcrumbItem = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/breadcrumb/src/breadcrumb-item.vue\"]]);\nexports[\"default\"] = BreadcrumbItem;","map":{"version":3,"mappings":";;;;;;;;;;;;;;uCA4Bc;EACZA,IAAM;AACR;;;;;;IAIA,MAAMC,WAAWC,sBAAmB;IAC9B,0BAAoBC,UAAO,2BAAe,KAAS;IACnD,WAAKC,mBAAa,YAAY;IAEpC,MAAM;MAAEC;MAAWC;IAAkB,eAAOC,iBAAiB;IAC7D,MAAMC,MAAS,YAASC,UAAW,QAAOC,gBAAiB;IAE3D,MAAMC,OAAOC,OAAqB;IAElC,MAAMC,UAAU,MAAM;MAChB,KAACC,KAAM,OAAM,CAACN,QAAQ;MACpBM,gBAAUN,OAAOO,OAAQ,OAAMC,EAAE,CAAI,UAAOC,IAAK,OAAMD,EAAE;IAAA,CACjE","names":["name","instance","getCurrentInstance","inject","useNamespace","separator","separatorIcon","breadcrumbContext","router","appContext","globalProperties","link","ref","onClick","props","replace","to","push"],"sources":["../../../../../../packages/components/breadcrumb/src/breadcrumb-item.vue"],"sourcesContent":["<template>\n  <span :class=\"ns.e('item')\">\n    <span\n      ref=\"link\"\n      :class=\"[ns.e('inner'), ns.is('link', !!to)]\"\n      role=\"link\"\n      @click=\"onClick\"\n    >\n      <slot />\n    </span>\n    <el-icon v-if=\"separatorIcon\" :class=\"ns.e('separator')\">\n      <component :is=\"separatorIcon\" />\n    </el-icon>\n    <span v-else :class=\"ns.e('separator')\" role=\"presentation\">\n      {{ separator }}\n    </span>\n  </span>\n</template>\n\n<script lang=\"ts\" setup>\nimport { getCurrentInstance, inject, ref, toRefs } from 'vue'\nimport ElIcon from '@element-plus/components/icon'\nimport { breadcrumbKey } from '@element-plus/tokens'\nimport { useNamespace } from '@element-plus/hooks'\nimport { breadcrumbItemProps } from './breadcrumb-item'\n\nimport type { Router } from 'vue-router'\n\ndefineOptions({\n  name: 'ElBreadcrumbItem',\n})\n\nconst props = defineProps(breadcrumbItemProps)\n\nconst instance = getCurrentInstance()!\nconst breadcrumbContext = inject(breadcrumbKey, undefined)!\nconst ns = useNamespace('breadcrumb')\n\nconst { separator, separatorIcon } = toRefs(breadcrumbContext)\nconst router = instance.appContext.config.globalProperties.$router as Router\n\nconst link = ref<HTMLSpanElement>()\n\nconst onClick = () => {\n  if (!props.to || !router) return\n  props.replace ? router.replace(props.to) : router.push(props.to)\n}\n</script>\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}