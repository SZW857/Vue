{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// The `fvar` table stores font variation axes and instances.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6fvar.html\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\nfunction addName(name, names) {\n  const nameString = JSON.stringify(name);\n  let nameID = 256;\n  for (let nameKey in names) {\n    let n = parseInt(nameKey);\n    if (!n || n < 256) {\n      continue;\n    }\n    if (JSON.stringify(names[nameKey]) === nameString) {\n      return n;\n    }\n    if (nameID <= n) {\n      nameID = n + 1;\n    }\n  }\n  names[nameID] = name;\n  return nameID;\n}\nfunction makeFvarAxis(n, axis, names) {\n  const nameID = addName(axis.name, names);\n  return [{\n    name: 'tag_' + n,\n    type: 'TAG',\n    value: axis.tag\n  }, {\n    name: 'minValue_' + n,\n    type: 'FIXED',\n    value: axis.minValue << 16\n  }, {\n    name: 'defaultValue_' + n,\n    type: 'FIXED',\n    value: axis.defaultValue << 16\n  }, {\n    name: 'maxValue_' + n,\n    type: 'FIXED',\n    value: axis.maxValue << 16\n  }, {\n    name: 'flags_' + n,\n    type: 'USHORT',\n    value: 0\n  }, {\n    name: 'nameID_' + n,\n    type: 'USHORT',\n    value: nameID\n  }];\n}\nfunction parseFvarAxis(data, start, names) {\n  const axis = {};\n  const p = new parse.Parser(data, start);\n  axis.tag = p.parseTag();\n  axis.minValue = p.parseFixed();\n  axis.defaultValue = p.parseFixed();\n  axis.maxValue = p.parseFixed();\n  p.skip('uShort', 1); // reserved for flags; no values defined\n  axis.name = names[p.parseUShort()] || {};\n  return axis;\n}\nfunction makeFvarInstance(n, inst, axes, names) {\n  const nameID = addName(inst.name, names);\n  const fields = [{\n    name: 'nameID_' + n,\n    type: 'USHORT',\n    value: nameID\n  }, {\n    name: 'flags_' + n,\n    type: 'USHORT',\n    value: 0\n  }];\n  for (let i = 0; i < axes.length; ++i) {\n    const axisTag = axes[i].tag;\n    fields.push({\n      name: 'axis_' + n + ' ' + axisTag,\n      type: 'FIXED',\n      value: inst.coordinates[axisTag] << 16\n    });\n  }\n  return fields;\n}\nfunction parseFvarInstance(data, start, axes, names) {\n  const inst = {};\n  const p = new parse.Parser(data, start);\n  inst.name = names[p.parseUShort()] || {};\n  p.skip('uShort', 1); // reserved for flags; no values defined\n\n  inst.coordinates = {};\n  for (let i = 0; i < axes.length; ++i) {\n    inst.coordinates[axes[i].tag] = p.parseFixed();\n  }\n  return inst;\n}\nfunction makeFvarTable(fvar, names) {\n  const result = new table.Table('fvar', [{\n    name: 'version',\n    type: 'ULONG',\n    value: 0x10000\n  }, {\n    name: 'offsetToData',\n    type: 'USHORT',\n    value: 0\n  }, {\n    name: 'countSizePairs',\n    type: 'USHORT',\n    value: 2\n  }, {\n    name: 'axisCount',\n    type: 'USHORT',\n    value: fvar.axes.length\n  }, {\n    name: 'axisSize',\n    type: 'USHORT',\n    value: 20\n  }, {\n    name: 'instanceCount',\n    type: 'USHORT',\n    value: fvar.instances.length\n  }, {\n    name: 'instanceSize',\n    type: 'USHORT',\n    value: 4 + fvar.axes.length * 4\n  }]);\n  result.offsetToData = result.sizeOf();\n  for (let i = 0; i < fvar.axes.length; i++) {\n    result.fields = result.fields.concat(makeFvarAxis(i, fvar.axes[i], names));\n  }\n  for (let j = 0; j < fvar.instances.length; j++) {\n    result.fields = result.fields.concat(makeFvarInstance(j, fvar.instances[j], fvar.axes, names));\n  }\n  return result;\n}\nfunction parseFvarTable(data, start, names) {\n  const p = new parse.Parser(data, start);\n  const tableVersion = p.parseULong();\n  check.argument(tableVersion === 0x00010000, 'Unsupported fvar table version.');\n  const offsetToData = p.parseOffset16();\n  // Skip countSizePairs.\n  p.skip('uShort', 1);\n  const axisCount = p.parseUShort();\n  const axisSize = p.parseUShort();\n  const instanceCount = p.parseUShort();\n  const instanceSize = p.parseUShort();\n  const axes = [];\n  for (let i = 0; i < axisCount; i++) {\n    axes.push(parseFvarAxis(data, start + offsetToData + i * axisSize, names));\n  }\n  const instances = [];\n  const instanceStart = start + offsetToData + axisCount * axisSize;\n  for (let j = 0; j < instanceCount; j++) {\n    instances.push(parseFvarInstance(data, instanceStart + j * instanceSize, axes, names));\n  }\n  return {\n    axes: axes,\n    instances: instances\n  };\n}\nexport default {\n  make: makeFvarTable,\n  parse: parseFvarTable\n};","map":{"version":3,"names":["check","parse","table","addName","name","names","nameString","JSON","stringify","nameID","nameKey","n","parseInt","makeFvarAxis","axis","type","value","tag","minValue","defaultValue","maxValue","parseFvarAxis","data","start","p","Parser","parseTag","parseFixed","skip","parseUShort","makeFvarInstance","inst","axes","fields","i","length","axisTag","push","coordinates","parseFvarInstance","makeFvarTable","fvar","result","Table","instances","offsetToData","sizeOf","concat","j","parseFvarTable","tableVersion","parseULong","argument","parseOffset16","axisCount","axisSize","instanceCount","instanceSize","instanceStart","make"],"sources":["C:/Users/14486/Desktop/社区公益系统前端/vue_community/node_modules/opentype.js/src/tables/fvar.js"],"sourcesContent":["// The `fvar` table stores font variation axes and instances.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6fvar.html\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\nfunction addName(name, names) {\n    const nameString = JSON.stringify(name);\n    let nameID = 256;\n    for (let nameKey in names) {\n        let n = parseInt(nameKey);\n        if (!n || n < 256) {\n            continue;\n        }\n\n        if (JSON.stringify(names[nameKey]) === nameString) {\n            return n;\n        }\n\n        if (nameID <= n) {\n            nameID = n + 1;\n        }\n    }\n\n    names[nameID] = name;\n    return nameID;\n}\n\nfunction makeFvarAxis(n, axis, names) {\n    const nameID = addName(axis.name, names);\n    return [\n        {name: 'tag_' + n, type: 'TAG', value: axis.tag},\n        {name: 'minValue_' + n, type: 'FIXED', value: axis.minValue << 16},\n        {name: 'defaultValue_' + n, type: 'FIXED', value: axis.defaultValue << 16},\n        {name: 'maxValue_' + n, type: 'FIXED', value: axis.maxValue << 16},\n        {name: 'flags_' + n, type: 'USHORT', value: 0},\n        {name: 'nameID_' + n, type: 'USHORT', value: nameID}\n    ];\n}\n\nfunction parseFvarAxis(data, start, names) {\n    const axis = {};\n    const p = new parse.Parser(data, start);\n    axis.tag = p.parseTag();\n    axis.minValue = p.parseFixed();\n    axis.defaultValue = p.parseFixed();\n    axis.maxValue = p.parseFixed();\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n    axis.name = names[p.parseUShort()] || {};\n    return axis;\n}\n\nfunction makeFvarInstance(n, inst, axes, names) {\n    const nameID = addName(inst.name, names);\n    const fields = [\n        {name: 'nameID_' + n, type: 'USHORT', value: nameID},\n        {name: 'flags_' + n, type: 'USHORT', value: 0}\n    ];\n\n    for (let i = 0; i < axes.length; ++i) {\n        const axisTag = axes[i].tag;\n        fields.push({\n            name: 'axis_' + n + ' ' + axisTag,\n            type: 'FIXED',\n            value: inst.coordinates[axisTag] << 16\n        });\n    }\n\n    return fields;\n}\n\nfunction parseFvarInstance(data, start, axes, names) {\n    const inst = {};\n    const p = new parse.Parser(data, start);\n    inst.name = names[p.parseUShort()] || {};\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n\n    inst.coordinates = {};\n    for (let i = 0; i < axes.length; ++i) {\n        inst.coordinates[axes[i].tag] = p.parseFixed();\n    }\n\n    return inst;\n}\n\nfunction makeFvarTable(fvar, names) {\n    const result = new table.Table('fvar', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'offsetToData', type: 'USHORT', value: 0},\n        {name: 'countSizePairs', type: 'USHORT', value: 2},\n        {name: 'axisCount', type: 'USHORT', value: fvar.axes.length},\n        {name: 'axisSize', type: 'USHORT', value: 20},\n        {name: 'instanceCount', type: 'USHORT', value: fvar.instances.length},\n        {name: 'instanceSize', type: 'USHORT', value: 4 + fvar.axes.length * 4}\n    ]);\n    result.offsetToData = result.sizeOf();\n\n    for (let i = 0; i < fvar.axes.length; i++) {\n        result.fields = result.fields.concat(makeFvarAxis(i, fvar.axes[i], names));\n    }\n\n    for (let j = 0; j < fvar.instances.length; j++) {\n        result.fields = result.fields.concat(makeFvarInstance(j, fvar.instances[j], fvar.axes, names));\n    }\n\n    return result;\n}\n\nfunction parseFvarTable(data, start, names) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseULong();\n    check.argument(tableVersion === 0x00010000, 'Unsupported fvar table version.');\n    const offsetToData = p.parseOffset16();\n    // Skip countSizePairs.\n    p.skip('uShort', 1);\n    const axisCount = p.parseUShort();\n    const axisSize = p.parseUShort();\n    const instanceCount = p.parseUShort();\n    const instanceSize = p.parseUShort();\n\n    const axes = [];\n    for (let i = 0; i < axisCount; i++) {\n        axes.push(parseFvarAxis(data, start + offsetToData + i * axisSize, names));\n    }\n\n    const instances = [];\n    const instanceStart = start + offsetToData + axisCount * axisSize;\n    for (let j = 0; j < instanceCount; j++) {\n        instances.push(parseFvarInstance(data, instanceStart + j * instanceSize, axes, names));\n    }\n\n    return {axes: axes, instances: instances};\n}\n\nexport default { make: makeFvarTable, parse: parseFvarTable };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}