{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nrequire('../../../utils/index.js');\nrequire('../../../constants/index.js');\nrequire('../../../hooks/index.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar index = require('../../../hooks/use-common-props/index.js');\nvar event = require('../../../constants/event.js');\nvar shared = require('@vue/shared');\nvar core = require('@vueuse/core');\nconst radioPropsBase = runtime.buildProps({\n  size: index.useSizeProp,\n  disabled: Boolean,\n  label: {\n    type: [String, Number, Boolean],\n    default: \"\"\n  }\n});\nconst radioProps = runtime.buildProps({\n  ...radioPropsBase,\n  modelValue: {\n    type: [String, Number, Boolean],\n    default: \"\"\n  },\n  name: {\n    type: String,\n    default: \"\"\n  },\n  border: Boolean\n});\nconst radioEmits = {\n  [event.UPDATE_MODEL_EVENT]: val => shared.isString(val) || core.isNumber(val) || core.isBoolean(val),\n  [event.CHANGE_EVENT]: val => shared.isString(val) || core.isNumber(val) || core.isBoolean(val)\n};\nexports.radioEmits = radioEmits;\nexports.radioProps = radioProps;\nexports.radioPropsBase = radioPropsBase;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAGY,MAACA,cAAc,GAAGC,kBAAU,CAAC;EACvCC,IAAI,EAAEC,iBAAW;EACjBC,QAAQ,EAAEC,OAAO;EACjBC,KAAK,EAAE;IACLC,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM,EAAEJ,OAAO,CAAC;IAC/BK,OAAO,EAAE;EACb;AACA,CAAC;AACW,MAACC,UAAU,GAAGV,kBAAU,CAAC;EACnC,GAAGD,cAAc;EACjBY,UAAU,EAAE;IACVL,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM,EAAEJ,OAAO,CAAC;IAC/BK,OAAO,EAAE;EACb,CAAG;EACDG,IAAI,EAAE;IACJN,IAAI,EAAEC,MAAM;IACZE,OAAO,EAAE;EACb,CAAG;EACDI,MAAM,EAAET;AACV,CAAC;AACW,MAACU,UAAU,GAAG;EACxB,CAACC,wBAAkB,GAAIC,GAAG,IAAKC,eAAQ,CAACD,GAAG,CAAC,IAAIE,aAAQ,CAACF,GAAG,CAAC,IAAIG,cAAS,CAACH,GAAG,CAAC;EAC/E,CAACI,kBAAY,GAAIJ,GAAG,IAAKC,eAAQ,CAACD,GAAG,CAAC,IAAIE,aAAQ,CAACF,GAAG,CAAC,IAAIG,cAAS,CAACH,GAAG;AAC1E","names":["radioPropsBase","buildProps","size","useSizeProp","disabled","Boolean","label","type","String","Number","default","radioProps","modelValue","name","border","radioEmits","UPDATE_MODEL_EVENT","val","isString","isNumber","isBoolean","CHANGE_EVENT"],"sources":["../../../../../../packages/components/radio/src/radio.ts"],"sourcesContent":["import { buildProps, isBoolean, isNumber, isString } from '@element-plus/utils'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { useSizeProp } from '@element-plus/hooks'\nimport type { ExtractPropTypes } from 'vue'\nimport type Radio from './radio.vue'\n\nexport const radioPropsBase = buildProps({\n  size: useSizeProp,\n  disabled: Boolean,\n  label: {\n    type: [String, Number, Boolean],\n    default: '',\n  },\n})\n\nexport const radioProps = buildProps({\n  ...radioPropsBase,\n  modelValue: {\n    type: [String, Number, Boolean],\n    default: '',\n  },\n  name: {\n    type: String,\n    default: '',\n  },\n  border: Boolean,\n} as const)\n\nexport const radioEmits = {\n  [UPDATE_MODEL_EVENT]: (val: string | number | boolean) =>\n    isString(val) || isNumber(val) || isBoolean(val),\n  [CHANGE_EVENT]: (val: string | number | boolean) =>\n    isString(val) || isNumber(val) || isBoolean(val),\n}\n\nexport type RadioProps = ExtractPropTypes<typeof radioProps>\nexport type RadioEmits = typeof radioEmits\nexport type RadioInstance = InstanceType<typeof Radio>\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}