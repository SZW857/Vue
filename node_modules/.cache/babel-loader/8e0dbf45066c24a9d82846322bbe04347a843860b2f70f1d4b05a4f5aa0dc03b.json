{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar index$1 = require('../../icon/index.js');\nrequire('../../../hooks/index.js');\nrequire('../../../utils/index.js');\nvar avatar = require('./avatar.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar shared = require('@vue/shared');\nvar core = require('@vueuse/core');\nvar style = require('../../../utils/dom/style.js');\nconst _hoisted_1 = [\"src\", \"alt\", \"srcset\"];\nconst __default__ = vue.defineComponent({\n  name: \"ElAvatar\"\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: avatar.avatarProps,\n  emits: avatar.avatarEmits,\n  setup(__props, {\n    emit\n  }) {\n    const props = __props;\n    const ns = index.useNamespace(\"avatar\");\n    const hasLoadError = vue.ref(false);\n    const avatarClass = vue.computed(() => {\n      const {\n        size,\n        icon,\n        shape\n      } = props;\n      const classList = [ns.b()];\n      if (shared.isString(size)) classList.push(ns.m(size));\n      if (icon) classList.push(ns.m(\"icon\"));\n      if (shape) classList.push(ns.m(shape));\n      return classList;\n    });\n    const sizeStyle = vue.computed(() => {\n      const {\n        size\n      } = props;\n      return core.isNumber(size) ? ns.cssVarBlock({\n        size: style.addUnit(size) || \"\"\n      }) : void 0;\n    });\n    const fitStyle = vue.computed(() => ({\n      objectFit: props.fit\n    }));\n    vue.watch(() => props.src, () => hasLoadError.value = false);\n    function handleError(e) {\n      hasLoadError.value = true;\n      emit(\"error\", e);\n    }\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(\"span\", {\n        class: vue.normalizeClass(vue.unref(avatarClass)),\n        style: vue.normalizeStyle(vue.unref(sizeStyle))\n      }, [(_ctx.src || _ctx.srcSet) && !hasLoadError.value ? (vue.openBlock(), vue.createElementBlock(\"img\", {\n        key: 0,\n        src: _ctx.src,\n        alt: _ctx.alt,\n        srcset: _ctx.srcSet,\n        style: vue.normalizeStyle(vue.unref(fitStyle)),\n        onError: handleError\n      }, null, 44, _hoisted_1)) : _ctx.icon ? (vue.openBlock(), vue.createBlock(vue.unref(index$1.ElIcon), {\n        key: 1\n      }, {\n        default: vue.withCtx(() => [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.icon)))]),\n        _: 1\n      })) : vue.renderSlot(_ctx.$slots, \"default\", {\n        key: 2\n      })], 6);\n    };\n  }\n});\nvar Avatar = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/avatar/src/avatar.vue\"]]);\nexports[\"default\"] = Avatar;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;uCA0Bc;EACZA,IAAM;AACR;;;;;;;;;IAKM,WAAKC,mBAAa,QAAQ;IAE1B,qBAAeC,QAAI,KAAK;IAExB,oBAAcC,aAAS,MAAM;MAC3B;QAAEC,IAAM;QAAAC;QAAMC;MAAU;MAC9B,MAAMC,SAAY,IAACC,EAAG,IAAG;MACzB,IAAIC,gBAASL,IAAI,GAAGG,UAAUG,IAAK,IAAGC,CAAE,KAAI,CAAC;MACzC,UAAMJ,UAAUG,IAAK,IAAGC,CAAE,OAAM,CAAC;MACjC,WAAOJ,UAAUG,IAAK,IAAGC,CAAE,MAAK,CAAC;MAC9B;IAAA,CACR;IAEK,kBAAYR,aAAS,MAAM;MAC/B,MAAM;QAAEC;MAAS;MACjB,OAAOQ,aAAS,KAAI,CACf,MAAGC,WAAY;QACdT,MAAMU,aAAQ,KAAI,CAAK;MAAA,CACxB,CACD;IAAA,CACL;IAEK,iBAAWX,aAAwB,OAAO;MAC9CY,WAAWC,KAAM;IAAA,CACjB;IAGFC,UACE,MAAMD,KAAM,MACZ,MAAOE,aAAaC,QAAQ,KAC9B;IAEA,qBAAqBC,CAAU;MAC7BF,aAAaC,KAAQ;MACrBE,KAAK,SAASD,CAAC;IAAA","names":["name","useNamespace","ref","computed","size","icon","shape","classList","ns","isString","push","m","isNumber","cssVarBlock","addUnit","objectFit","props","watch","hasLoadError","value","e","emit"],"sources":["../../../../../../packages/components/avatar/src/avatar.vue"],"sourcesContent":["<template>\n  <span :class=\"avatarClass\" :style=\"sizeStyle\">\n    <img\n      v-if=\"(src || srcSet) && !hasLoadError\"\n      :src=\"src\"\n      :alt=\"alt\"\n      :srcset=\"srcSet\"\n      :style=\"fitStyle\"\n      @error=\"handleError\"\n    />\n    <el-icon v-else-if=\"icon\">\n      <component :is=\"icon\" />\n    </el-icon>\n    <slot v-else />\n  </span>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, ref, watch } from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { useNamespace } from '@element-plus/hooks'\nimport { addUnit, isNumber, isString } from '@element-plus/utils'\nimport { avatarEmits, avatarProps } from './avatar'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElAvatar',\n})\n\nconst props = defineProps(avatarProps)\nconst emit = defineEmits(avatarEmits)\n\nconst ns = useNamespace('avatar')\n\nconst hasLoadError = ref(false)\n\nconst avatarClass = computed(() => {\n  const { size, icon, shape } = props\n  const classList = [ns.b()]\n  if (isString(size)) classList.push(ns.m(size))\n  if (icon) classList.push(ns.m('icon'))\n  if (shape) classList.push(ns.m(shape))\n  return classList\n})\n\nconst sizeStyle = computed(() => {\n  const { size } = props\n  return isNumber(size)\n    ? (ns.cssVarBlock({\n        size: addUnit(size) || '',\n      }) as CSSProperties)\n    : undefined\n})\n\nconst fitStyle = computed<CSSProperties>(() => ({\n  objectFit: props.fit,\n}))\n\n// need reset hasLoadError to false if src changed\nwatch(\n  () => props.src,\n  () => (hasLoadError.value = false)\n)\n\nfunction handleError(e: Event) {\n  hasLoadError.value = true\n  emit('error', e)\n}\n</script>\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}