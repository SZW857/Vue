{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../../constants/index.js');\nrequire('../../../hooks/index.js');\nvar steps = require('./steps.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar event = require('../../../constants/event.js');\nconst __default__ = vue.defineComponent({\n  name: \"ElSteps\"\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: steps.stepsProps,\n  emits: steps.stepsEmits,\n  setup(__props, {\n    emit\n  }) {\n    const props = __props;\n    const ns = index.useNamespace(\"steps\");\n    const steps = vue.ref([]);\n    vue.watch(steps, () => {\n      steps.value.forEach((instance, index) => {\n        instance.setIndex(index);\n      });\n    });\n    vue.provide(\"ElSteps\", {\n      props,\n      steps\n    });\n    vue.watch(() => props.active, (newVal, oldVal) => {\n      emit(event.CHANGE_EVENT, newVal, oldVal);\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(\"div\", {\n        class: vue.normalizeClass([vue.unref(ns).b(), vue.unref(ns).m(_ctx.simple ? \"simple\" : _ctx.direction)])\n      }, [vue.renderSlot(_ctx.$slots, \"default\")], 2);\n    };\n  }\n});\nvar Steps = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/steps/src/steps.vue\"]]);\nexports[\"default\"] = Steps;","map":{"version":3,"mappings":";;;;;;;;;;;;uCAec;EACZA,IAAM;AACR;;;;;;;;;IAKM,WAAKC,mBAAa,OAAO;IAEzB,cAA8BC,OAAI,GAAE;IAE1CC,UAAMC,OAAO,MAAM;MACjBA,MAAMC,KAAM,SAAQ,CAACC,UAAyBC,KAAkB;QAC9DD,SAASE,SAASD,KAAK;MAAA,CACxB;IAAA,CACF;IAEDE,YAAQ,SAAW;MAAEC,KAAO;MAAAN;IAAA,CAAO;IAEnCD,UACE,MAAMO,MAAMC,MACZ,GAACC,QAAgBC,MAAmB;MAC7BC,yBAAcF,QAAQC,MAAM;IAAA,CAErC","names":["name","useNamespace","ref","watch","steps","value","instance","index","setIndex","provide","props","active","newVal","oldVal","emit"],"sources":["../../../../../../packages/components/steps/src/steps.vue"],"sourcesContent":["<template>\n  <div :class=\"[ns.b(), ns.m(simple ? 'simple' : direction)]\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { provide, ref, watch } from 'vue'\nimport { CHANGE_EVENT } from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport { stepsEmits, stepsProps } from './steps'\n\nimport type { Ref } from 'vue'\nimport type { StepItemState } from './item.vue'\n\ndefineOptions({\n  name: 'ElSteps',\n})\n\nconst props = defineProps(stepsProps)\nconst emit = defineEmits(stepsEmits)\n\nconst ns = useNamespace('steps')\n\nconst steps: Ref<StepItemState[]> = ref([])\n\nwatch(steps, () => {\n  steps.value.forEach((instance: StepItemState, index: number) => {\n    instance.setIndex(index)\n  })\n})\n\nprovide('ElSteps', { props, steps })\n\nwatch(\n  () => props.active,\n  (newVal: number, oldVal: number) => {\n    emit(CHANGE_EVENT, newVal, oldVal)\n  }\n)\n</script>\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}