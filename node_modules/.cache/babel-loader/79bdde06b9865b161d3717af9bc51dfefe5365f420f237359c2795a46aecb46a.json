{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar core = require('@popperjs/core');\nrequire('../../../utils/index.js');\nrequire('../../../constants/index.js');\nrequire('../../../hooks/index.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar index = require('../../../hooks/use-common-props/index.js');\nvar core$1 = require('@vueuse/core');\nvar shared = require('@vue/shared');\nvar event = require('../../../constants/event.js');\nconst sliderProps = runtime.buildProps({\n  modelValue: {\n    type: runtime.definePropType([Number, Array]),\n    default: 0\n  },\n  id: {\n    type: String,\n    default: void 0\n  },\n  min: {\n    type: Number,\n    default: 0\n  },\n  max: {\n    type: Number,\n    default: 100\n  },\n  step: {\n    type: Number,\n    default: 1\n  },\n  showInput: Boolean,\n  showInputControls: {\n    type: Boolean,\n    default: true\n  },\n  size: index.useSizeProp,\n  inputSize: index.useSizeProp,\n  showStops: Boolean,\n  showTooltip: {\n    type: Boolean,\n    default: true\n  },\n  formatTooltip: {\n    type: runtime.definePropType(Function),\n    default: void 0\n  },\n  disabled: Boolean,\n  range: Boolean,\n  vertical: Boolean,\n  height: String,\n  debounce: {\n    type: Number,\n    default: 300\n  },\n  label: {\n    type: String,\n    default: void 0\n  },\n  rangeStartLabel: {\n    type: String,\n    default: void 0\n  },\n  rangeEndLabel: {\n    type: String,\n    default: void 0\n  },\n  formatValueText: {\n    type: runtime.definePropType(Function),\n    default: void 0\n  },\n  tooltipClass: {\n    type: String,\n    default: void 0\n  },\n  placement: {\n    type: String,\n    values: core.placements,\n    default: \"top\"\n  },\n  marks: {\n    type: runtime.definePropType(Object)\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true\n  }\n});\nconst isValidValue = value => core$1.isNumber(value) || shared.isArray(value) && value.every(core$1.isNumber);\nconst sliderEmits = {\n  [event.UPDATE_MODEL_EVENT]: isValidValue,\n  [event.INPUT_EVENT]: isValidValue,\n  [event.CHANGE_EVENT]: isValidValue\n};\nexports.sliderEmits = sliderEmits;\nexports.sliderProps = sliderProps;","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAaY,MAACA,WAAW,GAAGC,kBAAU,CAAC;EACpCC,UAAU,EAAE;IACVC,IAAI,EAAEC,sBAAc,CAAC,CAACC,MAAM,EAAEC,KAAK,CAAC,CAAC;IACrCC,OAAO,EAAE;EACb,CAAG;EACDC,EAAE,EAAE;IACFL,IAAI,EAAEM,MAAM;IACZF,OAAO,EAAE,KAAK;EAClB,CAAG;EACDG,GAAG,EAAE;IACHP,IAAI,EAAEE,MAAM;IACZE,OAAO,EAAE;EACb,CAAG;EACDI,GAAG,EAAE;IACHR,IAAI,EAAEE,MAAM;IACZE,OAAO,EAAE;EACb,CAAG;EACDK,IAAI,EAAE;IACJT,IAAI,EAAEE,MAAM;IACZE,OAAO,EAAE;EACb,CAAG;EACDM,SAAS,EAAEC,OAAO;EAClBC,iBAAiB,EAAE;IACjBZ,IAAI,EAAEW,OAAO;IACbP,OAAO,EAAE;EACb,CAAG;EACDS,IAAI,EAAEC,iBAAW;EACjBC,SAAS,EAAED,iBAAW;EACtBE,SAAS,EAAEL,OAAO;EAClBM,WAAW,EAAE;IACXjB,IAAI,EAAEW,OAAO;IACbP,OAAO,EAAE;EACb,CAAG;EACDc,aAAa,EAAE;IACblB,IAAI,EAAEC,sBAAc,CAACkB,QAAQ,CAAC;IAC9Bf,OAAO,EAAE,KAAK;EAClB,CAAG;EACDgB,QAAQ,EAAET,OAAO;EACjBU,KAAK,EAAEV,OAAO;EACdW,QAAQ,EAAEX,OAAO;EACjBY,MAAM,EAAEjB,MAAM;EACdkB,QAAQ,EAAE;IACRxB,IAAI,EAAEE,MAAM;IACZE,OAAO,EAAE;EACb,CAAG;EACDqB,KAAK,EAAE;IACLzB,IAAI,EAAEM,MAAM;IACZF,OAAO,EAAE,KAAK;EAClB,CAAG;EACDsB,eAAe,EAAE;IACf1B,IAAI,EAAEM,MAAM;IACZF,OAAO,EAAE,KAAK;EAClB,CAAG;EACDuB,aAAa,EAAE;IACb3B,IAAI,EAAEM,MAAM;IACZF,OAAO,EAAE,KAAK;EAClB,CAAG;EACDwB,eAAe,EAAE;IACf5B,IAAI,EAAEC,sBAAc,CAACkB,QAAQ,CAAC;IAC9Bf,OAAO,EAAE,KAAK;EAClB,CAAG;EACDyB,YAAY,EAAE;IACZ7B,IAAI,EAAEM,MAAM;IACZF,OAAO,EAAE,KAAK;EAClB,CAAG;EACD0B,SAAS,EAAE;IACT9B,IAAI,EAAEM,MAAM;IACZyB,MAAM,EAAEC,eAAU;IAClB5B,OAAO,EAAE;EACb,CAAG;EACD6B,KAAK,EAAE;IACLjC,IAAI,EAAEC,sBAAc,CAACiC,MAAM;EAC/B,CAAG;EACDC,aAAa,EAAE;IACbnC,IAAI,EAAEW,OAAO;IACbP,OAAO,EAAE;EACb;AACA,CAAC;AACD,MAAMgC,YAAY,GAAIC,KAAK,IAAKC,eAAQ,CAACD,KAAK,CAAC,IAAIE,cAAO,CAACF,KAAK,CAAC,IAAIA,KAAK,CAACG,KAAK,CAACF,eAAQ,CAAC;AAC9E,MAACG,WAAW,GAAG;EACzB,CAACC,wBAAkB,GAAGN,YAAY;EAClC,CAACO,iBAAW,GAAGP,YAAY;EAC3B,CAACQ,kBAAY,GAAGR;AAClB","names":["sliderProps","buildProps","modelValue","type","definePropType","Number","Array","default","id","String","min","max","step","showInput","Boolean","showInputControls","size","useSizeProp","inputSize","showStops","showTooltip","formatTooltip","Function","disabled","range","vertical","height","debounce","label","rangeStartLabel","rangeEndLabel","formatValueText","tooltipClass","placement","values","placements","marks","Object","validateEvent","isValidValue","value","isNumber","isArray","every","sliderEmits","UPDATE_MODEL_EVENT","INPUT_EVENT","CHANGE_EVENT"],"sources":["../../../../../../packages/components/slider/src/slider.ts"],"sourcesContent":["import { placements } from '@popperjs/core'\nimport {\n  buildProps,\n  definePropType,\n  isArray,\n  isNumber,\n} from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { useSizeProp } from '@element-plus/hooks'\nimport type { Arrayable } from '@element-plus/utils'\nimport type { ExtractPropTypes } from 'vue'\nimport type { SliderMarkerProps } from './marker'\nimport type Slider from './slider.vue'\n\ntype SliderMarks = Record<number, string | SliderMarkerProps['mark']>\n\nexport interface SliderInitData {\n  firstValue: number\n  secondValue: number\n  oldValue?: Arrayable<number>\n  dragging: boolean\n  sliderSize: number\n}\n\nexport const sliderProps = buildProps({\n  modelValue: {\n    type: definePropType<Arrayable<number>>([Number, Array]),\n    default: 0,\n  },\n  id: {\n    type: String,\n    default: undefined,\n  },\n  min: {\n    type: Number,\n    default: 0,\n  },\n  max: {\n    type: Number,\n    default: 100,\n  },\n  step: {\n    type: Number,\n    default: 1,\n  },\n  showInput: Boolean,\n  showInputControls: {\n    type: Boolean,\n    default: true,\n  },\n  size: useSizeProp,\n  inputSize: useSizeProp,\n  showStops: Boolean,\n  showTooltip: {\n    type: Boolean,\n    default: true,\n  },\n  formatTooltip: {\n    type: definePropType<(val: number) => number | string>(Function),\n    default: undefined,\n  },\n  disabled: Boolean,\n  range: Boolean,\n  vertical: Boolean,\n  height: String,\n  debounce: {\n    type: Number,\n    default: 300,\n  },\n  label: {\n    type: String,\n    default: undefined,\n  },\n  rangeStartLabel: {\n    type: String,\n    default: undefined,\n  },\n  rangeEndLabel: {\n    type: String,\n    default: undefined,\n  },\n  formatValueText: {\n    type: definePropType<(val: number) => string>(Function),\n    default: undefined,\n  },\n  tooltipClass: {\n    type: String,\n    default: undefined,\n  },\n  placement: {\n    type: String,\n    values: placements,\n    default: 'top',\n  },\n  marks: {\n    type: definePropType<SliderMarks>(Object),\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n} as const)\nexport type SliderProps = ExtractPropTypes<typeof sliderProps>\n\nconst isValidValue = (value: Arrayable<number>) =>\n  isNumber(value) || (isArray(value) && value.every(isNumber))\nexport const sliderEmits = {\n  [UPDATE_MODEL_EVENT]: isValidValue,\n  [INPUT_EVENT]: isValidValue,\n  [CHANGE_EVENT]: isValidValue,\n}\nexport type SliderEmits = typeof sliderEmits\n\nexport type SliderInstance = InstanceType<typeof Slider>\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}