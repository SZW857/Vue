{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar core = require('@vueuse/core');\nrequire('../../utils/index.js');\nvar index = require('../use-global-config/index.js');\nvar index$1 = require('../use-namespace/index.js');\nvar rand = require('../../utils/rand.js');\nlet cachedContainer;\nconst namespace = index.useGlobalConfig(\"namespace\", index$1.defaultNamespace);\nconst POPPER_CONTAINER_ID = `${namespace.value}-popper-container-${rand.generateId()}`;\nconst POPPER_CONTAINER_SELECTOR = `#${POPPER_CONTAINER_ID}`;\nconst createContainer = () => {\n  const container = document.createElement(\"div\");\n  container.id = POPPER_CONTAINER_ID;\n  document.body.appendChild(container);\n  return container;\n};\nconst usePopperContainer = () => {\n  vue.onBeforeMount(() => {\n    if (!core.isClient) return;\n    if (process.env.NODE_ENV === \"test\" || !cachedContainer || !document.body.querySelector(POPPER_CONTAINER_SELECTOR)) {\n      cachedContainer = createContainer();\n    }\n  });\n};\nexports.POPPER_CONTAINER_ID = POPPER_CONTAINER_ID;\nexports.POPPER_CONTAINER_SELECTOR = POPPER_CONTAINER_SELECTOR;\nexports.usePopperContainer = usePopperContainer;","map":{"version":3,"mappings":";;;;;;;;;;;AAKA,IAAIA,eAAe;AACnB,MAAMC,SAAS,GAAGC,qBAAe,CAAC,WAAW,EAAEC,wBAAgB,CAAC;AACpD,MAACC,mBAAmB,GAAI,GAAEH,SAAS,CAACI,KAAM,qBAAoBC,eAAU,EAAG;AAC3E,MAACC,yBAAyB,GAAI,IAAGH,mBAAoB;AACjE,MAAMI,eAAe,GAAG,MAAM;EAC5B,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC/CF,SAAS,CAACG,EAAE,GAAGR,mBAAmB;EAClCM,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,SAAS,CAAC;EACpC,OAAOA,SAAS;AAClB,CAAC;AACW,MAACM,kBAAkB,GAAG,MAAM;EACtCC,iBAAa,CAAC,MAAM;IAClB,IAAI,CAACC,aAAQ,EACX;IACF,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM,IAAI,CAACpB,eAAe,IAAI,CAACU,QAAQ,CAACG,IAAI,CAACQ,aAAa,CAACd,yBAAyB,CAAC,EAAE;MAClHP,eAAe,GAAGQ,eAAe,EAAE;IACzC;EACA,CAAG,CAAC;AACJ","names":["cachedContainer","namespace","useGlobalConfig","defaultNamespace","POPPER_CONTAINER_ID","value","generateId","POPPER_CONTAINER_SELECTOR","createContainer","container","document","createElement","id","body","appendChild","usePopperContainer","onBeforeMount","isClient","process","env","NODE_ENV","querySelector"],"sources":["../../../../../packages/hooks/use-popper-container/index.ts"],"sourcesContent":["import { onBeforeMount } from 'vue'\nimport { isClient } from '@vueuse/core'\nimport { generateId } from '@element-plus/utils'\nimport { useGlobalConfig } from '../use-global-config'\nimport { defaultNamespace } from '../use-namespace'\n\nlet cachedContainer: HTMLElement\n\nconst namespace = useGlobalConfig('namespace', defaultNamespace)\n\nexport const POPPER_CONTAINER_ID = `${\n  namespace.value\n}-popper-container-${generateId()}`\n\nexport const POPPER_CONTAINER_SELECTOR = `#${POPPER_CONTAINER_ID}`\n\nconst createContainer = () => {\n  const container = document.createElement('div')\n  container.id = POPPER_CONTAINER_ID\n  document.body.appendChild(container)\n  return container\n}\n\nexport const usePopperContainer = () => {\n  onBeforeMount(() => {\n    if (!isClient) return\n\n    // This is for bypassing the error that when under testing env, we often encounter\n    // document.body.innerHTML = '' situation\n    // for this we need to disable the caching since it's not really needed\n    if (\n      process.env.NODE_ENV === 'test' ||\n      !cachedContainer ||\n      !document.body.querySelector(POPPER_CONTAINER_SELECTOR)\n    ) {\n      cachedContainer = createContainer()\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}