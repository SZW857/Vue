{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar dayjs = require('dayjs');\nvar customParseFormat = require('dayjs/plugin/customParseFormat.js');\nvar advancedFormat = require('dayjs/plugin/advancedFormat.js');\nvar localeData = require('dayjs/plugin/localeData.js');\nvar weekOfYear = require('dayjs/plugin/weekOfYear.js');\nvar weekYear = require('dayjs/plugin/weekYear.js');\nvar dayOfYear = require('dayjs/plugin/dayOfYear.js');\nvar isSameOrAfter = require('dayjs/plugin/isSameOrAfter.js');\nvar isSameOrBefore = require('dayjs/plugin/isSameOrBefore.js');\nrequire('../../../hooks/index.js');\nrequire('../../../tokens/index.js');\nrequire('../../time-picker/index.js');\nvar datePicker = require('./props/date-picker.js');\nvar panelUtils = require('./panel-utils.js');\nvar props = require('../../time-picker/src/common/props.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar datePicker$1 = require('../../../tokens/date-picker.js');\nvar constants = require('../../time-picker/src/constants.js');\nvar picker = require('../../time-picker/src/common/picker.js');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);\nvar customParseFormat__default = /*#__PURE__*/_interopDefaultLegacy(customParseFormat);\nvar advancedFormat__default = /*#__PURE__*/_interopDefaultLegacy(advancedFormat);\nvar localeData__default = /*#__PURE__*/_interopDefaultLegacy(localeData);\nvar weekOfYear__default = /*#__PURE__*/_interopDefaultLegacy(weekOfYear);\nvar weekYear__default = /*#__PURE__*/_interopDefaultLegacy(weekYear);\nvar dayOfYear__default = /*#__PURE__*/_interopDefaultLegacy(dayOfYear);\nvar isSameOrAfter__default = /*#__PURE__*/_interopDefaultLegacy(isSameOrAfter);\nvar isSameOrBefore__default = /*#__PURE__*/_interopDefaultLegacy(isSameOrBefore);\ndayjs__default[\"default\"].extend(localeData__default[\"default\"]);\ndayjs__default[\"default\"].extend(advancedFormat__default[\"default\"]);\ndayjs__default[\"default\"].extend(customParseFormat__default[\"default\"]);\ndayjs__default[\"default\"].extend(weekOfYear__default[\"default\"]);\ndayjs__default[\"default\"].extend(weekYear__default[\"default\"]);\ndayjs__default[\"default\"].extend(dayOfYear__default[\"default\"]);\ndayjs__default[\"default\"].extend(isSameOrAfter__default[\"default\"]);\ndayjs__default[\"default\"].extend(isSameOrBefore__default[\"default\"]);\nvar DatePicker = vue.defineComponent({\n  name: \"ElDatePicker\",\n  install: null,\n  props: {\n    ...props.timePickerDefaultProps,\n    ...datePicker.datePickerProps\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, {\n    expose,\n    emit,\n    slots\n  }) {\n    const ns = index.useNamespace(\"picker-panel\");\n    vue.provide(\"ElPopperOptions\", vue.reactive(vue.toRef(props, \"popperOptions\")));\n    vue.provide(datePicker$1.ROOT_PICKER_INJECTION_KEY, {\n      slots,\n      pickerNs: ns\n    });\n    const commonPicker = vue.ref();\n    const refProps = {\n      focus: (focusStartInput = true) => {\n        var _a;\n        (_a = commonPicker.value) == null ? void 0 : _a.focus(focusStartInput);\n      },\n      handleOpen: () => {\n        var _a;\n        (_a = commonPicker.value) == null ? void 0 : _a.handleOpen();\n      },\n      handleClose: () => {\n        var _a;\n        (_a = commonPicker.value) == null ? void 0 : _a.handleClose();\n      }\n    };\n    expose(refProps);\n    const onModelValueUpdated = val => {\n      emit(\"update:modelValue\", val);\n    };\n    return () => {\n      var _a;\n      const format = (_a = props.format) != null ? _a : constants.DEFAULT_FORMATS_DATEPICKER[props.type] || constants.DEFAULT_FORMATS_DATE;\n      const Component = panelUtils.getPanel(props.type);\n      return vue.createVNode(picker[\"default\"], vue.mergeProps(props, {\n        \"format\": format,\n        \"type\": props.type,\n        \"ref\": commonPicker,\n        \"onUpdate:modelValue\": onModelValueUpdated\n      }), {\n        default: scopedProps => vue.createVNode(Component, scopedProps, null),\n        \"range-separator\": slots[\"range-separator\"]\n      });\n    };\n  }\n});\nexports[\"default\"] = DatePicker;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBAA,yBAAK,CAACC,MAAN,CAAaC,8BAAb;AACAF,yBAAK,CAACC,MAAN,CAAaE,kCAAb;AACAH,yBAAK,CAACC,MAAN,CAAaG,qCAAb;AACAJ,yBAAK,CAACC,MAAN,CAAaI,8BAAb;AACAL,yBAAK,CAACC,MAAN,CAAaK,4BAAb;AACAN,yBAAK,CAACC,MAAN,CAAaM,6BAAb;AACAP,yBAAK,CAACC,MAAN,CAAaO,iCAAb;AACAR,yBAAK,CAACC,MAAN,CAAaQ,kCAAb;AAEA,iBAAeC,mBAAe,CAAC;EAC7BC,IAAI,EAAE,cADuB;EAE7BC,OAAO,EAAE,IAFoB;EAG7BC,KAAK,EAAE;IAEL,GAAGC,4BAFE;IAGL,GAAGC;GANwB;EAQ7BC,KAAK,EAAE,CAAC,mBAAD,CARsB;;IASxBC;IAAUA,IAAF;IAAUC;EAAMC;IAAS;IACpCC,WAAQ,0CAAR;IAEAA,WAAO,CAACC,sCAAmBC,EAAQ;MAC5BH;MACLA,QADiC;IAEjCI;IAFiC,MAAnCC;IAKA,MAAMA;MACNC,uBAAiB;QACfA,IAAOC,EAACC;QACNH,mBAAoBC,UAApB;OAFa;MAIfG,UAAU,EAAE,MAAM;QAChBJ,IAAYE;QALC;MAOfG;iBACc,QAAZ;QACD;QATH;;;IAcAZ,MAAMa;IACJZ,MAAIY,mBAAC,GAAqBC,GAA1B;MADFb;;IAIA,OAAO,MAAM;MACX;MACA;MACA,MAAMc,SACJnB,GAAKoB,oBAALpB,KACCqB;MAEH,sBAAkBD,kBAAc,gBAAhC;QAEA;QAAA;QAAA,KAIUpB,cAJV;QAAA;QAAA,EAMyBiB;QANzBK;QASMA,iBAAUC,OACOA;QAEjB;IAZN;;AAiBH","names":["dayjs","extend","localeData","advancedFormat","customParseFormat","weekOfYear","weekYear","dayOfYear","isSameOrAfter","isSameOrBefore","defineComponent","name","install","props","timePickerDefaultProps","datePickerProps","emits","expose","emit","slots","provide","ROOT_PICKER_INJECTION_KEY","reactive","pickerNs","commonPicker","focus","_a","focusStartInput","handleOpen","handleClose","onModelValueUpdated","val","format","getPanel","DEFAULT_FORMATS_DATEPICKER","default","scopedProps"],"sources":["../../../../../../packages/components/date-picker/src/date-picker.tsx"],"sourcesContent":["import { defineComponent, provide, reactive, ref, toRef } from 'vue'\nimport dayjs from 'dayjs'\nimport customParseFormat from 'dayjs/plugin/customParseFormat.js'\nimport advancedFormat from 'dayjs/plugin/advancedFormat.js'\nimport localeData from 'dayjs/plugin/localeData.js'\nimport weekOfYear from 'dayjs/plugin/weekOfYear.js'\nimport weekYear from 'dayjs/plugin/weekYear.js'\nimport dayOfYear from 'dayjs/plugin/dayOfYear.js'\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter.js'\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore.js'\nimport { useNamespace } from '@element-plus/hooks'\nimport { ROOT_PICKER_INJECTION_KEY } from '@element-plus/tokens'\nimport {\n  CommonPicker,\n  DEFAULT_FORMATS_DATE,\n  DEFAULT_FORMATS_DATEPICKER,\n  timePickerDefaultProps,\n} from '@element-plus/components/time-picker'\n\nimport { datePickerProps } from './props/date-picker'\nimport { getPanel } from './panel-utils'\n\ndayjs.extend(localeData)\ndayjs.extend(advancedFormat)\ndayjs.extend(customParseFormat)\ndayjs.extend(weekOfYear)\ndayjs.extend(weekYear)\ndayjs.extend(dayOfYear)\ndayjs.extend(isSameOrAfter)\ndayjs.extend(isSameOrBefore)\n\nexport default defineComponent({\n  name: 'ElDatePicker',\n  install: null,\n  props: {\n    // FIXME: move this to date-picker.ts\n    ...timePickerDefaultProps,\n    ...datePickerProps,\n  },\n  emits: ['update:modelValue'],\n  setup(props, { expose, emit, slots }) {\n    const ns = useNamespace('picker-panel')\n\n    provide('ElPopperOptions', reactive(toRef(props, 'popperOptions')))\n    provide(ROOT_PICKER_INJECTION_KEY, {\n      slots,\n      pickerNs: ns,\n    })\n\n    const commonPicker = ref<InstanceType<typeof CommonPicker>>()\n    const refProps = {\n      focus: (focusStartInput = true) => {\n        commonPicker.value?.focus(focusStartInput)\n      },\n      handleOpen: () => {\n        commonPicker.value?.handleOpen()\n      },\n      handleClose: () => {\n        commonPicker.value?.handleClose()\n      },\n    }\n\n    expose(refProps)\n\n    const onModelValueUpdated = (val: any) => {\n      emit('update:modelValue', val)\n    }\n\n    return () => {\n      // since props always have all defined keys on it, {format, ...props} will always overwrite format\n      // pick props.format or provide default value here before spreading\n      const format =\n        props.format ??\n        (DEFAULT_FORMATS_DATEPICKER[props.type] || DEFAULT_FORMATS_DATE)\n\n      const Component = getPanel(props.type)\n\n      return (\n        <CommonPicker\n          {...props}\n          format={format}\n          type={props.type}\n          ref={commonPicker}\n          onUpdate:modelValue={onModelValueUpdated}\n        >\n          {{\n            default: (scopedProps: /**FIXME: remove any type */ any) => (\n              <Component {...scopedProps} />\n            ),\n            'range-separator': slots['range-separator'],\n          }}\n        </CommonPicker>\n      )\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}