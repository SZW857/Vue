{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar lodashUnified = require('lodash-unified');\nrequire('../../../utils/index.js');\nrequire('../../../hooks/index.js');\nrequire('../../../constants/index.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar index = require('../../../hooks/use-common-props/index.js');\nvar event = require('../../../constants/event.js');\nvar shared = require('@vue/shared');\nconst colorPickerProps = runtime.buildProps({\n  modelValue: String,\n  id: String,\n  showAlpha: Boolean,\n  colorFormat: String,\n  disabled: Boolean,\n  size: index.useSizeProp,\n  popperClass: {\n    type: String,\n    default: \"\"\n  },\n  label: {\n    type: String,\n    default: void 0\n  },\n  tabindex: {\n    type: [String, Number],\n    default: 0\n  },\n  predefine: {\n    type: runtime.definePropType(Array)\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true\n  }\n});\nconst colorPickerEmits = {\n  [event.UPDATE_MODEL_EVENT]: val => shared.isString(val) || lodashUnified.isNil(val),\n  [event.CHANGE_EVENT]: val => shared.isString(val) || lodashUnified.isNil(val),\n  activeChange: val => shared.isString(val) || lodashUnified.isNil(val)\n};\nconst colorPickerContextKey = Symbol(\"colorPickerContextKey\");\nexports.colorPickerContextKey = colorPickerContextKey;\nexports.colorPickerEmits = colorPickerEmits;\nexports.colorPickerProps = colorPickerProps;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAIY,MAACA,gBAAgB,GAAGC,kBAAU,CAAC;EACzCC,UAAU,EAAEC,MAAM;EAClBC,EAAE,EAAED,MAAM;EACVE,SAAS,EAAEC,OAAO;EAClBC,WAAW,EAAEJ,MAAM;EACnBK,QAAQ,EAAEF,OAAO;EACjBG,IAAI,EAAEC,iBAAW;EACjBC,WAAW,EAAE;IACXC,IAAI,EAAET,MAAM;IACZU,OAAO,EAAE;EACb,CAAG;EACDC,KAAK,EAAE;IACLF,IAAI,EAAET,MAAM;IACZU,OAAO,EAAE,KAAK;EAClB,CAAG;EACDE,QAAQ,EAAE;IACRH,IAAI,EAAE,CAACT,MAAM,EAAEa,MAAM,CAAC;IACtBH,OAAO,EAAE;EACb,CAAG;EACDI,SAAS,EAAE;IACTL,IAAI,EAAEM,sBAAc,CAACC,KAAK;EAC9B,CAAG;EACDC,aAAa,EAAE;IACbR,IAAI,EAAEN,OAAO;IACbO,OAAO,EAAE;EACb;AACA,CAAC;AACW,MAACQ,gBAAgB,GAAG;EAC9B,CAACC,wBAAkB,GAAIC,GAAG,IAAKC,eAAQ,CAACD,GAAG,CAAC,IAAIE,mBAAK,CAACF,GAAG,CAAC;EAC1D,CAACG,kBAAY,GAAIH,GAAG,IAAKC,eAAQ,CAACD,GAAG,CAAC,IAAIE,mBAAK,CAACF,GAAG,CAAC;EACpDI,YAAY,EAAGJ,GAAG,IAAKC,eAAQ,CAACD,GAAG,CAAC,IAAIE,mBAAK,CAACF,GAAG;AACnD;AACY,MAACK,qBAAqB,GAAGC,MAAM,CAAC,uBAAuB","names":["colorPickerProps","buildProps","modelValue","String","id","showAlpha","Boolean","colorFormat","disabled","size","useSizeProp","popperClass","type","default","label","tabindex","Number","predefine","definePropType","Array","validateEvent","colorPickerEmits","UPDATE_MODEL_EVENT","val","isString","isNil","CHANGE_EVENT","activeChange","colorPickerContextKey","Symbol"],"sources":["../../../../../../packages/components/color-picker/src/color-picker.ts"],"sourcesContent":["import { isNil } from 'lodash-unified'\nimport { buildProps, definePropType, isString } from '@element-plus/utils'\nimport { useSizeProp } from '@element-plus/hooks'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\n\nimport type { ComputedRef, ExtractPropTypes, InjectionKey } from 'vue'\nimport type ColorPicker from './color-picker.vue'\n\nexport const colorPickerProps = buildProps({\n  modelValue: String,\n  id: String,\n  showAlpha: Boolean,\n  colorFormat: String,\n  disabled: Boolean,\n  size: useSizeProp,\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  label: {\n    type: String,\n    default: undefined,\n  },\n  tabindex: {\n    type: [String, Number],\n    default: 0,\n  },\n  predefine: {\n    type: definePropType<string[]>(Array),\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n} as const)\nexport const colorPickerEmits = {\n  [UPDATE_MODEL_EVENT]: (val: string | null) => isString(val) || isNil(val),\n  [CHANGE_EVENT]: (val: string | null) => isString(val) || isNil(val),\n  activeChange: (val: string | null) => isString(val) || isNil(val),\n}\n\nexport type ColorPickerProps = ExtractPropTypes<typeof colorPickerProps>\nexport type ColorPickerEmits = typeof colorPickerEmits\nexport type ColorPickerInstance = InstanceType<typeof ColorPicker>\n\nexport interface ColorPickerContext {\n  currentColor: ComputedRef<string>\n}\n\nexport const colorPickerContextKey: InjectionKey<ColorPickerContext> = Symbol(\n  'colorPickerContextKey'\n)\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}