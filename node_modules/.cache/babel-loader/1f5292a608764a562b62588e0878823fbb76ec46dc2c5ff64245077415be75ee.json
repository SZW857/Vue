{"ast":null,"code":"import { resolveComponent as _resolveComponent, withKeys as _withKeys, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"display\": \"flex\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_s_identify = _resolveComponent(\"s-identify\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  return _openBlock(), _createBlock(_component_el_form_item, {\n    prop: \"verifycode\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_input, {\n      modelValue: $data.ruleForm.verifycode,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.ruleForm.verifycode = $event),\n      placeholder: \"请输入验证码\",\n      onKeyup: _cache[1] || (_cache[1] = _withKeys($event => _ctx.login('ruleForm'), [\"enter\", \"native\"]))\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"span\", {\n      onClick: _cache[2] || (_cache[2] = (...args) => _ctx.refreshCode && _ctx.refreshCode(...args))\n    }, [_createVNode(_component_s_identify, {\n      identifyCode: $data.identifyCode\n    }, null, 8 /* PROPS */, [\"identifyCode\"])])])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;EAESA,KAAoB,EAApB;IAAA;EAAA;AAAoB;;;;;uBAD3BC,aAWeC;IAXDC,IAAI,EAAC;EAAY;sBAC7B,MASM,CATNC,oBASM,OATNC,UASM,GARJC,aAIYC;kBAHCC,cAAQ,CAACC,UAAU;iEAAnBD,cAAQ,CAACC,UAAU;MAC5BC,WAAW,EAAC,QAAQ;MACnBC,OAAK,gDAAeC,UAAK;6CAE9BR,oBAEQ;MAFDS,OAAK,yCAAED,6CAAW;QACxBN,aACAQ;MADaC,YAAY,EAAEP;IAAY","names":["style","_createBlock","_component_el_form_item","prop","_createElementVNode","_hoisted_1","_createVNode","_component_el_input","$data","verifycode","placeholder","onKeyup","_ctx","onClick","_component_s_identify","identifyCode"],"sourceRoot":"","sources":["C:\\Users\\14486\\Desktop\\社区公益系统前端\\vue_community\\src\\NavigationBar\\PointsGoods.vue"],"sourcesContent":["<template>\r\n  <el-form-item prop=\"verifycode\">\r\n    <div style=\"display:flex\">\r\n      <el-input\r\n          v-model=\"ruleForm.verifycode\"\r\n          placeholder=\"请输入验证码\"\r\n          @keyup.enter.native=\"login('ruleForm')\"\r\n      ></el-input>\r\n      <span @click=\"refreshCode\"\r\n      ><s-identify :identifyCode=\"identifyCode\"></s-identify\r\n      ></span>\r\n    </div>\r\n  </el-form-item>\r\n</template>\r\n\r\n\r\n<script>\r\nimport SIdentify from '../../components/identify'\r\nexport default {\r\n  components: {SIdentify},\r\n  data() {\r\n    // 验证码自定义验证规则\r\n    const validateVerifycode = (rule, value, callback) => {\r\n      const newVal = value.toLowerCase()\r\n      const identifyStr = this.identifyCode.toLowerCase()\r\n      if (newVal === '') {\r\n        callback(new Error('请输入验证码'))\r\n      } else if (newVal !== identifyStr) {\r\n        console.log('validateVerifycode:', value)\r\n        callback(new Error('验证码不正确!'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      identifyCodes: '3456789ABCDEFGHGKMNPQRSTUVWXY',\r\n      identifyCode: '',\r\n      ruleForm: {\r\n        userName: '',\r\n        password: '',\r\n        verifycode: ''\r\n      },\r\n      rules: {\r\n        verifycode: [\r\n          {required: true, trigger: 'blur', validator: validateVerifycode}\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}