{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar core = require('@vueuse/core');\nrequire('../../constants/index.js');\nvar aria = require('../../constants/aria.js');\nconst modalStack = [];\nconst closeModal = e => {\n  if (modalStack.length === 0) return;\n  if (e.code === aria.EVENT_CODE.esc) {\n    e.stopPropagation();\n    const topModal = modalStack[modalStack.length - 1];\n    topModal.handleClose();\n  }\n};\nconst useModal = (instance, visibleRef) => {\n  vue.watch(visibleRef, val => {\n    if (val) {\n      modalStack.push(instance);\n    } else {\n      modalStack.splice(modalStack.indexOf(instance), 1);\n    }\n  });\n};\nif (core.isClient) core.useEventListener(document, \"keydown\", closeModal);\nexports.useModal = useModal;","map":{"version":3,"mappings":";;;;;;;;;;AAGA,MAAMA,UAAU,GAAG,EAAE;AACrB,MAAMC,UAAU,GAAIC,CAAC,IAAK;EACxB,IAAIF,UAAU,CAACG,MAAM,KAAK,CAAC,EACzB;EACF,IAAID,CAAC,CAACE,IAAI,KAAKC,eAAU,CAACC,GAAG,EAAE;IAC7BJ,CAAC,CAACK,eAAe,EAAE;IACnB,MAAMC,QAAQ,GAAGR,UAAU,CAACA,UAAU,CAACG,MAAM,GAAG,CAAC,CAAC;IAClDK,QAAQ,CAACC,WAAW,EAAE;EAC1B;AACA,CAAC;AACW,MAACC,QAAQ,GAAG,CAACC,QAAQ,EAAEC,UAAU,KAAK;EAChDC,SAAK,CAACD,UAAU,EAAGE,GAAG,IAAK;IACzB,IAAIA,GAAG,EAAE;MACPd,UAAU,CAACe,IAAI,CAACJ,QAAQ,CAAC;IAC/B,CAAK,MAAM;MACLX,UAAU,CAACgB,MAAM,CAAChB,UAAU,CAACiB,OAAO,CAACN,QAAQ,CAAC,EAAE,CAAC,CAAC;IACxD;EACA,CAAG,CAAC;AACJ;AACA,IAAIO,aAAQ,EACVC,qBAAgB,CAACC,QAAQ,EAAE,SAAS,EAAEnB,UAAU,CAAC","names":["modalStack","closeModal","e","length","code","EVENT_CODE","esc","stopPropagation","topModal","handleClose","useModal","instance","visibleRef","watch","val","push","splice","indexOf","isClient","useEventListener","document"],"sources":["../../../../../packages/hooks/use-modal/index.ts"],"sourcesContent":["import { watch } from 'vue'\nimport { isClient, useEventListener } from '@vueuse/core'\nimport { EVENT_CODE } from '@element-plus/constants'\n\nimport type { Ref } from 'vue'\n\ntype ModalInstance = {\n  handleClose: () => void\n}\n\nconst modalStack: ModalInstance[] = []\n\nconst closeModal = (e: KeyboardEvent) => {\n  if (modalStack.length === 0) return\n  if (e.code === EVENT_CODE.esc) {\n    e.stopPropagation()\n    const topModal = modalStack[modalStack.length - 1]\n    topModal.handleClose()\n  }\n}\n\nexport const useModal = (instance: ModalInstance, visibleRef: Ref<boolean>) => {\n  watch(visibleRef, (val) => {\n    if (val) {\n      modalStack.push(instance)\n    } else {\n      modalStack.splice(modalStack.indexOf(instance), 1)\n    }\n  })\n}\n\nif (isClient) useEventListener(document, 'keydown', closeModal)\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}