{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar util = require('./util.js');\nvar thumb = require('./thumb2.js');\nvar bar = require('./bar.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  __name: \"bar\",\n  props: bar.barProps,\n  setup(__props, {\n    expose\n  }) {\n    const props = __props;\n    const moveX = vue.ref(0);\n    const moveY = vue.ref(0);\n    const handleScroll = wrap => {\n      if (wrap) {\n        const offsetHeight = wrap.offsetHeight - util.GAP;\n        const offsetWidth = wrap.offsetWidth - util.GAP;\n        moveY.value = wrap.scrollTop * 100 / offsetHeight * props.ratioY;\n        moveX.value = wrap.scrollLeft * 100 / offsetWidth * props.ratioX;\n      }\n    };\n    expose({\n      handleScroll\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(vue.Fragment, null, [vue.createVNode(thumb[\"default\"], {\n        move: moveX.value,\n        ratio: _ctx.ratioX,\n        size: _ctx.width,\n        always: _ctx.always\n      }, null, 8, [\"move\", \"ratio\", \"size\", \"always\"]), vue.createVNode(thumb[\"default\"], {\n        move: moveY.value,\n        ratio: _ctx.ratioY,\n        size: _ctx.height,\n        vertical: \"\",\n        always: _ctx.always\n      }, null, 8, [\"move\", \"ratio\", \"size\", \"always\"])], 64);\n    };\n  }\n});\nvar Bar = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/scrollbar/src/bar.vue\"]]);\nexports[\"default\"] = Bar;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;IAkBM,cAAQA,QAAI,CAAC;IACb,cAAQA,QAAI,CAAC;IAEb,qBAAgBC,IAAyB;MAC7C,IAAIA,IAAM;QACF,qBAAeA,KAAKC,YAAe;QACnC,oBAAcD,KAAKE,WAAc;QAEvCC,MAAMC,KAAU,QAAKC,SAAY,SAAOJ,eAAgBK,KAAM;QAC9DC,MAAMH,KAAU,QAAKI,UAAa,SAAON,cAAeI,KAAM;MAAA;IAChE,CACF;IAEaG;MACXC;IAAA,CACD","names":["ref","wrap","offsetHeight","offsetWidth","moveY","value","scrollTop","props","moveX","scrollLeft","expose","handleScroll"],"sources":["../../../../../../packages/components/scrollbar/src/bar.vue"],"sourcesContent":["<template>\n  <thumb :move=\"moveX\" :ratio=\"ratioX\" :size=\"width\" :always=\"always\" />\n  <thumb\n    :move=\"moveY\"\n    :ratio=\"ratioY\"\n    :size=\"height\"\n    vertical\n    :always=\"always\"\n  />\n</template>\n<script lang=\"ts\" setup>\nimport { ref } from 'vue'\nimport { GAP } from './util'\nimport Thumb from './thumb.vue'\nimport { barProps } from './bar'\n\nconst props = defineProps(barProps)\n\nconst moveX = ref(0)\nconst moveY = ref(0)\n\nconst handleScroll = (wrap: HTMLDivElement) => {\n  if (wrap) {\n    const offsetHeight = wrap.offsetHeight - GAP\n    const offsetWidth = wrap.offsetWidth - GAP\n\n    moveY.value = ((wrap.scrollTop * 100) / offsetHeight) * props.ratioY\n    moveX.value = ((wrap.scrollLeft * 100) / offsetWidth) * props.ratioX\n  }\n}\n\ndefineExpose({\n  handleScroll,\n})\n</script>\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}