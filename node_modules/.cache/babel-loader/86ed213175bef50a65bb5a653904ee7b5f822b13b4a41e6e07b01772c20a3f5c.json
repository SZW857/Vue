{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../../hooks/index.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nconst _sfc_main = vue.defineComponent({\n  name: \"ElTreeNodeContent\",\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    renderContent: Function\n  },\n  setup(props) {\n    const ns = index.useNamespace(\"tree\");\n    const nodeInstance = vue.inject(\"NodeInstance\");\n    const tree = vue.inject(\"RootTree\");\n    return () => {\n      const node = props.node;\n      const {\n        data,\n        store\n      } = node;\n      return props.renderContent ? props.renderContent(vue.h, {\n        _self: nodeInstance,\n        node,\n        data,\n        store\n      }) : vue.h(\"span\", {\n        class: ns.be(\"node\", \"label\")\n      }, [tree.ctx.slots.default ? tree.ctx.slots.default({\n        node,\n        data\n      }) : node.label]);\n    };\n  }\n});\nvar NodeContent = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree-node-content.vue\"]]);\nexports[\"default\"] = NodeContent;","map":{"version":3,"mappings":";;;;;;;;;AAQA,MAAKA,YAAaC,mBAAa;EAC7BC,IAAM;EACNC,KAAO;IACLC,IAAM;MACJC,IAAM;MACNC,QAAU;IAAA,CACZ;IACAC,aAAe;EAAA,CACjB;EACAC,MAAML,KAAO;IACL,WAAKM,mBAAa,MAAM;IACxB,qBAAeC,WAAkC,cAAc;IAC/D,aAAOA,WAAqB,UAAU;IAC5C,OAAO,MAAM;MACX,MAAMN,OAAOD,KAAM;MACb;QAAEQ;QAAMC;MAAU;MACjB,aAAML,gBACTJ,KAAM,eAAcU,OAAG;QAAEC,OAAOC,YAAc;QAAAX;QAAMO,IAAM;QAAAC;MAAA,CAAO,CACjE,SAAE,QAAQ;QAAEI,OAAOC,GAAGC,EAAG,SAAQ,OAAO;MAAA,CAAK,GAC3CC,IAAK,KAAIC,KAAM,WACXD,IAAK,KAAIC,KAAM,SAAQ;QAAEhB;QAAMO;MAAK,CAAC,IACrCP,IAAK,OACV;IAAA,CACP;EAAA;AAEJ,CAAC","names":["_sfc_main","defineComponent","name","props","node","type","required","renderContent","setup","useNamespace","inject","data","store","h","_self","nodeInstance","class","ns","be","tree","slots"],"sources":["../../../../../../packages/components/tree/src/tree-node-content.vue"],"sourcesContent":["<script lang=\"ts\">\n// @ts-nocheck\nimport { defineComponent, h, inject } from 'vue'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport type { ComponentInternalInstance } from 'vue'\nimport type { RootTreeType } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNodeContent',\n  props: {\n    node: {\n      type: Object,\n      required: true,\n    },\n    renderContent: Function,\n  },\n  setup(props) {\n    const ns = useNamespace('tree')\n    const nodeInstance = inject<ComponentInternalInstance>('NodeInstance')\n    const tree = inject<RootTreeType>('RootTree')\n    return () => {\n      const node = props.node\n      const { data, store } = node\n      return props.renderContent\n        ? props.renderContent(h, { _self: nodeInstance, node, data, store })\n        : h('span', { class: ns.be('node', 'label') }, [\n            tree.ctx.slots.default\n              ? tree.ctx.slots.default({ node, data })\n              : node.label,\n          ])\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}