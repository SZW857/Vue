{"ast":null,"code":"export default {\n  data() {\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n        console.log(value);\n      } else {\n        if (this.passwdCheck(value)) {\n          this.$refs.ruleForm.validateField('confirmPass');\n          callback();\n        } else {\n          callback(new Error(\"密码格式不对(数字+密码组合)\"));\n        }\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        pass: '',\n        checkPass: ''\n      },\n      rules: {\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert('submit!');\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  },\n  //校验密码强度\n  passwdCheck(num) {\n    let reg = /^(?![\\d]+$)(?![a-zA-Z]+$)(?![^\\da-zA-Z]+$).{6,20}$/;\n    if (reg.test(num) === false) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n};","map":{"version":3,"mappings":"AA+BA,eAAe;EACbA,IAAI,GAAG;IACL,IAAIC,YAAW,GAAI,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC5C,IAAID,KAAI,KAAM,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC;QAC3BC,OAAO,CAACC,GAAG,CAACJ,KAAK;MACnB,CAAC,MAAI;QACH,IAAI,IAAI,CAACK,WAAW,CAACL,KAAK,CAAC,EAAE;UAC3B,IAAI,CAACM,KAAK,CAACC,QAAQ,CAACC,aAAa,CAAC,aAAa;UAC/CP,QAAQ,EAAC;QACX,CAAC,MAAK;UACJA,QAAQ,CAAC,IAAIC,KAAK,CAAC,iBAAiB,CAAC;QACvC;MACF;IACF;IACA,IAAIO,aAAY,GAAI,CAACV,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC7C,IAAID,KAAI,KAAM,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,SAAS,CAAC;MAC/B,OAAO,IAAIF,KAAI,KAAM,IAAI,CAACO,QAAQ,CAACG,IAAI,EAAE;QACvCT,QAAQ,CAAC,IAAIC,KAAK,CAAC,YAAY,CAAC;MAClC,OAAO;QACLD,QAAQ,EAAC;MACX;IACF;IACA,OAAO;MACLM,QAAQ,EAAE;QACRG,IAAI,EAAE,EAAE;QACRC,SAAS,EAAE;MACb,CAAC;MACDC,KAAK,EAAE;QACLF,IAAI,EAAE,CAAC;UAAEG,SAAS,EAAEf,YAAY;UAAEgB,OAAO,EAAE;QAAO,CAAC,CAAC;QACpDH,SAAS,EAAE,CAAC;UAAEE,SAAS,EAAEJ,aAAa;UAAEK,OAAO,EAAE;QAAO,CAAC;MAC3D;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAU,CAACC,QAAQ,EAAE;MACnB,IAAI,CAACX,KAAK,CAACW,QAAQ,CAAC,CAACC,QAAQ,CAAEC,KAAK,IAAK;QACvC,IAAIA,KAAK,EAAE;UACTC,KAAK,CAAC,SAAS;QACjB,OAAO;UACLjB,OAAO,CAACC,GAAG,CAAC,gBAAgB;UAC5B,OAAO,KAAI;QACb;MACF,CAAC;IACH,CAAC;IACDiB,SAAS,CAACJ,QAAQ,EAAE;MAClB,IAAI,CAACX,KAAK,CAACW,QAAQ,CAAC,CAACK,WAAW,EAAC;IACnC;EACF,CAAC;EACD;EACAjB,WAAW,CAACkB,GAAG,EAAC;IACd,IAAIC,GAAE,GAAI,oDAAoD;IAC9D,IAAIA,GAAG,CAACC,IAAI,CAACF,GAAG,MAAM,KAAK,EAAC;MAC1B,OAAO,KAAK;IACd,CAAC,MAAK;MACJ,OAAO,IAAI;IACb;EACF;AACF","names":["data","validatePass","rule","value","callback","Error","console","log","passwdCheck","$refs","ruleForm","validateField","validatePass2","pass","checkPass","rules","validator","trigger","methods","submitForm","formName","validate","valid","alert","resetForm","resetFields","num","reg","test"],"sourceRoot":"","sources":["C:\\Users\\14486\\Desktop\\社区公益系统前端\\vue_community\\src\\components\\personalPage\\changePasswd.vue"],"sourcesContent":["<template>\r\n  <el-form\r\n      :model=\"ruleForm\"\r\n      status-icon\r\n      :rules=\"rules\"\r\n      ref=\"ruleForm\"\r\n      label-width=\"100px\"\r\n      class=\"demo-ruleForm\"\r\n  >\r\n    <el-form-item label=\"密码\" prop=\"pass\">\r\n      <el-input\r\n          type=\"password\"\r\n          v-model=\"ruleForm.pass\"\r\n          autocomplete=\"off\"\r\n      ></el-input>\r\n    </el-form-item>\r\n    <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n      <el-input\r\n          type=\"password\"\r\n          v-model=\"ruleForm.checkPass\"\r\n          autocomplete=\"off\"\r\n      ></el-input>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\r\n      <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'))\r\n        console.log(value)\r\n      }else{\r\n        if (this.passwdCheck(value)) {\r\n          this.$refs.ruleForm.validateField('confirmPass')\r\n          callback()\r\n        }else {\r\n          callback(new Error(\"密码格式不对(数字+密码组合)\"))\r\n        }\r\n      }\r\n    }\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'))\r\n      } else if (value !== this.ruleForm.pass) {\r\n        callback(new Error('两次输入密码不一致!'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      ruleForm: {\r\n        pass: '',\r\n        checkPass: '',\r\n      },\r\n      rules: {\r\n        pass: [{ validator: validatePass, trigger: 'blur' }],\r\n        checkPass: [{ validator: validatePass2, trigger: 'blur' }],\r\n      },\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          alert('submit!')\r\n        } else {\r\n          console.log('error submit!!')\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    },\r\n  },\r\n  //校验密码强度\r\n  passwdCheck(num){\r\n    let reg = /^(?![\\d]+$)(?![a-zA-Z]+$)(?![^\\da-zA-Z]+$).{6,20}$/;\r\n    if (reg.test(num) === false){\r\n      return false;\r\n    }else {\r\n      return true;\r\n    }\r\n  },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}