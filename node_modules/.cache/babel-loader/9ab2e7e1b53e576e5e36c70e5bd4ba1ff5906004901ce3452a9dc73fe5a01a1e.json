{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../../hooks/index.js');\nvar virtualTree = require('./virtual-tree.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar ElNodeContent = vue.defineComponent({\n  name: \"ElTreeNodeContent\",\n  props: virtualTree.treeNodeContentProps,\n  setup(props) {\n    const tree = vue.inject(virtualTree.ROOT_TREE_INJECTION_KEY);\n    const ns = index.useNamespace(\"tree\");\n    return () => {\n      const node = props.node;\n      const {\n        data\n      } = node;\n      return (tree == null ? void 0 : tree.ctx.slots.default) ? tree.ctx.slots.default({\n        node,\n        data\n      }) : vue.h(\"span\", {\n        class: ns.be(\"node\", \"label\")\n      }, [node == null ? void 0 : node.label]);\n    };\n  }\n});\nexports[\"default\"] = ElNodeContent;","map":{"version":3,"mappings":";;;;;;;;;AAGA,oBAAeA,mBAAe,CAAC;EAC7BC,IAAI,EAAE,mBAAmB;EACzBC,KAAK,EAAEC,gCAAoB;EAC3BC,KAAK,CAACF,KAAK,EAAE;IACX,MAAMG,IAAI,GAAGC,UAAM,CAACC,mCAAuB,CAAC;IAC5C,MAAMC,EAAE,GAAGC,kBAAY,CAAC,MAAM,CAAC;IAC/B,OAAO,MAAM;MACX,MAAMC,IAAI,GAAGR,KAAK,CAACQ,IAAI;MACvB,MAAM;QAAEC;MAAI,CAAE,GAAGD,IAAI;MACrB,OAAO,CAACL,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACO,GAAG,CAACC,KAAK,CAACC,OAAO,IAAIT,IAAI,CAACO,GAAG,CAACC,KAAK,CAACC,OAAO,CAAC;QAAEJ,IAAI;QAAEC;MAAI,CAAE,CAAC,GAAGI,KAAC,CAAC,MAAM,EAAE;QAAEC,KAAK,EAAER,EAAE,CAACS,EAAE,CAAC,MAAM,EAAE,OAAO;MAAC,CAAE,EAAE,CAACP,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACQ,KAAK,CAAC,CAAC;IAC3L,CAAK;EACL;AACA,CAAC,CAAC","names":["defineComponent","name","props","treeNodeContentProps","setup","tree","inject","ROOT_TREE_INJECTION_KEY","ns","useNamespace","node","data","ctx","slots","default","h","class","be","label"],"sources":["../../../../../../packages/components/tree-v2/src/tree-node-content.ts"],"sourcesContent":["import { defineComponent, h, inject } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { ROOT_TREE_INJECTION_KEY, treeNodeContentProps } from './virtual-tree'\n\nexport default defineComponent({\n  name: 'ElTreeNodeContent',\n  props: treeNodeContentProps,\n  setup(props) {\n    const tree = inject(ROOT_TREE_INJECTION_KEY)\n    const ns = useNamespace('tree')\n    return () => {\n      const node = props.node\n      const { data } = node!\n      return tree?.ctx.slots.default\n        ? tree.ctx.slots.default({ node, data })\n        : h('span', { class: ns.be('node', 'label') }, [node?.label])\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}