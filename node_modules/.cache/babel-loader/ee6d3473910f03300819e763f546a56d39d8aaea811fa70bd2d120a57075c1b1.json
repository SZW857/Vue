{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar core = require('@vueuse/core');\nrequire('../../../hooks/index.js');\nvar token = require('./token.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nconst _sfc_main = vue.defineComponent({\n  name: \"ElSelectDropdown\",\n  componentName: \"ElSelectDropdown\",\n  setup() {\n    const select = vue.inject(token.selectKey);\n    const ns = index.useNamespace(\"select\");\n    const popperClass = vue.computed(() => select.props.popperClass);\n    const isMultiple = vue.computed(() => select.props.multiple);\n    const isFitInputWidth = vue.computed(() => select.props.fitInputWidth);\n    const minWidth = vue.ref(\"\");\n    function updateMinWidth() {\n      var _a;\n      minWidth.value = `${(_a = select.selectWrapper) == null ? void 0 : _a.offsetWidth}px`;\n    }\n    vue.onMounted(() => {\n      updateMinWidth();\n      core.useResizeObserver(select.selectWrapper, updateMinWidth);\n    });\n    return {\n      ns,\n      minWidth,\n      popperClass,\n      isMultiple,\n      isFitInputWidth\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return vue.openBlock(), vue.createElementBlock(\"div\", {\n    class: vue.normalizeClass([_ctx.ns.b(\"dropdown\"), _ctx.ns.is(\"multiple\", _ctx.isMultiple), _ctx.popperClass]),\n    style: vue.normalizeStyle({\n      [_ctx.isFitInputWidth ? \"width\" : \"minWidth\"]: _ctx.minWidth\n    })\n  }, [vue.renderSlot(_ctx.$slots, \"default\")], 6);\n}\nvar ElSelectMenu = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/select/src/select-dropdown.vue\"]]);\nexports[\"default\"] = ElSelectMenu;","map":{"version":3,"mappings":";;;;;;;;;;;AAeA,MAAKA,YAAaC,mBAAa;EAC7BC,IAAM;EAENC,aAAe;EAEfC,KAAQ;IACA,eAASC,WAAOC,eAAS;IACzB,WAAKC,mBAAa,QAAQ;IAGhC,MAAMC,WAAc,gBAAS,MAAMC,OAAOC,MAAMF,WAAW;IAC3D,MAAMG,UAAa,gBAAS,MAAMF,OAAOC,MAAME,QAAQ;IACvD,MAAMC,eAAkB,gBAAS,MAAMJ,OAAOC,MAAMI,aAAa;IAC3D,iBAAWC,QAAI,EAAE;IAEG;MACf;MACXC;IAEA;IAGiBC;MACGC;MACnBC;IAED,CAAO;IACL;MACAC;MACAJ;MACAR;MACAG;MACFE;IAAA,CACF;EACF;;yBA3CQ;EAJH,oBAAQ,0BAAI;IACZQ,KAAK,0BAAoB,8CAAkC;IAAAC;MAAA;IAAA;KAEpD","names":["_sfc_main","defineComponent","name","componentName","setup","inject","selectKey","useNamespace","popperClass","select","props","isMultiple","multiple","isFitInputWidth","fitInputWidth","ref","minWidth","onMounted","updateMinWidth","useResizeObserver","ns","class","style"],"sources":["../../../../../../packages/components/select/src/select-dropdown.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[ns.b('dropdown'), ns.is('multiple', isMultiple), popperClass]\"\n    :style=\"{ [isFitInputWidth ? 'width' : 'minWidth']: minWidth }\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, onMounted, ref } from 'vue'\nimport { useResizeObserver } from '@vueuse/core'\nimport { useNamespace } from '@element-plus/hooks'\nimport { selectKey } from './token'\n\nexport default defineComponent({\n  name: 'ElSelectDropdown',\n\n  componentName: 'ElSelectDropdown',\n\n  setup() {\n    const select = inject(selectKey)!\n    const ns = useNamespace('select')\n\n    // computed\n    const popperClass = computed(() => select.props.popperClass)\n    const isMultiple = computed(() => select.props.multiple)\n    const isFitInputWidth = computed(() => select.props.fitInputWidth)\n    const minWidth = ref('')\n\n    function updateMinWidth() {\n      minWidth.value = `${select.selectWrapper?.offsetWidth}px`\n    }\n\n    onMounted(() => {\n      // TODO: updatePopper\n      // popper.value.update()\n      updateMinWidth()\n      useResizeObserver(select.selectWrapper, updateMinWidth)\n    })\n\n    return {\n      ns,\n      minWidth,\n      popperClass,\n      isMultiple,\n      isFitInputWidth,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}