{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../../hooks/index.js');\nrequire('../../../utils/index.js');\nvar badge = require('./badge.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar core = require('@vueuse/core');\nconst _hoisted_1 = [\"textContent\"];\nconst __default__ = vue.defineComponent({\n  name: \"ElBadge\"\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: badge.badgeProps,\n  setup(__props, {\n    expose\n  }) {\n    const props = __props;\n    const ns = index.useNamespace(\"badge\");\n    const content = vue.computed(() => {\n      if (props.isDot) return \"\";\n      if (core.isNumber(props.value) && core.isNumber(props.max)) {\n        return props.max < props.value ? `${props.max}+` : `${props.value}`;\n      }\n      return `${props.value}`;\n    });\n    expose({\n      content\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(\"div\", {\n        class: vue.normalizeClass(vue.unref(ns).b())\n      }, [vue.renderSlot(_ctx.$slots, \"default\"), vue.createVNode(vue.Transition, {\n        name: `${vue.unref(ns).namespace.value}-zoom-in-center`,\n        persisted: \"\"\n      }, {\n        default: vue.withCtx(() => [vue.withDirectives(vue.createElementVNode(\"sup\", {\n          class: vue.normalizeClass([vue.unref(ns).e(\"content\"), vue.unref(ns).em(\"content\", _ctx.type), vue.unref(ns).is(\"fixed\", !!_ctx.$slots.default), vue.unref(ns).is(\"dot\", _ctx.isDot)]),\n          textContent: vue.toDisplayString(vue.unref(content))\n        }, null, 10, _hoisted_1), [[vue.vShow, !_ctx.hidden && (vue.unref(content) || _ctx.isDot)]])]),\n        _: 1\n      }, 8, [\"name\"])], 2);\n    };\n  }\n});\nvar Badge = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/badge/src/badge.vue\"]]);\nexports[\"default\"] = Badge;","map":{"version":3,"mappings":";;;;;;;;;;;;;uCAwBc;EACZA,IAAM;AACR;;;;;;;;IAIM,WAAKC,mBAAa,OAAO;IAEzB,gBAAUC,aAAiB,MAAM;MACrC,IAAIC,KAAM,QAAc;MAExB,IAAIC,cAASD,KAAM,MAAK,KAAKC,aAAS,OAAMC,GAAG,CAAG;QACzC,aAAMA,MAAMF,KAAM,SAAQ,GAAGA,KAAM,UAAS,GAAGA,KAAM;MAAA;MAE9D,OAAO,GAAGA,KAAM;IAAA,CACjB;IAEYG;MAEXC;IAAA,CACD","names":["name","useNamespace","computed","props","isNumber","max","expose","content"],"sources":["../../../../../../packages/components/badge/src/badge.vue"],"sourcesContent":["<template>\n  <div :class=\"ns.b()\">\n    <slot />\n    <transition :name=\"`${ns.namespace.value}-zoom-in-center`\">\n      <sup\n        v-show=\"!hidden && (content || isDot)\"\n        :class=\"[\n          ns.e('content'),\n          ns.em('content', type),\n          ns.is('fixed', !!$slots.default),\n          ns.is('dot', isDot),\n        ]\"\n        v-text=\"content\"\n      />\n    </transition>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { isNumber } from '@element-plus/utils'\nimport { badgeProps } from './badge'\n\ndefineOptions({\n  name: 'ElBadge',\n})\n\nconst props = defineProps(badgeProps)\n\nconst ns = useNamespace('badge')\n\nconst content = computed<string>(() => {\n  if (props.isDot) return ''\n\n  if (isNumber(props.value) && isNumber(props.max)) {\n    return props.max < props.value ? `${props.max}+` : `${props.value}`\n  }\n  return `${props.value}`\n})\n\ndefineExpose({\n  /** @description badge content */\n  content,\n})\n</script>\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}