{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar dayjs = require('dayjs');\nvar lodashUnified = require('lodash-unified');\nrequire('../../../../hooks/index.js');\nrequire('../../../../utils/index.js');\nrequire('../../../../constants/index.js');\nvar panelTimeRange = require('../props/panel-time-range.js');\nvar useTimePanel = require('../composables/use-time-panel.js');\nvar useTimePicker = require('../composables/use-time-picker.js');\nvar basicTimeSpinner = require('./basic-time-spinner.js');\nvar pluginVue_exportHelper = require('../../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../../hooks/use-locale/index.js');\nvar index$1 = require('../../../../hooks/use-namespace/index.js');\nvar aria = require('../../../../constants/aria.js');\nvar shared = require('@vue/shared');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);\nconst _hoisted_1 = [\"disabled\"];\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  __name: \"panel-time-range\",\n  props: panelTimeRange.panelTimeRangeProps,\n  emits: [\"pick\", \"select-range\", \"set-picker-option\"],\n  setup(__props, {\n    emit\n  }) {\n    const props = __props;\n    const makeSelectRange = (start, end) => {\n      const result = [];\n      for (let i = start; i <= end; i++) {\n        result.push(i);\n      }\n      return result;\n    };\n    const {\n      t,\n      lang\n    } = index.useLocale();\n    const nsTime = index$1.useNamespace(\"time\");\n    const nsPicker = index$1.useNamespace(\"picker\");\n    const pickerBase = vue.inject(\"EP_PICKER_BASE\");\n    const {\n      arrowControl,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n      defaultValue\n    } = pickerBase.props;\n    const startTime = vue.computed(() => props.parsedValue[0]);\n    const endTime = vue.computed(() => props.parsedValue[1]);\n    const oldValue = useTimePicker.useOldValue(props);\n    const handleCancel = () => {\n      emit(\"pick\", oldValue.value, false);\n    };\n    const showSeconds = vue.computed(() => {\n      return props.format.includes(\"ss\");\n    });\n    const amPmMode = vue.computed(() => {\n      if (props.format.includes(\"A\")) return \"A\";\n      if (props.format.includes(\"a\")) return \"a\";\n      return \"\";\n    });\n    const handleConfirm = (visible = false) => {\n      emit(\"pick\", [startTime.value, endTime.value], visible);\n    };\n    const handleMinChange = date => {\n      handleChange(date.millisecond(0), endTime.value);\n    };\n    const handleMaxChange = date => {\n      handleChange(startTime.value, date.millisecond(0));\n    };\n    const isValidValue = _date => {\n      const parsedDate = _date.map(_ => dayjs__default[\"default\"](_).locale(lang.value));\n      const result = getRangeAvailableTime(parsedDate);\n      return parsedDate[0].isSame(result[0]) && parsedDate[1].isSame(result[1]);\n    };\n    const handleChange = (start, end) => {\n      emit(\"pick\", [start, end], true);\n    };\n    const btnConfirmDisabled = vue.computed(() => {\n      return startTime.value > endTime.value;\n    });\n    const selectionRange = vue.ref([0, 2]);\n    const setMinSelectionRange = (start, end) => {\n      emit(\"select-range\", start, end, \"min\");\n      selectionRange.value = [start, end];\n    };\n    const offset = vue.computed(() => showSeconds.value ? 11 : 8);\n    const setMaxSelectionRange = (start, end) => {\n      emit(\"select-range\", start, end, \"max\");\n      const _offset = vue.unref(offset);\n      selectionRange.value = [start + _offset, end + _offset];\n    };\n    const changeSelectionRange = step => {\n      const list = showSeconds.value ? [0, 3, 6, 11, 14, 17] : [0, 3, 8, 11];\n      const mapping = [\"hours\", \"minutes\"].concat(showSeconds.value ? [\"seconds\"] : []);\n      const index = list.indexOf(selectionRange.value[0]);\n      const next = (index + step + list.length) % list.length;\n      const half = list.length / 2;\n      if (next < half) {\n        timePickerOptions[\"start_emitSelectRange\"](mapping[next]);\n      } else {\n        timePickerOptions[\"end_emitSelectRange\"](mapping[next - half]);\n      }\n    };\n    const handleKeydown = event => {\n      const code = event.code;\n      const {\n        left,\n        right,\n        up,\n        down\n      } = aria.EVENT_CODE;\n      if ([left, right].includes(code)) {\n        const step = code === left ? -1 : 1;\n        changeSelectionRange(step);\n        event.preventDefault();\n        return;\n      }\n      if ([up, down].includes(code)) {\n        const step = code === up ? -1 : 1;\n        const role = selectionRange.value[0] < offset.value ? \"start\" : \"end\";\n        timePickerOptions[`${role}_scrollDown`](step);\n        event.preventDefault();\n        return;\n      }\n    };\n    const disabledHours_ = (role, compare) => {\n      const defaultDisable = disabledHours ? disabledHours(role) : [];\n      const isStart = role === \"start\";\n      const compareDate = compare || (isStart ? endTime.value : startTime.value);\n      const compareHour = compareDate.hour();\n      const nextDisable = isStart ? makeSelectRange(compareHour + 1, 23) : makeSelectRange(0, compareHour - 1);\n      return lodashUnified.union(defaultDisable, nextDisable);\n    };\n    const disabledMinutes_ = (hour, role, compare) => {\n      const defaultDisable = disabledMinutes ? disabledMinutes(hour, role) : [];\n      const isStart = role === \"start\";\n      const compareDate = compare || (isStart ? endTime.value : startTime.value);\n      const compareHour = compareDate.hour();\n      if (hour !== compareHour) {\n        return defaultDisable;\n      }\n      const compareMinute = compareDate.minute();\n      const nextDisable = isStart ? makeSelectRange(compareMinute + 1, 59) : makeSelectRange(0, compareMinute - 1);\n      return lodashUnified.union(defaultDisable, nextDisable);\n    };\n    const disabledSeconds_ = (hour, minute, role, compare) => {\n      const defaultDisable = disabledSeconds ? disabledSeconds(hour, minute, role) : [];\n      const isStart = role === \"start\";\n      const compareDate = compare || (isStart ? endTime.value : startTime.value);\n      const compareHour = compareDate.hour();\n      const compareMinute = compareDate.minute();\n      if (hour !== compareHour || minute !== compareMinute) {\n        return defaultDisable;\n      }\n      const compareSecond = compareDate.second();\n      const nextDisable = isStart ? makeSelectRange(compareSecond + 1, 59) : makeSelectRange(0, compareSecond - 1);\n      return lodashUnified.union(defaultDisable, nextDisable);\n    };\n    const getRangeAvailableTime = ([start, end]) => {\n      return [getAvailableTime(start, \"start\", true, end), getAvailableTime(end, \"end\", false, start)];\n    };\n    const {\n      getAvailableHours,\n      getAvailableMinutes,\n      getAvailableSeconds\n    } = useTimePicker.buildAvailableTimeSlotGetter(disabledHours_, disabledMinutes_, disabledSeconds_);\n    const {\n      timePickerOptions,\n      getAvailableTime,\n      onSetOption\n    } = useTimePanel.useTimePanel({\n      getAvailableHours,\n      getAvailableMinutes,\n      getAvailableSeconds\n    });\n    const parseUserInput = days => {\n      if (!days) return null;\n      if (shared.isArray(days)) {\n        return days.map(d => dayjs__default[\"default\"](d, props.format).locale(lang.value));\n      }\n      return dayjs__default[\"default\"](days, props.format).locale(lang.value);\n    };\n    const formatToString = days => {\n      if (!days) return null;\n      if (shared.isArray(days)) {\n        return days.map(d => d.format(props.format));\n      }\n      return days.format(props.format);\n    };\n    const getDefaultValue = () => {\n      if (shared.isArray(defaultValue)) {\n        return defaultValue.map(d => dayjs__default[\"default\"](d).locale(lang.value));\n      }\n      const defaultDay = dayjs__default[\"default\"](defaultValue).locale(lang.value);\n      return [defaultDay, defaultDay.add(60, \"m\")];\n    };\n    emit(\"set-picker-option\", [\"formatToString\", formatToString]);\n    emit(\"set-picker-option\", [\"parseUserInput\", parseUserInput]);\n    emit(\"set-picker-option\", [\"isValidValue\", isValidValue]);\n    emit(\"set-picker-option\", [\"handleKeydownInput\", handleKeydown]);\n    emit(\"set-picker-option\", [\"getDefaultValue\", getDefaultValue]);\n    emit(\"set-picker-option\", [\"getRangeAvailableTime\", getRangeAvailableTime]);\n    return (_ctx, _cache) => {\n      return _ctx.actualVisible ? (vue.openBlock(), vue.createElementBlock(\"div\", {\n        key: 0,\n        class: vue.normalizeClass([vue.unref(nsTime).b(\"range-picker\"), vue.unref(nsPicker).b(\"panel\")])\n      }, [vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(nsTime).be(\"range-picker\", \"content\"))\n      }, [vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(nsTime).be(\"range-picker\", \"cell\"))\n      }, [vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(nsTime).be(\"range-picker\", \"header\"))\n      }, vue.toDisplayString(vue.unref(t)(\"el.datepicker.startTime\")), 3), vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass([vue.unref(nsTime).be(\"range-picker\", \"body\"), vue.unref(nsTime).be(\"panel\", \"content\"), vue.unref(nsTime).is(\"arrow\", vue.unref(arrowControl)), {\n          \"has-seconds\": vue.unref(showSeconds)\n        }])\n      }, [vue.createVNode(basicTimeSpinner[\"default\"], {\n        ref: \"minSpinner\",\n        role: \"start\",\n        \"show-seconds\": vue.unref(showSeconds),\n        \"am-pm-mode\": vue.unref(amPmMode),\n        \"arrow-control\": vue.unref(arrowControl),\n        \"spinner-date\": vue.unref(startTime),\n        \"disabled-hours\": disabledHours_,\n        \"disabled-minutes\": disabledMinutes_,\n        \"disabled-seconds\": disabledSeconds_,\n        onChange: handleMinChange,\n        onSetOption: vue.unref(onSetOption),\n        onSelectRange: setMinSelectionRange\n      }, null, 8, [\"show-seconds\", \"am-pm-mode\", \"arrow-control\", \"spinner-date\", \"onSetOption\"])], 2)], 2), vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(nsTime).be(\"range-picker\", \"cell\"))\n      }, [vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(nsTime).be(\"range-picker\", \"header\"))\n      }, vue.toDisplayString(vue.unref(t)(\"el.datepicker.endTime\")), 3), vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass([vue.unref(nsTime).be(\"range-picker\", \"body\"), vue.unref(nsTime).be(\"panel\", \"content\"), vue.unref(nsTime).is(\"arrow\", vue.unref(arrowControl)), {\n          \"has-seconds\": vue.unref(showSeconds)\n        }])\n      }, [vue.createVNode(basicTimeSpinner[\"default\"], {\n        ref: \"maxSpinner\",\n        role: \"end\",\n        \"show-seconds\": vue.unref(showSeconds),\n        \"am-pm-mode\": vue.unref(amPmMode),\n        \"arrow-control\": vue.unref(arrowControl),\n        \"spinner-date\": vue.unref(endTime),\n        \"disabled-hours\": disabledHours_,\n        \"disabled-minutes\": disabledMinutes_,\n        \"disabled-seconds\": disabledSeconds_,\n        onChange: handleMaxChange,\n        onSetOption: vue.unref(onSetOption),\n        onSelectRange: setMaxSelectionRange\n      }, null, 8, [\"show-seconds\", \"am-pm-mode\", \"arrow-control\", \"spinner-date\", \"onSetOption\"])], 2)], 2)], 2), vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(nsTime).be(\"panel\", \"footer\"))\n      }, [vue.createElementVNode(\"button\", {\n        type: \"button\",\n        class: vue.normalizeClass([vue.unref(nsTime).be(\"panel\", \"btn\"), \"cancel\"]),\n        onClick: _cache[0] || (_cache[0] = $event => handleCancel())\n      }, vue.toDisplayString(vue.unref(t)(\"el.datepicker.cancel\")), 3), vue.createElementVNode(\"button\", {\n        type: \"button\",\n        class: vue.normalizeClass([vue.unref(nsTime).be(\"panel\", \"btn\"), \"confirm\"]),\n        disabled: vue.unref(btnConfirmDisabled),\n        onClick: _cache[1] || (_cache[1] = $event => handleConfirm())\n      }, vue.toDisplayString(vue.unref(t)(\"el.datepicker.confirm\")), 11, _hoisted_1)], 2)], 2)) : vue.createCommentVNode(\"v-if\", true);\n    };\n  }\n});\nvar TimeRangePanel = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/time-picker-com/panel-time-range.vue\"]]);\nexports[\"default\"] = TimeRangePanel;","map":{"version":3,"mappings":"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","names":["start","end","result","i","push","t","lang","useLocale","useNamespace","inject","arrowControl","disabledHours","disabledMinutes","disabledSeconds","defaultValue","pickerBase","startTime","props","parsedValue","endTime","useOldValue","handleCancel","emit","oldValue","computed","format","visible","value","date","handleChange","_date","_","dayjs","getRangeAvailableTime","parsedDate","isSame","selectionRange","offset","showSeconds","unref","_offset","step","list","mapping","index","indexOf","next","length","half","timePickerOptions","event","code","left","right","up","down","changeSelectionRange","preventDefault","role","compare","defaultDisable","isStart","compareDate","hour","compareHour","nextDisable","disabledMinutes_","minute","compareMinute","disabledSeconds_","second","compareSecond","getAvailableTime","getAvailableHours","getAvailableMinutes","getAvailableSeconds","buildAvailableTimeSlotGetter","onSetOption","useTimePanel","days","d","map","getDefaultValue","defaultDay","add"],"sources":["../../../../../../../packages/components/time-picker/src/time-picker-com/panel-time-range.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"actualVisible\"\n    :class=\"[nsTime.b('range-picker'), nsPicker.b('panel')]\"\n  >\n    <div :class=\"nsTime.be('range-picker', 'content')\">\n      <div :class=\"nsTime.be('range-picker', 'cell')\">\n        <div :class=\"nsTime.be('range-picker', 'header')\">\n          {{ t('el.datepicker.startTime') }}\n        </div>\n        <div\n          :class=\"[\n            nsTime.be('range-picker', 'body'),\n            nsTime.be('panel', 'content'),\n            nsTime.is('arrow', arrowControl),\n            { 'has-seconds': showSeconds },\n          ]\"\n        >\n          <time-spinner\n            ref=\"minSpinner\"\n            role=\"start\"\n            :show-seconds=\"showSeconds\"\n            :am-pm-mode=\"amPmMode\"\n            :arrow-control=\"arrowControl\"\n            :spinner-date=\"startTime\"\n            :disabled-hours=\"disabledHours_\"\n            :disabled-minutes=\"disabledMinutes_\"\n            :disabled-seconds=\"disabledSeconds_\"\n            @change=\"handleMinChange\"\n            @set-option=\"onSetOption\"\n            @select-range=\"setMinSelectionRange\"\n          />\n        </div>\n      </div>\n      <div :class=\"nsTime.be('range-picker', 'cell')\">\n        <div :class=\"nsTime.be('range-picker', 'header')\">\n          {{ t('el.datepicker.endTime') }}\n        </div>\n        <div\n          :class=\"[\n            nsTime.be('range-picker', 'body'),\n            nsTime.be('panel', 'content'),\n            nsTime.is('arrow', arrowControl),\n            { 'has-seconds': showSeconds },\n          ]\"\n        >\n          <time-spinner\n            ref=\"maxSpinner\"\n            role=\"end\"\n            :show-seconds=\"showSeconds\"\n            :am-pm-mode=\"amPmMode\"\n            :arrow-control=\"arrowControl\"\n            :spinner-date=\"endTime\"\n            :disabled-hours=\"disabledHours_\"\n            :disabled-minutes=\"disabledMinutes_\"\n            :disabled-seconds=\"disabledSeconds_\"\n            @change=\"handleMaxChange\"\n            @set-option=\"onSetOption\"\n            @select-range=\"setMaxSelectionRange\"\n          />\n        </div>\n      </div>\n    </div>\n    <div :class=\"nsTime.be('panel', 'footer')\">\n      <button\n        type=\"button\"\n        :class=\"[nsTime.be('panel', 'btn'), 'cancel']\"\n        @click=\"handleCancel()\"\n      >\n        {{ t('el.datepicker.cancel') }}\n      </button>\n      <button\n        type=\"button\"\n        :class=\"[nsTime.be('panel', 'btn'), 'confirm']\"\n        :disabled=\"btnConfirmDisabled\"\n        @click=\"handleConfirm()\"\n      >\n        {{ t('el.datepicker.confirm') }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject, ref, unref } from 'vue'\nimport dayjs from 'dayjs'\nimport { union } from 'lodash-unified'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { isArray } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { panelTimeRangeProps } from '../props/panel-time-range'\nimport { useTimePanel } from '../composables/use-time-panel'\nimport {\n  buildAvailableTimeSlotGetter,\n  useOldValue,\n} from '../composables/use-time-picker'\nimport TimeSpinner from './basic-time-spinner.vue'\n\nimport type { Dayjs } from 'dayjs'\n\nconst props = defineProps(panelTimeRangeProps)\nconst emit = defineEmits(['pick', 'select-range', 'set-picker-option'])\n\nconst makeSelectRange = (start: number, end: number) => {\n  const result: number[] = []\n  for (let i = start; i <= end; i++) {\n    result.push(i)\n  }\n  return result\n}\n\nconst { t, lang } = useLocale()\nconst nsTime = useNamespace('time')\nconst nsPicker = useNamespace('picker')\nconst pickerBase = inject('EP_PICKER_BASE') as any\nconst {\n  arrowControl,\n  disabledHours,\n  disabledMinutes,\n  disabledSeconds,\n  defaultValue,\n} = pickerBase.props\n\nconst startTime = computed(() => props.parsedValue![0])\nconst endTime = computed(() => props.parsedValue![1])\nconst oldValue = useOldValue(props)\nconst handleCancel = () => {\n  emit('pick', oldValue.value, false)\n}\nconst showSeconds = computed(() => {\n  return props.format.includes('ss')\n})\nconst amPmMode = computed(() => {\n  if (props.format.includes('A')) return 'A'\n  if (props.format.includes('a')) return 'a'\n  return ''\n})\n\nconst handleConfirm = (visible = false) => {\n  emit('pick', [startTime.value, endTime.value], visible)\n}\n\nconst handleMinChange = (date: Dayjs) => {\n  handleChange(date.millisecond(0), endTime.value)\n}\nconst handleMaxChange = (date: Dayjs) => {\n  handleChange(startTime.value, date.millisecond(0))\n}\n\nconst isValidValue = (_date: Dayjs[]) => {\n  const parsedDate = _date.map((_) => dayjs(_).locale(lang.value))\n  const result = getRangeAvailableTime(parsedDate)\n  return parsedDate[0].isSame(result[0]) && parsedDate[1].isSame(result[1])\n}\n\nconst handleChange = (start: Dayjs, end: Dayjs) => {\n  // todo getRangeAvailableTime(_date).millisecond(0)\n  emit('pick', [start, end], true)\n}\nconst btnConfirmDisabled = computed(() => {\n  return startTime.value > endTime.value\n})\n\nconst selectionRange = ref([0, 2])\nconst setMinSelectionRange = (start: number, end: number) => {\n  emit('select-range', start, end, 'min')\n  selectionRange.value = [start, end]\n}\n\nconst offset = computed(() => (showSeconds.value ? 11 : 8))\nconst setMaxSelectionRange = (start: number, end: number) => {\n  emit('select-range', start, end, 'max')\n  const _offset = unref(offset)\n  selectionRange.value = [start + _offset, end + _offset]\n}\n\nconst changeSelectionRange = (step: number) => {\n  const list = showSeconds.value ? [0, 3, 6, 11, 14, 17] : [0, 3, 8, 11]\n  const mapping = ['hours', 'minutes'].concat(\n    showSeconds.value ? ['seconds'] : []\n  )\n  const index = list.indexOf(selectionRange.value[0])\n  const next = (index + step + list.length) % list.length\n  const half = list.length / 2\n  if (next < half) {\n    timePickerOptions['start_emitSelectRange'](mapping[next])\n  } else {\n    timePickerOptions['end_emitSelectRange'](mapping[next - half])\n  }\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  const code = event.code\n\n  const { left, right, up, down } = EVENT_CODE\n\n  if ([left, right].includes(code)) {\n    const step = code === left ? -1 : 1\n    changeSelectionRange(step)\n    event.preventDefault()\n    return\n  }\n\n  if ([up, down].includes(code)) {\n    const step = code === up ? -1 : 1\n    const role = selectionRange.value[0] < offset.value ? 'start' : 'end'\n    timePickerOptions[`${role}_scrollDown`](step)\n    event.preventDefault()\n    return\n  }\n}\n\nconst disabledHours_ = (role: string, compare?: Dayjs) => {\n  const defaultDisable = disabledHours ? disabledHours(role) : []\n  const isStart = role === 'start'\n  const compareDate = compare || (isStart ? endTime.value : startTime.value)\n  const compareHour = compareDate.hour()\n  const nextDisable = isStart\n    ? makeSelectRange(compareHour + 1, 23)\n    : makeSelectRange(0, compareHour - 1)\n  return union(defaultDisable, nextDisable)\n}\nconst disabledMinutes_ = (hour: number, role: string, compare?: Dayjs) => {\n  const defaultDisable = disabledMinutes ? disabledMinutes(hour, role) : []\n  const isStart = role === 'start'\n  const compareDate = compare || (isStart ? endTime.value : startTime.value)\n  const compareHour = compareDate.hour()\n  if (hour !== compareHour) {\n    return defaultDisable\n  }\n  const compareMinute = compareDate.minute()\n  const nextDisable = isStart\n    ? makeSelectRange(compareMinute + 1, 59)\n    : makeSelectRange(0, compareMinute - 1)\n  return union(defaultDisable, nextDisable)\n}\nconst disabledSeconds_ = (\n  hour: number,\n  minute: number,\n  role: string,\n  compare?: Dayjs\n) => {\n  const defaultDisable = disabledSeconds\n    ? disabledSeconds(hour, minute, role)\n    : []\n  const isStart = role === 'start'\n  const compareDate = compare || (isStart ? endTime.value : startTime.value)\n  const compareHour = compareDate.hour()\n  const compareMinute = compareDate.minute()\n  if (hour !== compareHour || minute !== compareMinute) {\n    return defaultDisable\n  }\n  const compareSecond = compareDate.second()\n  const nextDisable = isStart\n    ? makeSelectRange(compareSecond + 1, 59)\n    : makeSelectRange(0, compareSecond - 1)\n  return union(defaultDisable, nextDisable)\n}\n\nconst getRangeAvailableTime = ([start, end]: Array<Dayjs>) => {\n  return [\n    getAvailableTime(start, 'start', true, end),\n    getAvailableTime(end, 'end', false, start),\n  ] as const\n}\n\nconst { getAvailableHours, getAvailableMinutes, getAvailableSeconds } =\n  buildAvailableTimeSlotGetter(\n    disabledHours_,\n    disabledMinutes_,\n    disabledSeconds_\n  )\n\nconst {\n  timePickerOptions,\n\n  getAvailableTime,\n  onSetOption,\n} = useTimePanel({\n  getAvailableHours,\n  getAvailableMinutes,\n  getAvailableSeconds,\n})\n\nconst parseUserInput = (days: Dayjs[] | Dayjs) => {\n  if (!days) return null\n  if (isArray(days)) {\n    return days.map((d) => dayjs(d, props.format).locale(lang.value))\n  }\n  return dayjs(days, props.format).locale(lang.value)\n}\n\nconst formatToString = (days: Dayjs[] | Dayjs) => {\n  if (!days) return null\n  if (isArray(days)) {\n    return days.map((d) => d.format(props.format))\n  }\n  return days.format(props.format)\n}\n\nconst getDefaultValue = () => {\n  if (isArray(defaultValue)) {\n    return defaultValue.map((d: Date) => dayjs(d).locale(lang.value))\n  }\n  const defaultDay = dayjs(defaultValue).locale(lang.value)\n  return [defaultDay, defaultDay.add(60, 'm')]\n}\n\nemit('set-picker-option', ['formatToString', formatToString])\nemit('set-picker-option', ['parseUserInput', parseUserInput])\nemit('set-picker-option', ['isValidValue', isValidValue])\nemit('set-picker-option', ['handleKeydownInput', handleKeydown])\nemit('set-picker-option', ['getDefaultValue', getDefaultValue])\nemit('set-picker-option', ['getRangeAvailableTime', getRangeAvailableTime])\n</script>\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}