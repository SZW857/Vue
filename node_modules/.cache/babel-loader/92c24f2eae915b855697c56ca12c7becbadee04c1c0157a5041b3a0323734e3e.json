{"ast":null,"code":"'use strict';\n\nconst opts = require('./option-manager').options;\nconst randomInt = function (min, max) {\n  return Math.round(min + Math.random() * (max - min));\n};\nconst stripCharsFromString = function (string, chars) {\n  return string.split('').filter(char => chars.indexOf(char) === -1);\n};\nexports.int = randomInt;\nexports.greyColor = function (min, max) {\n  min = min || 1;\n  max = max || 9;\n  const int = randomInt(min, max).toString(16);\n  return `#${int}${int}${int}`;\n};\nexports.captchaText = function (options) {\n  if (typeof options === 'number') {\n    options = {\n      size: options\n    };\n  }\n  options = options || {};\n  const size = options.size || 4;\n  const ignoreChars = options.ignoreChars || '';\n  let i = -1;\n  let out = '';\n  let chars = options.charPreset || opts.charPreset;\n  if (ignoreChars) {\n    chars = stripCharsFromString(chars, ignoreChars);\n  }\n  const len = chars.length - 1;\n  while (++i < size) {\n    out += chars[randomInt(0, len)];\n  }\n  return out;\n};\nconst mathExprPlus = function (leftNumber, rightNumber) {\n  const text = (leftNumber + rightNumber).toString();\n  const equation = leftNumber + '+' + rightNumber;\n  return {\n    text,\n    equation\n  };\n};\nconst mathExprMinus = function (leftNumber, rightNumber) {\n  const text = (leftNumber - rightNumber).toString();\n  const equation = leftNumber + '-' + rightNumber;\n  return {\n    text,\n    equation\n  };\n};\n\n/**\r\n * Creates a simple math expression using either the + or - operator\r\n * @param {number} [min] - The min value of the math expression defaults to 1\r\n * @param {number} [max] - The max value of the math expression defaults to 9\r\n * @param {string} [operator] - The operator(s) to use\r\n * @returns {{equation: string, text: string}}\r\n */\nexports.mathExpr = function (min, max, operator) {\n  min = min || 1;\n  max = max || 9;\n  operator = operator || '+';\n  const left = randomInt(min, max);\n  const right = randomInt(min, max);\n  switch (operator) {\n    case '+':\n      return mathExprPlus(left, right);\n    case '-':\n      return mathExprMinus(left, right);\n    default:\n      return randomInt(1, 2) % 2 ? mathExprPlus(left, right) : mathExprMinus(left, right);\n  }\n};\n\n// https://github.com/jquery/jquery-color/blob/master/jquery.color.js#L432\n// The idea here is generate color in hsl first and convert that to rgb color\nexports.color = function (bgColor) {\n  // Random 24 colors\n  // or based on step\n  const hue = randomInt(0, 24) / 24;\n  const saturation = randomInt(60, 80) / 100;\n  const bgLightness = bgColor ? getLightness(bgColor) : 1.0;\n  let minLightness;\n  let maxLightness;\n  if (bgLightness >= 0.5) {\n    minLightness = Math.round(bgLightness * 100) - 45;\n    maxLightness = Math.round(bgLightness * 100) - 25;\n  } else {\n    minLightness = Math.round(bgLightness * 100) + 25;\n    maxLightness = Math.round(bgLightness * 100) + 45;\n  }\n  const lightness = randomInt(minLightness, maxLightness) / 100;\n  const q = lightness < 0.5 ? lightness * (lightness + saturation) : lightness + saturation - lightness * saturation;\n  const p = 2 * lightness - q;\n  const r = Math.floor(hue2rgb(p, q, hue + 1 / 3) * 255);\n  const g = Math.floor(hue2rgb(p, q, hue) * 255);\n  const b = Math.floor(hue2rgb(p, q, hue - 1 / 3) * 255);\n  /* eslint-disable no-mixed-operators */\n  const c = (b | g << 8 | r << 16 | 1 << 24).toString(16).slice(1);\n  return '#' + c;\n};\nfunction getLightness(rgbColor) {\n  if (rgbColor[0] !== '#') {\n    return 1.0; // Invalid color ?\n  }\n\n  rgbColor = rgbColor.slice(1);\n  if (rgbColor.length === 3) {\n    rgbColor = rgbColor[0] + rgbColor[0] + rgbColor[1] + rgbColor[1] + rgbColor[2] + rgbColor[2];\n  }\n  const hexColor = parseInt(rgbColor, 16);\n  const r = hexColor >> 16;\n  const g = hexColor >> 8 & 255;\n  const b = hexColor & 255;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  return (max + min) / (2 * 255);\n}\nfunction hue2rgb(p, q, h) {\n  h = (h + 1) % 1;\n  if (h * 6 < 1) {\n    return p + (q - p) * h * 6;\n  }\n  if (h * 2 < 1) {\n    return q;\n  }\n  if (h * 3 < 2) {\n    return p + (q - p) * (2 / 3 - h) * 6;\n  }\n  return p;\n}","map":{"version":3,"names":["opts","require","options","randomInt","min","max","Math","round","random","stripCharsFromString","string","chars","split","filter","char","indexOf","exports","int","greyColor","toString","captchaText","size","ignoreChars","i","out","charPreset","len","length","mathExprPlus","leftNumber","rightNumber","text","equation","mathExprMinus","mathExpr","operator","left","right","color","bgColor","hue","saturation","bgLightness","getLightness","minLightness","maxLightness","lightness","q","p","r","floor","hue2rgb","g","b","c","slice","rgbColor","hexColor","parseInt","h"],"sources":["C:/Users/14486/Desktop/社区公益系统前端/vue_community/node_modules/_svg-captcha@1.4.0@svg-captcha/lib/random.js"],"sourcesContent":["'use strict';\r\nconst opts = require('./option-manager').options;\r\n\r\nconst randomInt = function (min, max) {\r\n\treturn Math.round(min + (Math.random() * (max - min)));\r\n};\r\n\r\nconst stripCharsFromString = function (string, chars) {\r\n\treturn string.split('').filter(char => chars.indexOf(char) === -1);\r\n};\r\n\r\nexports.int = randomInt;\r\n\r\nexports.greyColor = function (min, max) {\r\n\tmin = min || 1;\r\n\tmax = max || 9;\r\n\tconst int = randomInt(min, max).toString(16);\r\n\r\n\treturn `#${int}${int}${int}`;\r\n};\r\n\r\nexports.captchaText = function (options) {\r\n\tif (typeof options === 'number') {\r\n\t\toptions = {size: options};\r\n\t}\r\n\toptions = options || {};\r\n\r\n\tconst size = options.size || 4;\r\n\tconst ignoreChars = options.ignoreChars || '';\r\n\tlet i = -1;\r\n\tlet out = '';\r\n\tlet chars = options.charPreset || opts.charPreset;\r\n\r\n\tif (ignoreChars) {\r\n\t\tchars = stripCharsFromString(chars, ignoreChars);\r\n\t}\r\n\r\n\tconst len = chars.length - 1;\r\n\r\n\twhile (++i < size) {\r\n\t\tout += chars[randomInt(0, len)];\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\nconst mathExprPlus = function(leftNumber, rightNumber){\r\n\tconst text = (leftNumber + rightNumber).toString();\r\n\tconst equation = leftNumber + '+' + rightNumber;\r\n\treturn {text, equation}\r\n}\r\n\r\nconst mathExprMinus = function(leftNumber, rightNumber){\r\n\tconst text = (leftNumber - rightNumber).toString();\r\n\tconst equation = leftNumber + '-' + rightNumber;\r\n\treturn {text, equation}\r\n}\r\n\r\n/**\r\n * Creates a simple math expression using either the + or - operator\r\n * @param {number} [min] - The min value of the math expression defaults to 1\r\n * @param {number} [max] - The max value of the math expression defaults to 9\r\n * @param {string} [operator] - The operator(s) to use\r\n * @returns {{equation: string, text: string}}\r\n */\r\nexports.mathExpr = function (min, max, operator) {\r\n\tmin = min || 1;\r\n\tmax = max || 9;\r\n\toperator = operator || '+';\r\n\tconst left = randomInt(min, max);\r\n\tconst right = randomInt(min, max);\r\n\tswitch(operator){\r\n\t\tcase '+':\r\n\t\t\treturn mathExprPlus(left, right)\r\n\t\tcase '-':\r\n\t\t\treturn mathExprMinus(left, right)\r\n\t\tdefault:\r\n\t\t\treturn (randomInt(1, 2) % 2) ? mathExprPlus(left, right) : mathExprMinus(left, right);\r\n\t}\r\n};\r\n\r\n// https://github.com/jquery/jquery-color/blob/master/jquery.color.js#L432\r\n// The idea here is generate color in hsl first and convert that to rgb color\r\nexports.color = function (bgColor) {\r\n\t// Random 24 colors\r\n\t// or based on step\r\n\tconst hue = randomInt(0, 24) / 24;\r\n\r\n\tconst saturation = randomInt(60, 80) / 100;\r\n\tconst bgLightness = bgColor ? getLightness(bgColor) : 1.0;\r\n\tlet minLightness;\r\n\tlet maxLightness;\r\n\tif (bgLightness >= 0.5) {\r\n\t\tminLightness = Math.round(bgLightness * 100) - 45;\r\n\t\tmaxLightness = Math.round(bgLightness * 100) - 25;\r\n\t} else {\r\n\t\tminLightness = Math.round(bgLightness * 100) + 25;\r\n\t\tmaxLightness = Math.round(bgLightness * 100) + 45;\r\n\t}\r\n\tconst lightness = randomInt(minLightness, maxLightness) / 100;\r\n\r\n\tconst q = lightness < 0.5 ?\r\n\t\tlightness * (lightness + saturation) :\r\n\t\tlightness + saturation - (lightness * saturation);\r\n\tconst p = (2 * lightness) - q;\r\n\r\n\tconst r = Math.floor(hue2rgb(p, q, hue + (1 / 3)) * 255);\r\n\tconst g = Math.floor(hue2rgb(p, q, hue) * 255);\r\n\tconst b = Math.floor(hue2rgb(p, q, hue - (1 / 3)) * 255);\r\n\t/* eslint-disable no-mixed-operators */\r\n\tconst c = ((b | g << 8 | r << 16) | 1 << 24).toString(16).slice(1);\r\n\r\n\treturn '#' + c;\r\n};\r\n\r\nfunction getLightness(rgbColor) {\r\n\tif (rgbColor[0] !== '#') {\r\n\t\treturn 1.0; // Invalid color ?\r\n\t}\r\n\trgbColor = rgbColor.slice(1);\r\n\tif (rgbColor.length === 3) {\r\n\t\trgbColor = rgbColor[0] + rgbColor[0] +\r\n\t\t\trgbColor[1] + rgbColor[1] + rgbColor[2] + rgbColor[2];\r\n\t}\r\n\r\n\tconst hexColor = parseInt(rgbColor, 16);\r\n\tconst r = hexColor >> 16;\r\n\tconst g = hexColor >> 8 & 255;\r\n\tconst b = hexColor & 255;\r\n\tconst max = Math.max(r, g, b);\r\n\tconst min = Math.min(r, g, b);\r\n\r\n\treturn (max + min) / (2 * 255);\r\n}\r\n\r\nfunction hue2rgb(p, q, h) {\r\n\th = (h + 1) % 1;\r\n\tif (h * 6 < 1) {\r\n\t\treturn p + (q - p) * h * 6;\r\n\t}\r\n\tif (h * 2 < 1) {\r\n\t\treturn q;\r\n\t}\r\n\tif (h * 3 < 2) {\r\n\t\treturn p + (q - p) * ((2 / 3) - h) * 6;\r\n\t}\r\n\treturn p;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}