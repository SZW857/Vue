{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar transfer = require('../transfer.js');\nconst useCheckedChange = (checkedState, emit) => {\n  const onSourceCheckedChange = (val, movedKeys) => {\n    checkedState.leftChecked = val;\n    if (!movedKeys) return;\n    emit(transfer.LEFT_CHECK_CHANGE_EVENT, val, movedKeys);\n  };\n  const onTargetCheckedChange = (val, movedKeys) => {\n    checkedState.rightChecked = val;\n    if (!movedKeys) return;\n    emit(transfer.RIGHT_CHECK_CHANGE_EVENT, val, movedKeys);\n  };\n  return {\n    onSourceCheckedChange,\n    onTargetCheckedChange\n  };\n};\nexports.useCheckedChange = useCheckedChange;","map":{"version":3,"mappings":";;;;;;AACY,MAACA,gBAAgB,GAAG,CAACC,YAAY,EAAEC,IAAI,KAAK;EACtD,MAAMC,qBAAqB,GAAG,CAACC,GAAG,EAAEC,SAAS,KAAK;IAChDJ,YAAY,CAACK,WAAW,GAAGF,GAAG;IAC9B,IAAI,CAACC,SAAS,EACZ;IACFH,IAAI,CAACK,gCAAuB,EAAEH,GAAG,EAAEC,SAAS,CAAC;EACjD,CAAG;EACD,MAAMG,qBAAqB,GAAG,CAACJ,GAAG,EAAEC,SAAS,KAAK;IAChDJ,YAAY,CAACQ,YAAY,GAAGL,GAAG;IAC/B,IAAI,CAACC,SAAS,EACZ;IACFH,IAAI,CAACQ,iCAAwB,EAAEN,GAAG,EAAEC,SAAS,CAAC;EAClD,CAAG;EACD,OAAO;IACLF,qBAAqB;IACrBK;EACJ,CAAG;AACH","names":["useCheckedChange","checkedState","emit","onSourceCheckedChange","val","movedKeys","leftChecked","LEFT_CHECK_CHANGE_EVENT","onTargetCheckedChange","rightChecked","RIGHT_CHECK_CHANGE_EVENT"],"sources":["../../../../../../../packages/components/transfer/src/composables/use-checked-change.ts"],"sourcesContent":["import { LEFT_CHECK_CHANGE_EVENT, RIGHT_CHECK_CHANGE_EVENT } from '../transfer'\n\nimport type { SetupContext } from 'vue'\nimport type {\n  TransferCheckedState,\n  TransferEmits,\n  TransferKey,\n} from '../transfer'\n\nexport const useCheckedChange = (\n  checkedState: TransferCheckedState,\n  emit: SetupContext<TransferEmits>['emit']\n) => {\n  const onSourceCheckedChange = (\n    val: TransferKey[],\n    movedKeys?: TransferKey[]\n  ) => {\n    checkedState.leftChecked = val\n    if (!movedKeys) return\n    emit(LEFT_CHECK_CHANGE_EVENT, val, movedKeys)\n  }\n\n  const onTargetCheckedChange = (\n    val: TransferKey[],\n    movedKeys?: TransferKey[]\n  ) => {\n    checkedState.rightChecked = val\n    if (!movedKeys) return\n    emit(RIGHT_CHECK_CHANGE_EVENT, val, movedKeys)\n  }\n\n  return {\n    onSourceCheckedChange,\n    onTargetCheckedChange,\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}