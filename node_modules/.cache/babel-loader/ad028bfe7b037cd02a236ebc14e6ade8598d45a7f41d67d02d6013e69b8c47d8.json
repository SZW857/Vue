{"ast":null,"code":"export default {\n  name: 'SIdentify',\n  props: {\n    identifyCode: {\n      // 默认注册码\n      type: String,\n      default: '1234'\n    },\n    fontSizeMin: {\n      // 字体最小值\n      type: Number,\n      default: 25\n    },\n    fontSizeMax: {\n      // 字体最大值\n      type: Number,\n      default: 35\n    },\n    backgroundColorMin: {\n      // 验证码图片背景色最小值\n      type: Number,\n      default: 200\n    },\n    backgroundColorMax: {\n      // 验证码图片背景色最大值\n      type: Number,\n      default: 220\n    },\n    dotColorMin: {\n      // 背景干扰点最小值\n      type: Number,\n      default: 60\n    },\n    dotColorMax: {\n      // 背景干扰点最大值\n      type: Number,\n      default: 120\n    },\n    contentWidth: {\n      // 容器宽度\n      type: Number,\n      default: 90\n    },\n    contentHeight: {\n      // 容器高度\n      type: Number,\n      default: 38\n    }\n  },\n  methods: {\n    // 生成一个随机数\n    randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n    // 生成一个随机的颜色\n    randomColor(min, max) {\n      let r = this.randomNum(min, max);\n      let g = this.randomNum(min, max);\n      let b = this.randomNum(min, max);\n      return 'rgb(' + r + ',' + g + ',' + b + ')';\n    },\n    drawPic() {\n      let canvas = document.getElementById('s-canvas');\n      let ctx = canvas.getContext('2d');\n      ctx.textBaseline = 'bottom';\n      // 绘制背景\n      ctx.fillStyle = '#e6ecfd';\n      ctx.fillRect(0, 0, this.contentWidth, this.contentHeight);\n      // 绘制文字\n      for (let i = 0; i < this.identifyCode.length; i++) {\n        this.drawText(ctx, this.identifyCode[i], i);\n      }\n      this.drawLine(ctx);\n      this.drawDot(ctx);\n    },\n    drawText(ctx, txt, i) {\n      ctx.fillStyle = this.randomColor(50, 160); // 随机生成字体颜色\n      ctx.font = this.randomNum(this.fontSizeMin, this.fontSizeMax) + 'px SimHei'; // 随机生成字体大小\n      let x = (i + 1) * (this.contentWidth / (this.identifyCode.length + 1));\n      let y = this.randomNum(this.fontSizeMax, this.contentHeight - 5);\n      var deg = this.randomNum(-30, 30);\n      // 修改坐标原点和旋转角度\n      ctx.translate(x, y);\n      ctx.rotate(deg * Math.PI / 180);\n      ctx.fillText(txt, 0, 0);\n      // 恢复坐标原点和旋转角度\n      ctx.rotate(-deg * Math.PI / 180);\n      ctx.translate(-x, -y);\n    },\n    drawLine(ctx) {\n      // 绘制干扰线\n      for (let i = 0; i < 4; i++) {\n        ctx.strokeStyle = this.randomColor(100, 200);\n        ctx.beginPath();\n        ctx.moveTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight));\n        ctx.lineTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight));\n        ctx.stroke();\n      }\n    },\n    drawDot(ctx) {\n      // 绘制干扰点\n      for (let i = 0; i < 30; i++) {\n        ctx.fillStyle = this.randomColor(0, 255);\n        ctx.beginPath();\n        ctx.arc(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight), 1, 0, 2 * Math.PI);\n        ctx.fill();\n      }\n    }\n  },\n  watch: {\n    identifyCode() {\n      this.drawPic();\n    }\n  },\n  mounted() {\n    this.drawPic();\n  }\n};","map":{"version":3,"mappings":"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","names":["name","props","identifyCode","type","String","default","fontSizeMin","Number","fontSizeMax","backgroundColorMin","backgroundColorMax","dotColorMin","dotColorMax","contentWidth","contentHeight","methods","randomNum","min","max","Math","floor","random","randomColor","r","g","b","drawPic","canvas","document","getElementById","ctx","getContext","textBaseline","fillStyle","fillRect","i","length","drawText","drawLine","drawDot","txt","font","x","y","deg","translate","rotate","PI","fillText","strokeStyle","beginPath","moveTo","lineTo","stroke","arc","fill","watch","mounted"],"sourceRoot":"","sources":["C:\\Users\\14486\\Desktop\\社区公益系统前端\\vue_community\\src\\NavigationBar\\PointsGoods.vue"],"sourcesContent":["<template>\r\n  <div class=\"s-canvas\">\r\n    <canvas id=\"s-canvas\" :width=\"contentWidth\" :height=\"contentHeight\"></canvas>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default{\r\n  name: 'SIdentify',\r\n  props: {\r\n    identifyCode: { // 默认注册码\r\n      type: String,\r\n      default: '1234'\r\n    },\r\n    fontSizeMin: { // 字体最小值\r\n      type: Number,\r\n      default: 25\r\n    },\r\n    fontSizeMax: { // 字体最大值\r\n      type: Number,\r\n      default: 35\r\n    },\r\n    backgroundColorMin: { // 验证码图片背景色最小值\r\n      type: Number,\r\n      default: 200\r\n    },\r\n    backgroundColorMax: { // 验证码图片背景色最大值\r\n      type: Number,\r\n      default: 220\r\n    },\r\n    dotColorMin: { // 背景干扰点最小值\r\n      type: Number,\r\n      default: 60\r\n    },\r\n    dotColorMax: { // 背景干扰点最大值\r\n      type: Number,\r\n      default: 120\r\n    },\r\n    contentWidth: { // 容器宽度\r\n      type: Number,\r\n      default: 90\r\n    },\r\n    contentHeight: { // 容器高度\r\n      type: Number,\r\n      default: 38\r\n    }\r\n  },\r\n  methods: {\r\n    // 生成一个随机数\r\n    randomNum (min, max) {\r\n      return Math.floor(Math.random() * (max - min) + min)\r\n    },\r\n\r\n    // 生成一个随机的颜色\r\n    randomColor (min, max) {\r\n      let r = this.randomNum(min, max)\r\n      let g = this.randomNum(min, max)\r\n      let b = this.randomNum(min, max)\r\n      return 'rgb(' + r + ',' + g + ',' + b + ')'\r\n    },\r\n\r\n    drawPic () {\r\n      let canvas = document.getElementById('s-canvas')\r\n      let ctx = canvas.getContext('2d')\r\n      ctx.textBaseline = 'bottom'\r\n      // 绘制背景\r\n      ctx.fillStyle = '#e6ecfd'\r\n      ctx.fillRect(0, 0, this.contentWidth, this.contentHeight)\r\n      // 绘制文字\r\n      for (let i = 0; i < this.identifyCode.length; i++) {\r\n        this.drawText(ctx, this.identifyCode[i], i)\r\n      }\r\n      this.drawLine(ctx)\r\n      this.drawDot(ctx)\r\n    },\r\n\r\n    drawText (ctx, txt, i) {\r\n      ctx.fillStyle = this.randomColor(50, 160) // 随机生成字体颜色\r\n      ctx.font = this.randomNum(this.fontSizeMin, this.fontSizeMax) + 'px SimHei' // 随机生成字体大小\r\n      let x = (i + 1) * (this.contentWidth / (this.identifyCode.length + 1))\r\n      let y = this.randomNum(this.fontSizeMax, this.contentHeight - 5)\r\n      var deg = this.randomNum(-30, 30)\r\n      // 修改坐标原点和旋转角度\r\n      ctx.translate(x, y)\r\n      ctx.rotate(deg * Math.PI / 180)\r\n      ctx.fillText(txt, 0, 0)\r\n      // 恢复坐标原点和旋转角度\r\n      ctx.rotate(-deg * Math.PI / 180)\r\n      ctx.translate(-x, -y)\r\n    },\r\n\r\n    drawLine (ctx) {\r\n      // 绘制干扰线\r\n      for (let i = 0; i < 4; i++) {\r\n        ctx.strokeStyle = this.randomColor(100, 200)\r\n        ctx.beginPath()\r\n        ctx.moveTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\r\n        ctx.lineTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\r\n        ctx.stroke()\r\n      }\r\n    },\r\n\r\n    drawDot (ctx) {\r\n      // 绘制干扰点\r\n      for (let i = 0; i < 30; i++) {\r\n        ctx.fillStyle = this.randomColor(0, 255)\r\n        ctx.beginPath()\r\n        ctx.arc(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight), 1, 0, 2 * Math.PI)\r\n        ctx.fill()\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    identifyCode () {\r\n      this.drawPic()\r\n    }\r\n  },\r\n  mounted () {\r\n    this.drawPic()\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}