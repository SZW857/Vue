{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-41d2c40a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"box-viods\"\n};\nconst _hoisted_2 = {\n  class: \"tzc_demo\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_van_nav_bar = _resolveComponent(\"van-nav-bar\");\n  const _component_video_player = _resolveComponent(\"video-player\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_van_nav_bar, {\n    title: \"监控播放\",\n    \"left-text\": \"\",\n    \"left-arrow\": \"\",\n    onClickLeft: _cache[0] || (_cache[0] = $event => _ctx.$router.go(-1)),\n    fixed: \"\"\n  })]), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_video_player, {\n    class: \"video-player vjs-custom-skin\",\n    ref: \"videoPlayer\",\n    playsinline: true,\n    options: $setup.playerOptions\n  }, null, 8 /* PROPS */, [\"options\"])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAW;;EAOjBA,KAAK,EAAC;AAAU;;;;6DAPrBC,oBAMM,OANNC,UAMM,GALJC,aAGEC;IAFEC,KAAK,EAAC,MAAM;IACZ,WAAS,EAAC,EAAE;IAAC,YAAU,EAAV,EAAU;IAAEC,WAAU,sCAAEC,YAAO,CAACC,EAAE;IAAMC,KAAK,EAAL;QAI3DR,oBAQM,OARNS,UAQM,GAPJP,aAMeQ;IALXX,KAAK,EAAC,8BAA8B;IACpCY,GAAG,EAAC,aAAa;IAChBC,WAAW,EAAE,IAAI;IACjBC,OAAO,EAAEC","names":["class","_createElementVNode","_hoisted_1","_createVNode","_component_van_nav_bar","title","onClickLeft","_ctx","go","fixed","_hoisted_2","_component_video_player","ref","playsinline","options","$setup"],"sourceRoot":"","sources":["C:\\Users\\14486\\Desktop\\社区公益系统前端\\vue_community\\src\\NavigationBar\\test.vue"],"sourcesContent":["<template>\r\n  <div class=\"box-viods\">\r\n    <van-nav-bar\r\n        title=\"监控播放\"\r\n        left-text=\"\" left-arrow @click-left=\"$router.go(-1)\" fixed\r\n    />\r\n\r\n  </div>\r\n  <div class=\"tzc_demo\">\r\n    <video-player\r\n        class=\"video-player vjs-custom-skin\"\r\n        ref=\"videoPlayer\"\r\n        :playsinline=\"true\"\r\n        :options=\"playerOptions\"\r\n    >\r\n    </video-player>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent, ref, onMounted } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport {\r\n  com_list,\r\n  com_cam_list,\r\n  com_cam_list_url,\r\n  comcity_cam,\r\n} from \"@/api/index\";\r\nexport default {\r\n  name: \"vidoList\",\r\n  setup() {\r\n    let $route = useRouter();\r\n    let eqery = {\r\n      guid: $route.currentRoute.value.params.id,\r\n    };\r\n    let video_s = ref();\r\n    //播放器渲染对象\r\n    let playerOptions = ref({\r\n      playbackRates: [0.5, 1.0, 1.5, 2.0], // 可选的播放速度\r\n      autoplay: false, // 如果为true,浏览器准备好时开始回放。\r\n      muted: false, // 默认情况下将会消除任何音频。\r\n      loop: false, // 是否视频一结束就重新开始。\r\n      preload: \"auto\", // 建议浏览器在<video>加载元素后是否应该开始下载视频数据。auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\r\n      language: \"zh-CN\",\r\n      aspectRatio: \"16:9\", // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\r\n      fluid: true, // 当true时，Video.js player将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\r\n      html5: { hls: { withCredentials: false } },\r\n      flash: { hls: { withCredentials: false } },\r\n      sources: [\r\n        {\r\n          type: \"application/x-mpegURL\", // 类型\r\n          src: '', // url地址\r\n        },\r\n      ],\r\n      poster: \"\", // 封面地址\r\n      notSupportedMessage: \"此视频暂无法播放，请稍后再试\", // 允许覆盖Video.js无法播放媒体源时显示的默认信息。\r\n      controlBar: {\r\n        timeDivider: true, // 当前时间和持续时间的分隔符\r\n        durationDisplay: true, // 显示持续时间\r\n        remainingTimeDisplay: false, // 是否显示剩余时间功能\r\n        fullscreenToggle: true, // 是否显示全屏按钮\r\n      },\r\n    });\r\n    //这里执行相对应的接口方法获取你的url地址，为播放器对象进行赋值\r\n    const Video_u = () => {\r\n      com_cam_list_url(eqery)\r\n          .then((res) => {\r\n            video_s.value = res.data.mydata;\r\n            playerOptions.value.sources[0].src=res.data.mydata.recurl;//这里对url赋值\r\n            console.log(\"video\", playerOptions);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n    };\r\n    onMounted(() => {\r\n      Video_u();\r\n    });\r\n    return {\r\n      video_s,\r\n      Video_u,\r\n      playerOptions,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.box-viods {\r\n  margin-bottom: 3.4rem;\r\n  //   .tzc_demo_bt{\r\n  //       width: 100%;\r\n  //       height: 2rem;\r\n  //       text-align: center;\r\n  //       line-height: 2rem;\r\n  //   }\r\n}\r\n.tzc_box_vlist {\r\n  margin-top: 3rem;\r\n  margin-bottom: 4rem;\r\n}\r\n.viods-list {\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  padding: 0 0.5rem;\r\n  padding-top: 0.5rem;\r\n}\r\n.list-title {\r\n  width: 100%;\r\n  height: 2.3rem;\r\n  background: #007acc;\r\n  color: white;\r\n  line-height: 2.4rem;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  box-sizing: border-box;\r\n  padding: 0 0.8rem;\r\n  border-radius: 6px;\r\n}\r\n.list-video {\r\n  width: 100%;\r\n  height: 10rem;\r\n  overflow: hidden;\r\n  background: rgb(233, 246, 255);\r\n  position: relative;\r\n  .tzc_icon_video {\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    font-size: 4rem;\r\n    color: #007acc;\r\n  }\r\n  // img {\r\n  //   width: 100%;\r\n  //   height: auto;\r\n  // }\r\n}\r\n/deep/ .van-nav-bar .van-icon {\r\n  color: #333333;\r\n}\r\n/deep/ .van-nav-bar__title {\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}