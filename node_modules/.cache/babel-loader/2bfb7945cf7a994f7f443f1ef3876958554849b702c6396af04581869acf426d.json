{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, withModifiers as _withModifiers, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createBlock(_component_el_form, {\n    model: $data.dynamicValidateForm,\n    ref: \"dynamicValidateForm\",\n    \"label-width\": \"100px\",\n    class: \"demo-dynamic\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      prop: \"email\",\n      label: \"邮箱\",\n      rules: [{\n        required: true,\n        message: '请输入邮箱地址',\n        trigger: 'blur'\n      }, {\n        type: 'email',\n        message: '请输入正确的邮箱地址',\n        trigger: ['blur', 'change']\n      }]\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.dynamicValidateForm.email,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.dynamicValidateForm.email = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dynamicValidateForm.domains, (domain, index) => {\n      return _openBlock(), _createBlock(_component_el_form_item, {\n        label: '域名' + index,\n        key: domain.key,\n        prop: 'domains.' + index + '.value',\n        rules: {\n          required: true,\n          message: '域名不能为空',\n          trigger: 'blur'\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: domain.value,\n          \"onUpdate:modelValue\": $event => domain.value = $event\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_el_button, {\n          onClick: _withModifiers($event => $options.removeDomain(domain), [\"prevent\"])\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"删除\")]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\", \"prop\"]);\n    }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: _cache[1] || (_cache[1] = $event => $options.submitForm('dynamicValidateForm'))\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"提交\")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_button, {\n        onClick: $options.addDomain\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"新增域名\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        onClick: _cache[2] || (_cache[2] = $event => $options.resetForm('dynamicValidateForm'))\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"重置\")]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"]);\n}","map":{"version":3,"mappings":";;;;;;uBACEA,aAmCUC;IAlCLC,KAAK,EAAEC,yBAAmB;IAC3BC,GAAG,EAAC,qBAAqB;IACzB,aAAW,EAAC,OAAO;IACnBC,KAAK,EAAC;;sBAER,MASe,CATfC,aASeC;MARXC,IAAI,EAAC,OAAO;MACZC,KAAK,EAAC,IAAI;MACTC,KAAK,EAAE;;;;;;;;;;wBAKV,MAAyD,CAAzDJ,aAAyDK;oBAAtCR,yBAAmB,CAACS,KAAK;mEAAzBT,yBAAmB,CAACS,KAAK;;;2BAE9CC,oBAWeC,6BAVeX,yBAAmB,CAACY,OAAO,GAA7CC,MAAM,EAAEC,KAAK;2BADzBjB,aAWeO;QATVE,KAAK,SAASQ,KAAK;QACnBC,GAAG,EAAEF,MAAM,CAACE,GAAG;QACfV,IAAI,eAAeS,KAAK;QACxBP,KAAK,EAAE;;;;;;0BAIV,MACC,CADDJ,aACCK;sBADkBK,MAAM,CAACG,KAAK;2CAAZH,MAAM,CAACG,KAAK;wEAC9Bb,aAA+Dc;UAAnDC,OAAK,2BAAUC,qBAAY,CAACN,MAAM;;4BAAG,MAAE,kBAAF,IAAE;;;;;oCAEtDV,aAMeC;wBALb,MAEC,CAFDD,aAECc;QAFUG,IAAI,EAAC,SAAS;QAAEF,OAAK,sCAAEC,mBAAU;;0BAC3C,MAAE,kBAAF,IAAE;;UAEHhB,aAA8Cc;QAAlCC,OAAK,EAAEC;MAAS;0BAAE,MAAI,kBAAJ,MAAI;;sCAClChB,aAAmEc;QAAvDC,OAAK,sCAAEC,kBAAS;;0BAAyB,MAAE,kBAAF,IAAE","names":["_createBlock","_component_el_form","model","$data","ref","class","_createVNode","_component_el_form_item","prop","label","rules","_component_el_input","email","_createElementBlock","_Fragment","domains","domain","index","key","value","_component_el_button","onClick","$options","type"],"sourceRoot":"","sources":["C:\\Users\\14486\\Desktop\\社区公益系统前端\\vue_community\\src\\NavigationBar\\PointsGoods.vue"],"sourcesContent":["<template>\r\n  <el-form\r\n      :model=\"dynamicValidateForm\"\r\n      ref=\"dynamicValidateForm\"\r\n      label-width=\"100px\"\r\n      class=\"demo-dynamic\"\r\n  >\r\n    <el-form-item\r\n        prop=\"email\"\r\n        label=\"邮箱\"\r\n        :rules=\"[\r\n      { required: true, message: '请输入邮箱地址', trigger: 'blur' },\r\n      { type: 'email', message: '请输入正确的邮箱地址', trigger: ['blur', 'change'] }\r\n    ]\"\r\n    >\r\n      <el-input v-model=\"dynamicValidateForm.email\"></el-input>\r\n    </el-form-item>\r\n    <el-form-item\r\n        v-for=\"(domain, index) in dynamicValidateForm.domains\"\r\n        :label=\"'域名' + index\"\r\n        :key=\"domain.key\"\r\n        :prop=\"'domains.' + index + '.value'\"\r\n        :rules=\"{\r\n      required: true, message: '域名不能为空', trigger: 'blur'\r\n    }\"\r\n    >\r\n      <el-input v-model=\"domain.value\"></el-input\r\n      ><el-button @click.prevent=\"removeDomain(domain)\">删除</el-button>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-button type=\"primary\" @click=\"submitForm('dynamicValidateForm')\"\r\n      >提交</el-button\r\n      >\r\n      <el-button @click=\"addDomain\">新增域名</el-button>\r\n      <el-button @click=\"resetForm('dynamicValidateForm')\">重置</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: '',\r\n      message: '',\r\n      dynamicValidateForm: {\r\n        domains: [\r\n          {\r\n            value: '',\r\n          },\r\n        ],\r\n        email: '',\r\n      },\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          alert('submit!')\r\n        } else {\r\n          console.log('error submit!!')\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    },\r\n    removeDomain(item) {\r\n      var index = this.dynamicValidateForm.domains.indexOf(item)\r\n      if (index !== -1) {\r\n        this.dynamicValidateForm.domains.splice(index, 1)\r\n      }\r\n    },\r\n    addDomain() {\r\n      this.dynamicValidateForm.domains.push({\r\n        value: '',\r\n        key: Date.now(),\r\n      })\r\n    },\r\n    email_blur() {\r\n      var verify = /^\\w[-\\w.+]*@([A-Za-z0-9][-A-Za-z0-9]+\\.)+[A-Za-z]{2,14}/;\r\n      if (!verify.test(this.email)) {\r\n        this.message = '邮箱格式错误, 请重新输入'\r\n      } else {\r\n        this.message = '可以请求接口了'\r\n\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}