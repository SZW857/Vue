{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Geometric objects\n\nimport BoundingBox from './bbox';\n\n/**\n * A bézier path containing a set of path commands similar to a SVG path.\n * Paths can be drawn on a context using `draw`.\n * @exports opentype.Path\n * @class\n * @constructor\n */\nfunction Path() {\n  this.commands = [];\n  this.fill = 'black';\n  this.stroke = null;\n  this.strokeWidth = 1;\n}\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.moveTo = function (x, y) {\n  this.commands.push({\n    type: 'M',\n    x: x,\n    y: y\n  });\n};\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.lineTo = function (x, y) {\n  this.commands.push({\n    type: 'L',\n    x: x,\n    y: y\n  });\n};\n\n/**\n * Draws cubic curve\n * @function\n * curveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws cubic curve\n * @function\n * bezierCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n * @see curveTo\n */\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function (x1, y1, x2, y2, x, y) {\n  this.commands.push({\n    type: 'C',\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2,\n    x: x,\n    y: y\n  });\n};\n\n/**\n * Draws quadratic curve\n * @function\n * quadraticCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws quadratic curve\n * @function\n * quadTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function (x1, y1, x, y) {\n  this.commands.push({\n    type: 'Q',\n    x1: x1,\n    y1: y1,\n    x: x,\n    y: y\n  });\n};\n\n/**\n * Closes the path\n * @function closePath\n * @memberof opentype.Path.prototype\n */\n\n/**\n * Close the path\n * @function close\n * @memberof opentype.Path.prototype\n */\nPath.prototype.close = Path.prototype.closePath = function () {\n  this.commands.push({\n    type: 'Z'\n  });\n};\n\n/**\n * Add the given path or list of commands to the commands of this path.\n * @param  {Array} pathOrCommands - another opentype.Path, an opentype.BoundingBox, or an array of commands.\n */\nPath.prototype.extend = function (pathOrCommands) {\n  if (pathOrCommands.commands) {\n    pathOrCommands = pathOrCommands.commands;\n  } else if (pathOrCommands instanceof BoundingBox) {\n    const box = pathOrCommands;\n    this.moveTo(box.x1, box.y1);\n    this.lineTo(box.x2, box.y1);\n    this.lineTo(box.x2, box.y2);\n    this.lineTo(box.x1, box.y2);\n    this.close();\n    return;\n  }\n  Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n/**\n * Calculate the bounding box of the path.\n * @returns {opentype.BoundingBox}\n */\nPath.prototype.getBoundingBox = function () {\n  const box = new BoundingBox();\n  let startX = 0;\n  let startY = 0;\n  let prevX = 0;\n  let prevY = 0;\n  for (let i = 0; i < this.commands.length; i++) {\n    const cmd = this.commands[i];\n    switch (cmd.type) {\n      case 'M':\n        box.addPoint(cmd.x, cmd.y);\n        startX = prevX = cmd.x;\n        startY = prevY = cmd.y;\n        break;\n      case 'L':\n        box.addPoint(cmd.x, cmd.y);\n        prevX = cmd.x;\n        prevY = cmd.y;\n        break;\n      case 'Q':\n        box.addQuad(prevX, prevY, cmd.x1, cmd.y1, cmd.x, cmd.y);\n        prevX = cmd.x;\n        prevY = cmd.y;\n        break;\n      case 'C':\n        box.addBezier(prevX, prevY, cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        prevX = cmd.x;\n        prevY = cmd.y;\n        break;\n      case 'Z':\n        prevX = startX;\n        prevY = startY;\n        break;\n      default:\n        throw new Error('Unexpected path command ' + cmd.type);\n    }\n  }\n  if (box.isEmpty()) {\n    box.addPoint(0, 0);\n  }\n  return box;\n};\n\n/**\n * Draw the path to a 2D context.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context.\n */\nPath.prototype.draw = function (ctx) {\n  ctx.beginPath();\n  for (let i = 0; i < this.commands.length; i += 1) {\n    const cmd = this.commands[i];\n    if (cmd.type === 'M') {\n      ctx.moveTo(cmd.x, cmd.y);\n    } else if (cmd.type === 'L') {\n      ctx.lineTo(cmd.x, cmd.y);\n    } else if (cmd.type === 'C') {\n      ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n    } else if (cmd.type === 'Q') {\n      ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n    } else if (cmd.type === 'Z') {\n      ctx.closePath();\n    }\n  }\n  if (this.fill) {\n    ctx.fillStyle = this.fill;\n    ctx.fill();\n  }\n  if (this.stroke) {\n    ctx.strokeStyle = this.stroke;\n    ctx.lineWidth = this.strokeWidth;\n    ctx.stroke();\n  }\n};\n\n/**\n * Convert the Path to a string of path data instructions\n * See http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {string}\n */\nPath.prototype.toPathData = function (decimalPlaces) {\n  decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n  function floatToString(v) {\n    if (Math.round(v) === v) {\n      return '' + Math.round(v);\n    } else {\n      return v.toFixed(decimalPlaces);\n    }\n  }\n  function packValues() {\n    let s = '';\n    for (let i = 0; i < arguments.length; i += 1) {\n      const v = arguments[i];\n      if (v >= 0 && i > 0) {\n        s += ' ';\n      }\n      s += floatToString(v);\n    }\n    return s;\n  }\n  let d = '';\n  for (let i = 0; i < this.commands.length; i += 1) {\n    const cmd = this.commands[i];\n    if (cmd.type === 'M') {\n      d += 'M' + packValues(cmd.x, cmd.y);\n    } else if (cmd.type === 'L') {\n      d += 'L' + packValues(cmd.x, cmd.y);\n    } else if (cmd.type === 'C') {\n      d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n    } else if (cmd.type === 'Q') {\n      d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n    } else if (cmd.type === 'Z') {\n      d += 'Z';\n    }\n  }\n  return d;\n};\n\n/**\n * Convert the path to an SVG <path> element, as a string.\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {string}\n */\nPath.prototype.toSVG = function (decimalPlaces) {\n  let svg = '<path d=\"';\n  svg += this.toPathData(decimalPlaces);\n  svg += '\"';\n  if (this.fill && this.fill !== 'black') {\n    if (this.fill === null) {\n      svg += ' fill=\"none\"';\n    } else {\n      svg += ' fill=\"' + this.fill + '\"';\n    }\n  }\n  if (this.stroke) {\n    svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n  }\n  svg += '/>';\n  return svg;\n};\n\n/**\n * Convert the path to a DOM element.\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {SVGPathElement}\n */\nPath.prototype.toDOMElement = function (decimalPlaces) {\n  const temporaryPath = this.toPathData(decimalPlaces);\n  const newPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n  newPath.setAttribute('d', temporaryPath);\n  return newPath;\n};\nexport default Path;","map":{"version":3,"names":["BoundingBox","Path","commands","fill","stroke","strokeWidth","prototype","moveTo","x","y","push","type","lineTo","curveTo","bezierCurveTo","x1","y1","x2","y2","quadTo","quadraticCurveTo","close","closePath","extend","pathOrCommands","box","Array","apply","getBoundingBox","startX","startY","prevX","prevY","i","length","cmd","addPoint","addQuad","addBezier","Error","isEmpty","draw","ctx","beginPath","fillStyle","strokeStyle","lineWidth","toPathData","decimalPlaces","undefined","floatToString","v","Math","round","toFixed","packValues","s","arguments","d","toSVG","svg","toDOMElement","temporaryPath","newPath","document","createElementNS","setAttribute"],"sources":["C:/Users/14486/Desktop/社区公益系统前端/vue_community/node_modules/opentype.js/src/path.js"],"sourcesContent":["// Geometric objects\n\nimport BoundingBox from './bbox';\n\n/**\n * A bézier path containing a set of path commands similar to a SVG path.\n * Paths can be drawn on a context using `draw`.\n * @exports opentype.Path\n * @class\n * @constructor\n */\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.moveTo = function(x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.lineTo = function(x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Draws cubic curve\n * @function\n * curveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws cubic curve\n * @function\n * bezierCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n * @see curveTo\n */\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Draws quadratic curve\n * @function\n * quadraticCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws quadratic curve\n * @function\n * quadTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Closes the path\n * @function closePath\n * @memberof opentype.Path.prototype\n */\n\n/**\n * Close the path\n * @function close\n * @memberof opentype.Path.prototype\n */\nPath.prototype.close = Path.prototype.closePath = function() {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n/**\n * Add the given path or list of commands to the commands of this path.\n * @param  {Array} pathOrCommands - another opentype.Path, an opentype.BoundingBox, or an array of commands.\n */\nPath.prototype.extend = function(pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    } else if (pathOrCommands instanceof BoundingBox) {\n        const box = pathOrCommands;\n        this.moveTo(box.x1, box.y1);\n        this.lineTo(box.x2, box.y1);\n        this.lineTo(box.x2, box.y2);\n        this.lineTo(box.x1, box.y2);\n        this.close();\n        return;\n    }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n/**\n * Calculate the bounding box of the path.\n * @returns {opentype.BoundingBox}\n */\nPath.prototype.getBoundingBox = function() {\n    const box = new BoundingBox();\n\n    let startX = 0;\n    let startY = 0;\n    let prevX = 0;\n    let prevY = 0;\n    for (let i = 0; i < this.commands.length; i++) {\n        const cmd = this.commands[i];\n        switch (cmd.type) {\n            case 'M':\n                box.addPoint(cmd.x, cmd.y);\n                startX = prevX = cmd.x;\n                startY = prevY = cmd.y;\n                break;\n            case 'L':\n                box.addPoint(cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'Q':\n                box.addQuad(prevX, prevY, cmd.x1, cmd.y1, cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'C':\n                box.addBezier(prevX, prevY, cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'Z':\n                prevX = startX;\n                prevY = startY;\n                break;\n            default:\n                throw new Error('Unexpected path command ' + cmd.type);\n        }\n    }\n    if (box.isEmpty()) {\n        box.addPoint(0, 0);\n    }\n    return box;\n};\n\n/**\n * Draw the path to a 2D context.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context.\n */\nPath.prototype.draw = function(ctx) {\n    ctx.beginPath();\n    for (let i = 0; i < this.commands.length; i += 1) {\n        const cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n/**\n * Convert the Path to a string of path data instructions\n * See http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {string}\n */\nPath.prototype.toPathData = function(decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        let s = '';\n        for (let i = 0; i < arguments.length; i += 1) {\n            const v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    let d = '';\n    for (let i = 0; i < this.commands.length; i += 1) {\n        const cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n/**\n * Convert the path to an SVG <path> element, as a string.\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {string}\n */\nPath.prototype.toSVG = function(decimalPlaces) {\n    let svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill && this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n\n    svg += '/>';\n    return svg;\n};\n\n/**\n * Convert the path to a DOM element.\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {SVGPathElement}\n */\nPath.prototype.toDOMElement = function(decimalPlaces) {\n    const temporaryPath = this.toPathData(decimalPlaces);\n    const newPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\n    newPath.setAttribute('d', temporaryPath);\n\n    return newPath;\n};\n\nexport default Path;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}